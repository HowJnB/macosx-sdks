# EOControlJava.jobs
# Copyright (c) 1997, Apple Computer, Inc. All rights reserved. 

# Pseudo-comments controlling exposition of interfaces and directories; human
# readers please note: these pseudo-comments *must* appear *before* the header
# directive for the moment, or they will not be obeyed!

#
# The name of this package.
#
name EOControlJava

# Pseudo-comment giving WrapIt the name of the default package name.

#> package com.apple.yellow.eocontrol

#
# Source of the Objective C interfaces specifications.
#
header EOControlJava.h

#
# What other .jobs files bridget should include (for class mappings,
# type definitions, etc.)
#
import FoundationJava.jobs

#
# Header files that are to be imported in the stub files.
#
stub-import EOControlJava.h

# Initialization of the Java framework, outside of what the bridge does.

postinit-callout _InitializeEOControlJava

# Mapping of Objective C types to Java basic types or classes.

type
    EODeleteRule = int
    EOEventSignatureType = int
    EOObserverPriority = int

# Mapping of Objective C selectors to Java methods.

selector
	+_eventDescriptionForEventType: = eventDescriptionForEventType
    +encodeObject:withCoder: = encodeObjectWithCoder
    +filterArray:withQualifier: = filterArrayWithQualifier
    +filteredArray:withQualifier: = filteredArrayWithQualifier
    +initObject:withCoder: = initObjectWithCoder
    +null = nullValue
    +sortArray:usingKeyOrderArray: = sortArrayUsingKeyOrderArray
    +sortedArray:usingKeyOrderArray: = sortedArrayUsingKeyOrderArray
    -addObject:toBothSidesOfRelationshipWithKey: = addObjectToBothSidesOfRelationshipWithKey
    -addObject:toPropertyWithKey: = addObjectToPropertyWithKey
    -archiver:referenceToEncodeForObject: = referenceToEncodeForObject
    -awakeFromFetchInEditingContext: = awakeFromFetch
    -awakeFromInsertionInEditingContext: = awakeFromInsertion
    -awakeObject:fromFetchInEditingContext: = awakeObjectFromFetch
    -awakeObject:fromInsertionInEditingContext: = awakeObjectFromInsertion
    -editingContext:didForgetObjectWithGlobalID: = editingContextDidForgetObjectWithGlobalID
    -editingContext:presentErrorMessage: = editingContextPresentErrorMessage
    -editingContext:shouldContinueFetchingWithCurrentObjectCount:originalLimit:objectStore: = editingContextShouldContinueFetching
    -editingContext:shouldFetchObjectsDescribedByFetchSpecification: = editingContextShouldFetchObjects
    -editingContext:shouldInvalidateObject:globalID: = editingContextShouldInvalidateObject
    -editingContext:shouldMergeChangesForObject: = editingContextShouldMergeChangesForObject
    -editingContext:shouldPresentException: = editingContextShouldPresentException
    -faultForRawRow:entityNamed: = faultForRawRow
    -faultForRawRow:entityNamed:editingContext: = faultForRawRow
    -handleTakeValue:forUnboundKey: = handleTakeValueForUnboundKey
    -initWithEntityName:qualifier:sortOrderings:usesDistinct:isDeep:hints: = initFetchSpec
    -insertObject:withGlobalID: = insertObjectWithGlobalID
    -isKindOfClass:forFault: = isKindOfClass
    -isMemberOfClass:forFault: = isMemberOfClass
    -objectsWithFetchSpecification: = objectsWithFetchSpecification
    -objectsWithFetchSpecification:editingContext: = objectsWithFetchSpecification
    +registerClassDescription:forClass: = registerClassDescription
    -removeObject:fromBothSidesOfRelationshipWithKey: = removeObjectFromBothSidesOfRelationshipWithKey
    -removeObject:fromPropertyWithKey: = removeObjectFromPropertyWithKey
    -respondsToSelector:forFault: = respondsToSelectorForFault
    -setValue:inObject: = setValueInObject
    -takeStoredValue:forKey: = takeStoredValueForKey
    -takeValue:forKey: = takeValueForKey
    -takeValue:forKeyPath: = takeValueForKeyPath
    -unableToSetNilForKey: = unableToSetNullForKey
    -unarchiver:objectForReference: = unarchiverObjectForReference
	+allEvents = globalAllEvents
	+eventsOfClass:type: = globalEventsOfClass
	+resetLogging = globalResetLogging
	+rootEvents = globalRootEvents

# Exposed protocol interfaces.

protocol EOEnterpriseObject = com.apple.yellow.eocontrol.EOEnterpriseObject
    implements EOKeyBindingCreation
    implements EOKeyValueCodingAdditions
    implements EORelationshipManipulation
    implements EODeferredFaulting
    implements EOValidation

    -allPropertyKeys
    -attributeKeys
    -awakeFromFetchInEditingContext:
    -awakeFromInsertionInEditingContext:
    -changesFromSnapshot:
    -classDescription
    -classDescriptionForDestinationKey:
    -clearProperties
    -deleteRuleForRelationshipKey:
    -editingContext
    -entityName
    -eoDescription
    -eoShallowDescription
    -userPresentableDescription
    -inverseForRelationshipKey:
    -isToManyKey:
    -ownsDestinationObjectsForRelationshipKey:
    -propagateDeleteWithEditingContext:
    -reapplyChangesFromDictionary:
    -snapshot
    -toManyRelationshipKeys
    -toOneRelationshipKeys
    -updateFromSnapshot:
    -willChange

protocol EOEventRecordingHandler = com.apple.yellow.eocontrol.EOEventCenter.EventRecordingHandler
	-setLoggingEnabled:forEventClass:

protocol EOFaulting = com.apple.yellow.eocontrol.EOFaulting
    -willRead

protocol EODeferredFaulting = com.apple.yellow.eocontrol.EODeferredFaulting
    implements EOFaulting
    -willReadRelationship:

protocol EOKeyBindingCreation = com.apple.yellow.eocontrol.EOKeyValueCoding.KeyBindingCreation
    -createKeyValueBindingForKey:typeMask:
    -keyValueBindingForKey:typeMask:

protocol EOKeyValueArchiving = com.apple.yellow.eocontrol.EOKeyValueArchiving
    -encodeWithKeyValueArchiver:
    constructor -initWithKeyValueUnarchiver:

protocol EOKeyValueCoding = com.apple.yellow.eocontrol.EOKeyValueCoding
    -handleQueryWithUnboundKey:
    -handleTakeValue:forUnboundKey:
    -unableToSetNilForKey:
    -storedValueForKey:
    -takeStoredValue:forKey:
    -takeValue:forKey:
    -valueForKey:

    @{
        public static final int SetKeyBindingMask = 1;
        public static final int StoredKeyBindingMask = 2;
    @}

protocol EOKeyValueCodingAdditions = com.apple.yellow.eocontrol.EOKeyValueCodingAdditions
    implements EOKeyValueCoding
    -valueForKeyPath:
    -takeValue:forKeyPath:
    -valuesForKeys:
    -takeValuesFromDictionary:

    @{
        public static final String KeyPathSeparator = ".";
    @}

protocol EOObserving = com.apple.yellow.eocontrol.EOObserving
    -objectWillChange:

protocol EOQualifierEvaluation = com.apple.yellow.eocontrol.EOQualifierEvaluation
    -evaluateWithObject:

protocol EORelationshipManipulation = com.apple.yellow.eocontrol.EORelationshipManipulation
    -addObject:toPropertyWithKey:
    -removeObject:fromPropertyWithKey:
    -addObject:toBothSidesOfRelationshipWithKey:
    -removeObject:fromBothSidesOfRelationshipWithKey:

protocol EOValidation = com.apple.yellow.eocontrol.EOValidation
    @{
        public void validateForSave() throws EOValidation.Exception;
        public void validateForUpdate() throws EOValidation.Exception;
        public void validateForInsert() throws EOValidation.Exception;
        public void validateForDelete() throws EOValidation.Exception;
        public Object validateValueForKey(Object value, String key) throws EOValidation.Exception;
        public Object validateTakeValueForKeyPath(Object value, String keyPath) throws EOValidation.Exception;

        public static class Exception extends NSException {

            public static final String AdditionalExceptionsKey = "EOAdditionalExceptionsKey";
            public static final String ValidatedObjectUserInfoKey = "EOValidatedObjectUserInfoKey";
            public static final String ValidatedPropertyUserInfoKey = "EOValidatedPropertyUserInfoKey";

            public Exception(String message) {
                this(message, null);
            }

            public Exception(String message, NSDictionary userInfo) {
                super("EOValidationException", message, userInfo);
            }

            public static Exception aggregateExceptionWithExceptions(NSArray subExceptions) {
                Exception result, primaryException;
                NSMutableDictionary userInfo;

                if ((subExceptions == null) || (subExceptions.count() == 0)) {
                    return null;
                }

                primaryException = (Exception)subExceptions.objectAtIndex(0);
                if (primaryException.userInfo() != null) {
                    userInfo = new NSMutableDictionary((NSDictionary)primaryException.userInfo());
                } else {
                    userInfo = new NSMutableDictionary();
                }

                userInfo.setObjectForKey(subExceptions, AdditionalExceptionsKey);
                return new Exception(primaryException.getMessage(), userInfo);
            }
        }
    @}

# Exposed category interfaces.

category NSObject(EOEditors) = com.apple.yellow.eocontrol.EOEditingContext.Editor
    -editingContextWillSaveChanges:
    -editorHasChangesForEditingContext:

category NSObject(EOKeyValueArchiverDelegation) = com.apple.yellow.eocontrol.EOKeyValueArchiver.Delegate
    -archiver:referenceToEncodeForObject:

category NSObject(EOKeyValueArchivingAwakeMethods) = com.apple.yellow.eocontrol.EOKeyValueArchiver.Awaking
    -awakeFromKeyValueUnarchiver:
    -finishInitializationWithKeyValueUnarchiver:

category NSObject(EOKeyValueUnarchiverDelegation) = com.apple.yellow.eocontrol.EOKeyValueUnarchiver.Delegate
    -unarchiver:objectForReference:

category NSObject(EOMappedClassDescriptionClassDelegate) = com.apple.yellow.eocontrol.EOClassDescription.ClassDelegate
    -shouldPropagateDeleteForObject:inEditingContext:forRelationshipKey:

category NSObject(EOMappedEditingContextDelegation) = com.apple.yellow.eocontrol.EOEditingContext.Delegate
    -editingContextDidMergeChanges:
    -editingContext:shouldFetchObjectsDescribedByFetchSpecification:
    -editingContext:shouldInvalidateObject:globalID:
    -editingContext:shouldMergeChangesForObject:
    -editingContext:shouldPresentException:
    -editingContextShouldUndoUserActionsAfterFailure:
    -editingContextShouldValidateChanges:
    -editingContextWillSaveChanges:

category NSObject(EOMessageHandlers) = com.apple.yellow.eocontrol.EOEditingContext.MessageHandler
    -editingContext:presentErrorMessage:
    -editingContext:shouldContinueFetchingWithCurrentObjectCount:originalLimit:objectStore:

# Exposed class interfaces.

class EOAggregateEvent = com.apple.yellow.eocontrol.EOAggregateEvent
    -addEvent:
    -events

class EOAndQualifier = com.apple.yellow.eocontrol.EOAndQualifier
    implements EOQualifierEvaluation
    constructor -initWithQualifierArray:
    -qualifierWithBindings:requiresAllVariables:
    -qualifiers
    -validateKeysWithRootClassDescription:

class EOArrayDataSource = com.apple.yellow.eocontrol.EOArrayDataSource
    constructor -initWithClassDescription:editingContext:
    -dataSourceQualifiedByKey:
    -deleteObject:
    -insertObject:
    -qualifyWithRelationshipKey:ofObject:
    -setArray:

class EOCustomObject = abstract com.apple.yellow.eocontrol.EOCustomObject
    implements EOEnterpriseObject
    +accessInstanceVariablesDirectly
    +flushAllKeyBindings
    constructor -initWithEditingContext:classDescription:globalID:
    constructor -init
    +useDeferredFaultCreation
    +useStoredAccessor

    @{
        public native void validateForSave() throws EOValidation.Exception;
        public native void validateForUpdate() throws EOValidation.Exception;
        public native void validateForInsert() throws EOValidation.Exception;
        public native void validateForDelete() throws EOValidation.Exception;
        public native Object validateValueForKey(Object value, String key) throws EOValidation.Exception;
        public native Object validateTakeValueForKeyPath(Object value, String keyPath) throws EOValidation.Exception;
    @}

class EOClassDescription = abstract com.apple.yellow.eocontrol.EOClassDescription
    -attributeKeys
    -awakeObject:fromFetchInEditingContext:
    -awakeObject:fromInsertionInEditingContext:
    +classDelegate
    +classDescriptionForClass:
    -classDescriptionForDestinationKey:
    +classDescriptionForEntityName:
    -defaultFormatterForKey:
    -defaultFormatterForKeyPath:
    -deleteRuleForRelationshipKey:
    -displayNameForKey:
    -userPresentableDescriptionForObject:
    -entityName
    -fetchSpecificationNamed:
    +invalidateClassDescriptionCache
    -inverseForRelationshipKey:
    -ownsDestinationObjectsForRelationshipKey:
    -propagateDeleteForObject:editingContext:
    +registerClassDescription:forClass:
    +setClassDelegate:
    -toManyRelationshipKeys
    -toOneRelationshipKeys

    @{
        public static final int DeleteRuleNullify = 0;
        public static final int DeleteRuleCascade = 1;
        public static final int DeleteRuleDeny = 2;
        public static final int DeleteRuleNoAction = 3;

        public static final String ClassDescriptionNeededForClassNotification = "EOClassDescriptionNeededNotification";
        public static final String ClassDescriptionNeededForEntityNameNotification = "EOClassDescriptionNeededForEntityNameNotification";

        public native Object validateValueForKey(Object value, String key) throws EOValidation.Exception;
        public native void validateObjectForSave(EOEnterpriseObject object) throws EOValidation.Exception;
        public native void validateObjectForDelete(EOEnterpriseObject object) throws EOValidation.Exception;

        public native EOEnterpriseObject createInstanceWithEditingContext(EOEditingContext context, EOGlobalID gid);
    @}

class EOCooperatingObjectStore = abstract com.apple.yellow.eocontrol.EOCooperatingObjectStore
    abstract -commitChanges
    abstract -handlesFetchSpecification:
    abstract -ownsGlobalID:
    abstract -ownsObject:
    abstract -performChanges
    abstract -prepareForSaveWithCoordinator:editingContext:
    abstract -recordChangesInEditingContext
    abstract -recordUpdateForObject:changes:
    abstract -rollbackChanges
    abstract -valuesForKeys:object:

class EODataSource = abstract com.apple.yellow.eocontrol.EODataSource
    -classDescriptionForObjects
    -createObject
    abstract -dataSourceQualifiedByKey:
    abstract -deleteObject:
    -editingContext
    -fetchObjects
    abstract -insertObject:
    abstract -qualifyWithRelationshipKey:ofObject:

class EODelayedObserver = abstract com.apple.yellow.eocontrol.EODelayedObserver
    implements EOObserving

    -discardPendingNotification
    -observerQueue
    -priority
    abstract -subjectChanged

    @{
        public static final int ObserverPriorityImmediate = 0;
        public static final int ObserverPriorityFirst = 1;
        public static final int ObserverPrioritySecond = 2;
        public static final int ObserverPriorityThird = 3;
        public static final int ObserverPriorityFourth = 4;
        public static final int ObserverPriorityFifth = 5;
        public static final int ObserverPrioritySixth = 6;
        public static final int ObserverPriorityLater = 7;
        public static final int ObserverNumberOfPriorities = 8;
    @}

class EODelayedObserverQueue = com.apple.yellow.eocontrol.EODelayedObserverQueue
    +defaultObserverQueue
    -dequeueObserver:
    -enqueueObserver:
    -notifyObserversUpToPriority:
    -runLoopModes
    -setRunLoopModes:

    @{
        public static final int FlushDelayedObserversRunLoopOrdering = 400000;
    @}

class EODetailDataSource = com.apple.yellow.eocontrol.EODetailDataSource
    -dataSourceQualifiedByKey:
    -deleteObject:
    -detailKey
    -editingContext
    constructor -initWithMasterClassDescription:detailKey:
    constructor -initWithMasterDataSource:detailKey:
    -insertObject:
    -masterClassDescription
    -masterDataSource
    -masterObject
    -qualifyWithRelationshipKey:ofObject:
    -setMasterClassDescription:

class EOEditingContext = com.apple.yellow.eocontrol.EOEditingContext
    implements EOObserving
    -addEditor:
    -arrayFaultWithSourceGlobalID:relationshipName:editingContext:
    -committedSnapshotForObject:
    -currentEventSnapshotForObject:
    +defaultFetchTimestampLag
    +defaultParentObjectStore
    -delegate
    -deletedObjects
    -deleteObject:
    -editingContext:didForgetObjectWithGlobalID:
    -editors
    +encodeObject:withCoder:
    -faultForGlobalID:editingContext:
    -faultForRawRow:entityNamed:
    -faultForRawRow:entityNamed:editingContext:
    -fetchTimestamp
    -forgetObject:
    -globalIDForObject:
    -hasChanges
    constructor -init
    -initializeObject:withGlobalID:editingContext:
    +initObject:withCoder:
    constructor -initWithParentObjectStore:
    -insertedObjects
    -insertObject:
    -insertObject:withGlobalID:
    +instancesRetainRegisteredObjects 
    -invalidateAllObjects
    -invalidateObjectsWithGlobalIDs:
    -invalidatesObjectsWhenFinalized
    deprecated -invalidatesObjectsWhenFreed
    -isObjectLockedWithGlobalID:editingContext:
    -lock
    -lockObject:
    -lockObjectWithGlobalID:editingContext:
    -locksObjectsBeforeFirstModification
    -messageHandler
    -objectForGlobalID:
    -objectsForSourceGlobalID:relationshipName:editingContext:
    -objectsWithFetchSpecification:
    -objectsWithFetchSpecification:editingContext:
    -parentObjectStore
    -processRecentChanges
    -propagatesDeletesAtEndOfEvent
    -recordObject:globalID:
    -redo
    -refault
    -refaultObject:withGlobalID:editingContext:
    -refaultObjects
    -refetch
    -registeredObjects
    -removeEditor:
    -reset
    -revert
    -rootObjectStore
# saveChanges and saveChangesInEditingContext: are wrapped by hand for 
# special exception handling - see EOValidation.m
#    -saveChanges
#    -saveChangesInEditingContext:
    +setDefaultFetchTimestampLag:
    +setDefaultParentObjectStore:
    -setDelegate:
    -setFetchTimestamp:
    +setInstancesRetainRegisteredObjects:
    -setInvalidatesObjectsWhenFinalized:
    deprecated -setInvalidatesObjectsWhenFreed:
    -setLocksObjectsBeforeFirstModification:
    -setMessageHandler:
    -setPropagatesDeletesAtEndOfEvent:
    -setStopsValidationAfterFirstError:
    -setSharedEditingContext:
    +setSubstitutionEditingContext:
    -setUndoManager:
    +setUsesContextRelativeEncoding:
    -sharedEditingContext
    -stopsValidationAfterFirstError
    +substitutionEditingContext
    -undo
    -undoManager
    -unlock
    -updatedObjects
    +usesContextRelativeEncoding
    -_retainCountForObjectWithGlobalID:

    @{
        public static final String ObjectsChangedInEditingContextNotification = "EOObjectsChangedInEditingContextNotification";
        public static final String EditingContextDidSaveChangesNotification = "EOEditingContextDidSaveChangesNotification";

        public static final int EditingContextFlushChangesRunLoopOrdering = 300000;

        public native void saveChanges();
        public native void saveChangesInEditingContext(EOEditingContext ec);
    @}

class EOSharedEditingContext = com.apple.yellow.eocontrol.EOSharedEditingContext
    +defaultSharedEditingContext
    -lockForReading
    -retrieveReaderLocks
    +setDefaultSharedEditingContext:
    -suspendReaderLocks
    -tryLockForReading
    -unlockForReading
    -objectsByEntityName
    -objectsByEntityNameAndFetchSpecificationName
    -bindObjectsWithFetchSpecification:toName:

    @{
        public static final String DefaultSharedEditingContextWasInitializedNotification = "EODefaultSharedEditingContextWasInitializedNotification";
        public static final String SharedEditingContextInitializedObjectsNotification = "EOSharedEditingContextInitializedObjectsNotification";
    @}

class EOEvent = com.apple.yellow.eocontrol.EOEvent
    +aggregateEvents:bySignatureOfType:
    -comment
    -description
    -displayComponentName
    -duration
    -durationWithoutSubevents
    -type
    +groupEvents:bySignatureOfType:
    -info
    -markAtomicWithInfo:
    -markEnd
    -markStartWithInfo:
    -parentEvent
    -setType:
    -setInfo:
    -signatureOfType:
    -startDate
    -subevents
    -title

    @{
        public static final int BasicEventSignature = 0;
        public static final String EventGroupName = "EOEventGroupName";
    @}

class EOEventCenter = com.apple.yellow.eocontrol.EOEventCenter
	+allCenters
	-allEvents
	+allEvents
	+password
	+setPassword:
	+currentCenter
	+cancelEvent:
	-eventsOfClass:type:
	+eventsOfClass:type:
	+markAtomicEvent:info:
	+markEndOfEvent:
	+markStartOfEvent:info:
	+newEventOfClass:type:
	+registerEventClass:handler:
	+registeredEventClasses
	+recordsEventsForClass:
	+resetLogging
	-resetLogging
	+resumeLogging
	+rootEvents
	-rootEvents
	+rootEventsByDuration
	+setRecordsEvents:forClass:
	+suspendLogging

    @{
        public static final String EventLoggingOverflowDisplay = "EOEventLoggingOverflowDisplay";
        public static final String EventLoggingEnabled = "EOEventLoggingEnabled";
        public static final String EventLoggingLimit = "EOEventLoggingLimit";
    @}


class EOFaultHandler = abstract com.apple.yellow.eocontrol.EOFaultHandler
    -classForFault:
    +clearFault:
    abstract -completeInitializationOfObject:
    -decrementExtraRefCountIsZero
    -descriptionForObject:
    -extraRefCount
    -faultWillFire:
    +handlerForFault:
    -incrementExtraRefCount
    -createFaultForDeferredFault:sourceObject:
    +isFault:
    -isKindOfClass:forFault:
    -isMemberOfClass:forFault:
    +makeObjectIntoFault:withHandler:
    -respondsToSelector:forFault:
    -targetClass
    +targetClassForFault:

class EOFetchSpecification = com.apple.yellow.eocontrol.EOFetchSpecification
    -entityName
    -fetchesRawRows
    -fetchLimit
    +fetchSpecificationNamed:entityNamed:
    -fetchSpecificationWithQualifierBindings:
    -hints
    constructor -init
    constructor -initWithEntityName:qualifier:sortOrderings:
    constructor -initWithEntityName:qualifier:sortOrderings:usesDistinct:isDeep:hints:
    -isDeep
    -locksObjects
    -prefetchingRelationshipKeyPaths
    -promptsAfterFetchLimit
    -qualifier
    -rawRowKeyPaths
    -refreshesRefetchedObjects
    -requiresAllQualifierBindingVariables
    -setEntityName:
    -setFetchLimit:
    -setFetchesRawRows:
    -setHints:
    -setIsDeep:
    -setLocksObjects:
    -setPrefetchingRelationshipKeyPaths:
    -setPromptsAfterFetchLimit:
    -setQualifier:
    -setRawRowKeyPaths:
    -setRefreshesRefetchedObjects:
    -setRequiresAllQualifierBindingVariables:
    -setSortOrderings:
    -setUsesDistinct:
    -sortOrderings
    -usesDistinct

class EOGenericRecord = com.apple.yellow.eocontrol.EOGenericRecord
    implements EOEnterpriseObject
    +accessInstanceVariablesDirectly
    constructor -initWithEditingContext:classDescription:globalID:
    constructor -init
    +useDeferredFaultCreation
    +useStoredAccessor

    @{
        public native void validateForSave() throws EOValidation.Exception;
        public native void validateForUpdate() throws EOValidation.Exception;
        public native void validateForInsert() throws EOValidation.Exception;
        public native void validateForDelete() throws EOValidation.Exception;
        public native Object validateValueForKey(Object value, String key) throws EOValidation.Exception;
        public native Object validateTakeValueForKeyPath(Object value, String keyPath) throws EOValidation.Exception;
    @}

class EOGlobalID = abstract com.apple.yellow.eocontrol.EOGlobalID
    -isTemporary

    @{
        public static final String GlobalIDChangedNotification = "EOGlobalIDChangedNotification";
    @}

class EOKeyBinding = com.apple.yellow.eocontrol.EOKeyValueCoding.KeyBinding
    -key
    +suppressCapitalizedKeyWarning
    -targetClass

class EOKeyGetBinding = com.apple.yellow.eocontrol.EOKeyValueCoding.KeyGetBinding
    -getValueFromObject:

class EOKeySetBinding = com.apple.yellow.eocontrol.EOKeyValueCoding.KeySetBinding
    -setValue:inObject:

class EOKeyComparisonQualifier = com.apple.yellow.eocontrol.EOKeyComparisonQualifier
    implements EOQualifierEvaluation
    constructor -initWithLeftKey:operatorSelector:rightKey:
    -leftKey
    -qualifierWithBindings:requiresAllVariables:
    -rightKey
    -selector
    -validateKeysWithRootClassDescription:

class EOKeyGlobalID = com.apple.yellow.eocontrol.EOKeyGlobalID
    -entityName
    -hash
    -isEqual:
    -keyCount
    -keyValuesArray

    @{
        public static native EOKeyGlobalID globalIDWithEntityName(String entityName, Object keys[]);
        public native Object[] keyValues();
    @}

class EOKeyValueArchiver = com.apple.yellow.eocontrol.EOKeyValueArchiver
    -delegate
    -dictionary
    -encodeBool:forKey:
    -encodeInt:forKey:
    -encodeObject:forKey:
    -encodeReferenceToObject:forKey:
    -setDelegate:

class EOKeyValueQualifier = com.apple.yellow.eocontrol.EOKeyValueQualifier
    implements EOQualifierEvaluation
    constructor -initWithKey:operatorSelector:value:
    -key
    -qualifierWithBindings:requiresAllVariables:
    -selector
    -validateKeysWithRootClassDescription:
    -value

class EOKeyValueUnarchiver = com.apple.yellow.eocontrol.EOKeyValueUnarchiver
    -awakeObjects
    -decodeBoolForKey:
    -decodeIntForKey:
    -decodeObjectForKey:
    -decodeObjectReferenceForKey:
    -delegate
    -ensureObjectAwake:
    -finishInitializationOfObjects
    constructor -initWithDictionary:
    -parent
    -setDelegate:

class EOMultiReaderLock = com.apple.yellow.eocontrol.EOMultiReaderLock
    -lockForReading
    -lockForWriting
    -retrieveReaderLocks
    -suspendReaderLocks 
    -tryLockForReading
    -tryLockForWriting
    -unlockForReading
    -unlockForWriting

class EONotQualifier = com.apple.yellow.eocontrol.EONotQualifier
    implements EOQualifierEvaluation
    constructor -initWithQualifier:
    -qualifierWithBindings:requiresAllVariables:
    -qualifier
    -validateKeysWithRootClassDescription:

class EONull = com.apple.yellow.eocontrol.EONullValue
    -compareAscending:
    -compareCaseInsensitiveAscending:
    -compareCaseInsensitiveDescending:
    -compareDescending:
    +null

class EOObjectStore = abstract com.apple.yellow.eocontrol.EOObjectStore
    abstract -arrayFaultWithSourceGlobalID:relationshipName:editingContext:
    abstract -editingContext:didForgetObjectWithGlobalID:
    abstract -faultForGlobalID:editingContext:
    abstract -faultForRawRow:entityNamed:editingContext:
    abstract -initializeObject:withGlobalID:editingContext:
    abstract -invalidateAllObjects
    abstract -invalidateObjectsWithGlobalIDs:
    abstract -isObjectLockedWithGlobalID:editingContext:
    abstract -lockObjectWithGlobalID:editingContext:
    abstract -objectsForSourceGlobalID:relationshipName:editingContext:
    abstract -objectsWithFetchSpecification:editingContext:
    abstract -refaultObject:withGlobalID:editingContext:
    abstract -saveChangesInEditingContext:

    @{
        public static final String ObjectsChangedInStoreNotification = "EOObjectsChangedInStoreNotification";
        public static final String InvalidatedAllObjectsInStoreNotification = "EOInvalidatedAllObjectsInStoreNotification";

        public static final String InsertedKey = "inserted";
        public static final String UpdatedKey = "updated";
        public static final String DeletedKey = "deleted";
        public static final String InvalidatedKey = "invalidated";
    @}

class EOObjectStoreCoordinator = com.apple.yellow.eocontrol.EOObjectStoreCoordinator
    -addCooperatingObjectStore:
    -arrayFaultWithSourceGlobalID:relationshipName:editingContext:
    -cooperatingObjectStores
    +defaultCoordinator
    -editingContext:didForgetObjectWithGlobalID:
    -faultForGlobalID:editingContext:
    -faultForRawRow:entityNamed:editingContext:
    -forwardUpdateForObject:changes:
    constructor -init
    -initializeObject:withGlobalID:editingContext:
    -invalidateAllObjects
    -invalidateObjectsWithGlobalIDs:
    -isObjectLockedWithGlobalID:editingContext:
    -lockObjectWithGlobalID:editingContext:
    -objectsForSourceGlobalID:relationshipName:editingContext:
    -objectStoreForFetchSpecification:
    -objectStoreForGlobalID:
    -objectStoreForObject:
    -objectsWithFetchSpecification:editingContext:
    -refaultObject:withGlobalID:editingContext:
    -removeCooperatingObjectStore:
    -saveChangesInEditingContext:
    +setDefaultCoordinator:
    -setUserInfo:
    -userInfo
    -valuesForKeys:object:

    @{
        public static final String CooperatingObjectStoreWasAdded = "EOCooperatingObjectStoreWasAdded";
        public static final String CooperatingObjectStoreWasRemoved = "EOCooperatingObjectStoreWasRemoved";
        public static final String CooperatingObjectStoreNeeded = "EOCooperatingObjectStoreNeeded";
    @}

class EOObserverCenter = com.apple.yellow.eocontrol.EOObserverCenter
    +addObserver:forObject:
    +addOmniscientObserver:
    +enableObserverNotification
    +notifyObserversObjectWillChange:
    +observerNotificationSuppressCount
    +observerForObject:ofClass:
    +observersForObject:
    +removeObserver:forObject:
    +removeOmniscientObserver:
    +suppressObserverNotification

class EOObserverProxy = com.apple.yellow.eocontrol.EOObserverProxy
    constructor -initWithTarget:action:priority:
    -subjectChanged

class EOOrQualifier = com.apple.yellow.eocontrol.EOOrQualifier
    implements EOQualifierEvaluation
    constructor -initWithQualifierArray:
    -qualifierWithBindings:requiresAllVariables:
    -qualifiers
    -validateKeysWithRootClassDescription:

class EOQualifier = abstract com.apple.yellow.eocontrol.EOQualifier
    +allQualifierOperators
    +relationalQualifierOperators
    +filterArray:withQualifier:
    +filteredArray:withQualifier:
    +operatorSelectorForString:
    +qualifierToMatchAllValues:
    +qualifierToMatchAnyValue:
    +qualifierWithQualifierFormat:arguments:
    +stringForOperatorSelector:
    abstract -validateKeysWithRootClassDescription:
    abstract -qualifierWithBindings:requiresAllVariables:
    -bindingKeys
    -evaluateWithObject:
    -allQualifierKeys
    -addQualifierKeysToSet:
    -keyPathForBindingKey:

    @{
        public static final NSSelector QualifierOperatorEqual = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isEqualTo:");
        public static final NSSelector QualifierOperatorNotEqual = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isNotEqualTo:");
        public static final NSSelector QualifierOperatorLessThan = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isLessThan:");
        public static final NSSelector QualifierOperatorGreaterThan = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isGreaterThan:");
        public static final NSSelector QualifierOperatorLessThanOrEqualTo = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isLessThanOrEqualTo:");
        public static final NSSelector QualifierOperatorGreaterThanOrEqualTo = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isGreaterThanOrEqualTo:");
        public static final NSSelector QualifierOperatorContains = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("doesContain:");
        public static final NSSelector QualifierOperatorLike = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isLike:");
        public static final NSSelector QualifierOperatorCaseInsensitiveLike = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("isCaseInsensitiveLike:");
    @}

class EOQualifierVariable = com.apple.yellow.eocontrol.EOQualifierVariable
    +variableWithKey:
    constructor -initWithKey:
    -key

    @{
        public static final String QualifierVariableSubstitutionException = "EOQualifierVariableSubstitutionException";
    @}

class EOSortOrdering = com.apple.yellow.eocontrol.EOSortOrdering
    constructor -initWithKey:selector:
    -key
    -selector
    +sortArray:usingKeyOrderArray:
    +sortedArray:usingKeyOrderArray:
    +sortOrderingWithKey:selector:

    @{
        public static final NSSelector CompareAscending = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("compareAscending:");
        public static final NSSelector CompareDescending = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("compareDescending:");
        public static final NSSelector CompareCaseInsensitiveAscending = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("compareCaseInsensitiveAscending:");
        public static final NSSelector CompareCaseInsensitiveDescending = new com.apple.cocoa.foundation._private.NSObjectiveCSelector("compareCaseInsensitiveDescending:");
    @}

class EOTemporaryGlobalID = com.apple.yellow.eocontrol.EOTemporaryGlobalID
    constructor -init
    -isTemporary

    @{
        public static final int UniqueBinaryKeyLength = 12;

        public static native void assignGloballyUniqueBytes(byte[] bytes);
    @}
