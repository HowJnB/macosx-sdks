
# This .jobs file was automatically generated for your bridging convenience.
# Do not edit this file by hand, use WrapIt or any .jobs creation tool!

# Pseudo-comment giving the version of WrapIt writing this file.

#> version 24

# Pseudo-comments controlling interfaces and directories that are exposable; human
# readers please note: these pseudo-comments *must* appear *before* the header
# directive for the moment, or they will not be obeyed!

#> exposable directory $NEXT_ROOT/$SYSTEM_LIBRARY_DIR/Frameworks/AppKit.framework/Headers

# Pseudo-comment giving WrapIt the name of the default package name.

#> package com.apple.cocoa.application

# Pseudo-comment giving WrapIt the prefix to remove from Objective-C interfaces names.

#> objcprefix NS

# Pseudo-comment giving WrapIt the prefix to add to Java classes and interfaces names.

#> javaprefix NS

# Source of the Objective-C interfaces specifications.

header AppKitJava.h

# Specifications files that are to be imported.

import FoundationJava.jobs

# Header files that are to be imported in the stub files.

stub-import AppKitJava.h

# Initialization of the Java framework, outside of what the bridge do.

preinit-callout _ApplicationInitialization
preinit-callout _ModalSessionInitialization
preinit-callout _DelegateMethodMappingsInitialization
postinit-callout _ApplicationPostInitialization

# Mapping of Objective-C types to Java basic types or classes.

type
    DPSNameEncoding = int
    DPSProgramEncoding = int
    NSAlertStyle = int
    NSApplicationDelegateReply = int
    NSApplicationTerminateReply = int
    NSBackingStoreType = int
    NSBezelStyle = int
    NSBezierPathElementType = int
    NSBitmapImageFileType = int
    NSBorderType = int
    NSBoxType = int
    NSButtonType = int
    NSBrowserColumnResizingType = int
    NSCellAttribute = int
    NSCellImagePosition = int
    NSCellType = int
    NSCharacterCollection = int
    NSCompositingOperation = int
    NSControlSize = int
    NSControlTint = int
    NSDocumentChangeType = int
    NSDragOperation = int
    NSDrawerState = int
    NSEventType = int
    NSFocusRingPlacement = int
    NSFocusRingType = int
    NSFontTraitMask = int
    NSGlyph = int
    NSGlyphRelation = int
    NSGradientType = int
    NSImageAlignment = int
    NSImageCacheMode = int
    NSImageFrameStyle = int
    NSImageInterpolation = int
    NSImageLoadStatus = int
    NSImageRepLoadStatus = int
    NSImageScaling = int
    NSInterfaceStyle = int
    NSLineBreakMode = int
    NSLineCapStyle = int
    NSLineJoinStyle = int
    NSLineMovementDirection = int
    NSLineSweepDirection = int
    NSMatrixMode = int
    NSModalSession = com.apple.cocoa.application.NSModalSession using _NSConvertModalSessionToJavaFromStack _NSConvertModalSessionToJava _NSConvertModalSessionFromJava
    NSMultibyteGlyphPacking = int
    NSParagraphProperty = int
    NSPopUpArrowPosition = int
    NSPrinterTableStatus = int
    NSPrintingOrientation = int
    NSPrintingPageOrder = int
    NSPrintingPaginationMode = int
    NSProgressIndicatorStyle = int
    NSQTMovieLoopMode = int
    NSRequestUserAttentionType = int
    NSRulerOrientation = int
    NSTextFieldBezelStyle = int
    NSSaveOperationType = int
    NSScrollArrowPosition = int
    NSScrollerArrow = int
    NSScrollerPart = int
    NSSegmentSwitchTracking = int
    NSSelectionAffinity = int
    NSSelectionDirection = int
    NSSelectionGranularity = int
    NSSliderType = int
    NSTIFFCompression = int
    NSTableViewDropOperation = int 
    NSTabState = int
    NSTabViewType = int
    NSTextAlignment = int
    NSTextTabType = int
    NSTickMarkPosition = int
    NSTitlePosition = int
    NSToolbarDisplayMode = int
    NSToolbarSizeMode = int
    NSTrackingRectTag = int
    NSUsableScrollerParts = int
    NSWindingRule = int
    NSWindowButton = int
    NSWindowDepth = int
    NSWindowOrderingMode = int
    NSWorkspaceLaunchOptions = int
    NSWritingDirection = int
    NSTypesetterBehavior = int

# Mapping of Objective-C selectors to Java methods.

selector
    +EPSOperationWithView:insideRect:toData: = EPSOperationWithViewInsideRect
    +EPSOperationWithView:insideRect:toData:printInfo: = EPSOperationWithViewInsideRect
    +EPSOperationWithView:insideRect:toPath:printInfo: = EPSOperationWithViewInsideRect
    +PDFOperationWithView:insideRect:toData: = PDFOperationWithViewInsideRect
    +PDFOperationWithView:insideRect:toData:printInfo: = PDFOperationWithViewInsideRect
    +PDFOperationWithView:insideRect:toPath:printInfo: = PDFOperationWithViewInsideRect
    +TIFFRepresentationOfImageRepsInArray: = TIFFRepresentationOfImageReps
    +TIFFRepresentationOfImageRepsInArray:usingCompression:factor: = TIFFRepresentationOfImageReps
    +arrayWithObjects:count: = arrayWithObjectsAndCount
    +cancelPreviousPerformRequestsWithTarget:selector:object: = cancelPerformAfterDelays
    +colorWithCalibratedHue:saturation:brightness:alpha: = colorWithCalibratedHSB
    +colorWithCalibratedRed:green:blue:alpha: = colorWithCalibratedRGB
    +colorWithDeviceCyan:magenta:yellow:black:alpha: = colorWithDeviceCMYK
    +colorWithDeviceHue:saturation:brightness:alpha: = colorWithDeviceHSB
    +colorWithDeviceRed:green:blue:alpha: = colorWithDeviceRGB
    +connectionWithReceivePort:sendPort: = connectionWithPorts
    +contentRectForFrameRect:styleMask: = contentRectForFrameRect
    +dateWithNaturalLanguageString:locale: = dateWithNaturalLanguageStringAndLocale
    +dateWithString:calendarFormat: = dateWithStringInCalendarFormat
    +dateWithString:calendarFormat:locale: = dateWithStringInCalendarFormatAndLocale
    +deserializePropertyListFromData:atCursor:mutableContainers: = deserializePropertyListFromDataAtCursor
    +detachNewThreadSelector:toTarget:withObject: = detachNewThread
    +drawAttributedString:atPoint: = drawAttributedString
    +drawAttributedString:inRect: = drawAttributedString
    +enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData: = enterExitEvent
    +fontWithName:matrixArray: = fontWithNameAndMatrix
    +fontWithName:size: = fontWithNameAndSize
    +frameRectForContentRect:styleMask: = frameRectForContentRect
    +glyphInfoWithGlyphName:forFont:baseString: = glyphInfoWithGlyphNameForFontAndBaseString
    +glyphInfoWithGlyph:forFont:baseString: = glyphInfoWithGlyphForFontAndBaseString
    +glyphInfoWithCharacterIdentifier:collection:baseString: = glyphInfoWithCharacterIdentifierInCollectionAndBaseString
    +imageRepWithData: = imageRep
    +keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode: = keyEvent
    +mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure: = mouseEvent
    +nextEventMatchingMask:untilDate:inMode:dequeue: = nextEventMatchingMaskInAnyContext
    +otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2: = otherEvent
    +pop = popCursor
    +popUpContextMenu:withEvent:forView: = popUpContextMenu
    +popUpContextMenu:withEvent:forView:withFont: = popUpContextMenu
    +portCoderWithReceivePort:sendPort:components: = portCoderWithPortsAndComponents
    +pplWithPath:fromPPLData:readOnly: = pplWithPathFromPPLData
    +printOperationWithView: = printOperationWithView
    +printOperationWithView:printInfo: = printOperationWithView
    +printerWithName: = printerWithName
    +printerWithName:domain:includeUnavailable: = printerWithName
    +protocolCheckerWithTarget:protocol: = protocolCheckerWithTargetAndProtocol
    +proxyWithLocal:connection: = proxyWithLocalAndConnection
    +proxyWithTarget:connection: = proxyWithTargetAndConnection
    +raise:format: = raiseWithFormat
    +raise:format:arguments: = raiseWithFormatAndArguments
    +registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle: = registerUnit
    +restoreGraphicsState = restoreGraphicsContext
    +saveGraphicsState = saveGraphicsContext
    +scheduledTimerWithTimeInterval:invocation:repeats: = scheduledTimerWithInvocation
    +scheduledTimerWithTimeInterval:target:selector:userInfo:repeats: = scheduledTimerWithTargetAndSelector
    +separatorItem = protocolSeparatorItem
    +serializePropertyList:intoData: = serializePropertyListIntoData
    +setDefaultPlaceholder:placeHolder:forMarker:withBinding: = setDefaultPlaceholderForMarker
    +setup:withHTML:documentAttributes: = setupWithHTML
    +setup:withPath:documentAttributes: = setupWithPath
    +setup:withRTF:documentAttributes: = setupWithRTF
    +setup:withRTFD:documentAttributes: = setupWithRTFD
    +setup:withRTFDFileWrapper:documentAttributes: = setupWithRTFDFileWrapper
    +standardWindowButton:forStyleMask: = standardWindowButtonForStyleMask
    +startPeriodicEventsAfterDelay:withPeriod: = startPeriodicEvents
    +timerWithTimeInterval:invocation:repeats: = timerWithInvocation
    +undoManager:redoMenuTitleForUndoActionName: = redoMenuTitleForUndoActionName
    +undoManager:setActionName: = setActionName
    +undoManager:undoMenuTitleForUndoActionName: = undoMenuTitleForUndoActionName
    -RTFDFileWrapperFromRange:documentAttributes: = RTFDFileWrapperFromRangeWithDocumentAttributes
    -RTFDFromRange:documentAttributes: = RTFDFromRangeWithDocumentAttributes
    -RTFFromRange:documentAttributes: = RTFFromRangeWithDocumentAttributes
    -TIFFRepresentation = TIFFRepresentation
    -TIFFRepresentationUsingCompression:factor: = TIFFRepresentation
    -addConnection:toRunLoop:forMode: = addConnectionToRunLoop
    -addItemWithTitle: = addItem
    -addItemWithTitle:action:keyEquivalent: = addItem
    -addLinkPreviouslyAt:fromPasteboard:at: = addLinkPreviouslyAtSelection
    -addSubview: = addSubview
    -addSubview:positioned:relativeTo: = addSubview
    -addTrackingRect:owner:userObject:assumeInside: = addTrackingRect
    -adjustPageHeightTop:bottom:limit: = adjustPageHeight
    -adjustPageWidthLeft:right:limit: = adjustPageWidth
    -application:openFile: = applicationOpenFile
    -application:openFiles: = applicationOpenFiles
    -application:openFileWithoutUI: = applicationOpenFileWithoutUI
    -application:openTempFile: = applicationOpenTempFile
    -application:printFile: = applicationPrintFile
    -application:printFiles: = applicationPrintFiles
    -applicationShouldHandleReopen:hasVisibleWindows: = applicationShouldHandleReopen
    -attachPopUpWithFrame:inView: = attachPopUpWithFrameInView
    -beginModalSessionForWindow: = beginModalSessionForWindow
    -beginModalSessionForWindow:relativeToWindow: = beginModalSessionForWindow
    -beginSheet:modalForWindow:modalDelegate:didEndSelector: = beginSheet
    -beginSheet:modalForWindow:modalDelegate:didEndSelector:contextObject: = beginSheet
    -beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector: = beginSheetForDirectory
    -beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextObject: = beginSheetForDirectory
    -beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextObject: = beginSheetForDirectory
    -beginSheetModalForWindow:modalDelegate:didEndSelector:contextObject: = beginSheet
    -beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextObject: = beginSheetWithPrintInfo
    -blendedColorWithFraction:ofColor: = blendedColorWithFractionOfColor
    -booleanForKey:inTable: = booleanForKeyInTable
    -browser:createRowsForColumn:inMatrix: = browserCreateRowsForColumn
    -browser:isColumnValid: = browserIsColumnValid
    -browser:numberOfRowsInColumn: = browserNumberOfRowsInColumn
    -browser:selectCellWithString:inColumn: = browserSelectCellWithStringInColumn
    -browser:selectRow:inColumn: = browserSelectRowInColumn
    -browser:shouldSizeColumn:forUserResize:toWidth: = browserShouldSizeColumnToWidth
    -browser:sizeToFitWidthOfColumn: = browserSizeToFitWidthOfColumn
    -browser:titleOfColumn: = browserTitleOfColumn
    -browser:willDisplayCell:atRow:column: = browserWillDisplayCell
    -canBeCompressedUsing: = canBeCompressedUsingType
    -canCloseDocument = canCloseDocument
    -canCloseDocumentWithDelegate:shouldCloseSelector:contextObject: = canCloseDocument
    -cellAtRow:column: = cellAtLocation
    -cellClass = newCellClass
    -cellFrameAtRow:column: = cellFrameAtLocation
    -cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex: = cellFrame
    -checkSpellingOfString:startingAt: = checkSpellingOfString
    -checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount: = checkSpellingOfString
    -classNameDecodedForArchiveClassName: = classNameForArchiveClassName
    -classNameEncodedForTrueClassName: = archiveClassNameForClassName
    -clickedOnLink:atIndex: = clickedOnLinkAtIndex
    -closeAllDocuments = closeAllDocuments
    -closeAllDocumentsWithDelegate:didCloseAllSelector:contextObject: = closeAllDocuments
    -collapseItem:collapseChildren: = collapseItemAndChildren
    -colorUsingColorSpaceName:device: = colorUsingColorSpaceNameAndDevice
    -comboBox:indexOfItemWithStringValue: = comboBoxIndexOfItem
    -comboBox:objectValueForItemAtIndex: = comboBoxObjectValueForItemAtIndex
    -comboBox:completedString: = comboBoxCompletedString
    -comboBoxCell:indexOfItemWithStringValue: = comboBoxCellIndexOfItem
    -comboBoxCell:objectValueForItemAtIndex: = comboBoxCellObjectValueForItemAtIndex
    -comboBoxCell:completedString: = comboBoxCellCompletedString
    -completionsForPartialWordRange:inString:language:inSpellDocumentWithTag: = completionsForPartialWordRange
    -compositeToPoint:fromRect:operation: = compositeToPointFromRect
    -compositeToPoint:operation:fraction: = compositeToPointWithFraction
    -compositeToPoint:fromRect:operation:fraction: = compositeToPointFromRectWithFraction
    -connection:handleRequest: = connectionHandleRequest
    -connection:shouldMakeNewConnection: = connectionShouldMakeNewConnection
    -constrainFrameRect:toScreen: = constrainFrameRectToScreen
    -contentRectForFrameRect: = contentRectForFrameRect
    -contentsAtPath: = contents
    -contentsEqualAtPath:andPath: = contentsEqual
    -continueTracking:at:inView: = continueTrackingMouse
    -control:didFailToFormatString:errorDescription: = controlDidFailToFormatStringErrorDescription
    -control:didFailToValidatePartialString:errorDescription: = controlDidFailToValidatePartialString
    -control:isValidObject: = controlIsValidObject
    -control:textShouldBeginEditing: = controlTextShouldBeginEditing
    -control:textShouldEndEditing: = controlTextShouldEndEditing
    -control:textView:completions:forPartialWordRange: = controlTextViewCompletionsForPartialWordRange
    -control:textView:doCommandBySelector: = controlTextViewDoCommandBySelector
    -convertFont:toFace: = convertFontToFace
    -convertFont:toFamily: = convertFontToFamily
    -convertFont:toHaveTrait: = convertFontToHaveTrait
    -convertFont:toNotHaveTrait: = convertFontToNotHaveTrait
    -convertFont:toSize: = convertFontToSize
    -convertPoint:fromView: = convertPointFromView
    -convertPoint:toView: = convertPointToView
    -convertRect:fromView: = convertRectFromView
    -convertRect:toView: = convertRectToView
    -convertSize:fromView: = convertSizeFromView
    -convertSize:toView: = convertSizeToView
    -createDirectoryAtPath:attributes: = createDirectory
    -createFileAtPath:contents:attributes: = createFile
    -createSymbolicLinkAtPath:pathContent: = createSymbolicLink
    -dataLinkManager:didBreakLink: = dataLinkManagerDidBreakLink
    -dataLinkManager:isUpdateNeededForLink: = dataLinkManagerIsUpdateNeededForLink
    -dataLinkManager:startTrackingLink: = dataLinkManagerStartTrackingLink
    -dataLinkManager:stopTrackingLink: = dataLinkManagerStopTrackingLink
    -deserializeInts:count:atCursor: = deserializeIntsAtCursor
    -deserializeInts:count:atIndex: = deserializeIntsAtIndex
    -deserializeObjectAt:ofObjCType:fromData:atCursor: = deserializeObjectFromData
    -directoryContentsAtPath: = directoryContents
    -dissolveToPoint:fromRect:fraction: = dissolveToPointFromRect
    -draggedImage:beganAt: = startedDraggingImage
    -draggedImage:endedAt:deposited: = finishedDraggingImage
    -draggedImage:endedAt:operation: = finishedDraggingImage
    -draggedImage:movedTo: = movedDraggingImage
    -drawAtPoint:fromRect:operation:fraction: = drawAtPoint
    -drawAtPoint:withAttributes: = drawAtPointWithAttributes
    -drawBorderAndBackgroundWithFrame:inView: = drawBorderAndBackgroundWithFrameInView
    -drawCellAtRow:column: = drawCellAtLocation
    -drawImageWithFrame:inView: = drawImageWithFrameInView
    -drawInRect:fromRect:operation:fraction: = drawInRect
    -drawInRect:withAttributes: = drawInRectWithAttributes
    -drawInteriorWithFrame:inView: = drawInteriorWithFrameInView
    -drawKeyEquivalentWithFrame:inView: = drawKeyEquivalentWithFrameInView
    -drawKnob = drawKnob
    -drawKnob: = drawKnobInRect
    -drawRepresentation:inRect: = drawRepresentationInRect
    -drawSegment:inFrame:withView: = drawSegment
    -drawSelector = drawMethod
    -drawSeparatorItemWithFrame:inView: = drawSeparatorItemWithFrameInView
    -drawSortIndicatorWithFrame:inView:ascending:priority: = drawSortIndicatorWithFrameInView
    -drawStateImageWithFrame:inView: = drawStateImageWithFrameInView
    -drawTitleWithFrame:inView: = drawTitleWithFrameInView
    -drawWithFrame:inView: = drawWithFrameInView
    -drawWithFrame:inView:characterIndex: = drawWithFrameInView
    -drawWithFrame:inView:characterIndex:layoutManager: = drawWithFrameInView
    -editColumn:row:withEvent:select: = editLocation
    -editWithFrame:inView:editor:delegate:event: = editWithFrameInView
    -edited:range:changeInLength: = editedInRange
    -endEditingFor: = endEditingForObject
    -endSheet: = endSheet
    -endSheet:returnCode: = endSheet
    -expandItem:expandChildren: = expandItemAndChildren
    -fieldEditor:forObject: = fieldEditorForObject
    -fileAttributesAtPath:traverseLink: = fileAttributes
    -fileExistsAtPath: = fileExists
    -fileExistsAtPath:isDirectory: = fileExistsIsDirectory
    -fileManager:shouldProceedAfterError: = fileManagerShouldProceedAfterError
    -fileManager:willProcessPath: = fileManagerWillProcessPath
    -fileSystemAttributesAtPath: = fileSystemAttributes
    -floatForKey:inTable: = floatForKeyInTable
    -fontManager:willIncludeFont: = fontManagerWillIncludeFont
    -fontNamed:hasTraits: = fontWithNameHasTraits
    -frameOfCellAtColumn:row: = frameOfCellAtLocation
    -frameRectForContentRect: = frameRectForContentRect
    -getArgument:atIndex: = getArgumentAtIndex
    -getCyan:magenta:yellow:black:alpha: = getCMYK
    -getGlyphs:range: = getGlyphsInRange
    -getHue:saturation:brightness:alpha: = getHSB
    -getRed:green:blue:alpha: = getRGB
    -getColumnForPoint: = columnForPoint
    -getColumnOfCell: = columnOfCell
    -getCompressionFactor = compressionFactor
    -getCompressionType = compressionType
    -getRowForPoint: = rowForPoint
    -getRowOfCell: = rowOfCell
    -highlight:withFrame:inView: = highlightWithFrameInView
    -highlightCell:atRow:column: = highlightCellAtLocation
    -highlightColorWithFrame:inView: = highlightColorWithFrameInView
    -ignoredWordsInSpellDocumentWithTag: = ignoredWords
    -image:willLoadRepresentation: = imageWillLoadRepresentation
    -image:didLoadRepresentationHeader: = imageDidLoadRepresentationHeader
    -image:didLoadPartOfRepresentation:withValidRows: = imageDidLoadPartOfRepresentation
    -image:didLoadRepresentation:withStatus: = imageDidLoadRepresentation
    -imageForSegment: = image
    -incrementalLoadFromData:complete: = incrementalLoadFromData
    -indexOfItemWithTarget:andAction: = indexOfItemWithTargetAndAction
    -indicatorImageInTableColumn: = indicatorImage
    -initTextCell:pullsDown: = initTextCellAndPullsDown
    -initWithContentRect:styleMask:backing:defer:screen: = initWithContentRectAndScreen
    -initWithDelegate:fromFile: = initWithDelegateFromFile
    -initWithDelegate:name: = initWithDelegateAndName
    -initWithFileDescriptor:closeOnDealloc: = initWithFileDescriptorCloseOnDealloc
    -initWithFrame:mode:cellClass:numberOfRows:numberOfColumns: = initWithFrameAndCellClass
    -initWithFrame:mode:prototype:numberOfRows:numberOfColumns: = initWithFrameAndCellPrototype
    -initWithFrame:pullsDown: = initWithFrameAndPullsDown
    -initWithFrame:textContainer: = initWithFrameAndTextContainer
    -initWithImage:foregroundColorHint:backgroundColorHint:hotSpot: = initWithImageAndColorHints
    -initWithLocal:connection: = initWithLocalAndConnection
    -initWithName:fromFile: = initWithNameFromFile
    -initWithName:host: = initWithNameOnHost
    -initWithPath:documentAttributes: = initWithPathAndDocumentAttributes
    -initWithPath:fromPPLData:readOnly: = initWithPathFromPPLData
    -initWithReceivePort:sendPort: = initWithPorts
    -initWithSendPort:receivePort:components: = initWithPorts
    -initWithSize:depth:separate:alpha: = initWithSizeAndCacheInfo
    -initWithString:calendarFormat: = initWithStringInCalendarFormat
    -initWithString:calendarFormat:locale: = initWithStringInCalendarFormatAndLocale
    -initWithTarget:connection: = initWithTargetAndConnection
    -initWithTarget:protocol: = initWithTargetAndProtocol
    -initWithWindowNibName:owner: = initWithWindowNibNameAndOwner
    -initWithWindowNibPath:owner: = initWithWindowNibPathAndOwner
    -insertColor:key:atIndex: = insertColorForKeyAtIndex
    -insertColumn:withCells: = insertColumnWithCells
    -insertEntry:atIndex: = insertEntryAtIndex
    -insertGlyph:atGlyphIndex:characterIndex: = insertGlyphAtGlyphIndex
    -insertItem:atIndex: = insertItemAtIndex
    -insertItemWithItemIdentifier:atIndex: = insertItemWithItemIdentifierAtIndex
    -insertItemWithObjectValue:atIndex: = insertItemWithObjectValueAtIndex
    -insertItemWithTitle:action:keyEquivalent:atIndex: = insertItemAtIndex
    -insertItemWithTitle:atIndex: = insertItemAtIndex
    -insertRow:withCells: = insertRowWithCells
    -insertTextContainer:atIndex: = insertTextContainerAtIndex
    -intAttribute:forGlyphAtIndex: = glyphAttributeForGlyphAtIndex
    -intForKey:inTable: = intForKeyInTable
    -isDeletableFileAtPath: = isDeletableFile
    -isEnabledForSegment: = isEnabled
    -isExecutableFileAtPath: = isExecutableFile
    -isKey:inTable: = isKeyInTable
    -isReadableFileAtPath: = isReadableFile
    -isSelectedForSegment: = isSelected
    -isWritableFileAtPath: = isWritableFile
    -labelForSegment: = label
    -launchApplication: = launchApplication
    -launchApplication:showIcon:autolaunch: = launchApplication
    -layoutManager:didCompleteLayoutForTextContainer:atEnd: = layoutManagerDidCompleteLayoutForTextContainer
    -lineBreakBeforeIndex:withinRange: = lineBreakBeforeIndexInRange
    -loadedCellAtRow:column: = loadedCellAtLocation
    -lockWhenCondition:beforeDate: = lockWhenConditionBeforeDate
    -makeCellAtRow:column: = makeCellAtLocation
    -menu:updateItem:atIndex:shouldCancel: = menuUpdateItemAtIndex
    -menuForSegment: = menu
    -mouse:inRect: = isMouseInRect
    -moveColumn:toColumn: = moveColumnToColumn
    -moveRulerlineFromLocation:toLocation: = moveRulerline
    -nextEventMatchingMask: = nextEventMatchingMask
    -nextEventMatchingMask:untilDate:inMode:dequeue: = nextEventMatchingMask
    -noResponderFor: = noResponderForSelector
    -noteFileSystemChanged: = noteFileSystemChangedAtPath
    -openFile: = openFile
    -openFile:fromImage:at:inView: = openFile
    -openFile:withApplication: = openFile
    -openFile:withApplication:andDeactivate: = openFile
    -outlineView:acceptDrop:item:childIndex: = outlineViewAcceptDrop
    -outlineView:child:ofItem: = outlineViewChildOfItem
    -outlineView:didClickTableColumn: = outlineViewDidClickTableColumn
    -outlineView:didDragTableColumn: = outlineViewDidDragTableColumn
    -outlineView:isItemExpandable: = outlineViewIsItemExpandable
    -outlineView:itemForPersistentObject: = outlineViewItemForPersistentObject
    -outlineView:mouseDownInHeaderOfTableColumn: = outlineViewMouseDownInHeaderOfTableColumn
    -outlineView:numberOfChildrenOfItem: = outlineViewNumberOfChildrenOfItem
    -outlineView:objectValueForTableColumn:byItem: = outlineViewObjectValueForItem
    -outlineView:persistentObjectForItem: = outlineViewPersistentObjectForItem
    -outlineView:setObjectValue:forTableColumn:byItem: = outlineViewSetObjectValueForItem
    -outlineView:shouldCollapseItem: = outlineViewShouldCollapseItem
    -outlineView:shouldEditTableColumn:item: = outlineViewShouldEditTableColumn
    -outlineView:shouldExpandItem: = outlineViewShouldExpandItem
    -outlineView:shouldSelectItem: = outlineViewShouldSelectItem
    -outlineView:shouldSelectTableColumn: = outlineViewShouldSelectTableColumn
    -outlineView:sortDescriptorsDidChange: = outlineViewSortDescriptorsDidChange
    -outlineView:validateDrop:proposedItem:proposedChildIndex: = outlineViewValidateDrop
    -outlineView:willCollapseItem: = outlineViewWillCollapseItem
    -outlineView:willDisplayCell:forTableColumn:item: = outlineViewWillDisplayCell
    -outlineView:willDisplayOutlineCell:forTableColumn:item: = outlineViewWillDisplayOutlineCellForTableColumn
    -outlineView:willExpandItem: = outlineViewWillExpandItem
    -outlineView:writeItems:toPasteboard: = outlineViewWriteItemsToPasteboard
    -panel:compareFilename:with:caseSensitive: = panelCompareFilenames
    -panel:isValidFilename: = panelIsValidFilename
    -panel:shouldShowFilename: = panelShouldShowFilename
    -panel:userEnteredFilename:confirmed: = panelUserEnteredFilename
    -panel:willExpand: = panelWillExpand
    -panel:directoryDidChange: = panelDirectoryDidChange
    -pasteboard:provideDataForType: = pasteboardProvideDataForType
    -pathContentOfSymbolicLinkAtPath: = pathContentOfSymbolicLink
    -performClickWithFrame:inView: = performClickWithFrameInView
    -portForName:host: = portForNameOnHost
    -portForName:onHost: = portForNameOnHost
    -positionOfGlyph:forCharacter:struckOverRect: = positionOfGlyphForCharacterStruckOverRect
    -positionOfGlyph:precededByGlyph:isNominal: = positionOfGlyphPrecededByGlyph
    -positionOfGlyph:struckOverGlyph:metricsExist: = positionOfGlyphStruckOverGlyph
    -positionOfGlyph:struckOverRect:metricsExist: = positionOfGlyphStruckOverRect
    -positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist: = positionOfGlyphWithRelationToBaseGlyph
    -positionsForCompositeSequence:numberOfGlyphs:pointArray: = positionsForCompositeSequenceOfGlyphs
    -printFormat:arguments: = printFormatWithArguments
    -putCell:atRow:column: = putCellAtLocation
    -readFileContentsType:toFile: = readFileContentsTypeToFile
    -readSelectionFromPasteboard:type: = readSelectionFromPasteboardOfType
    -readSelectionFromPasteboard:types: = readSelectionFromPasteboardUsingTypes
    -rectForKey:inTable: = rectForKeyInTable
    -registerServicesMenuSendTypes:returnTypes: = registerServicesMenuTypes
    -reloadItem:reloadChildren: = reloadItemAndChildren
    -removeConnection:fromRunLoop:forMode: = removeConnectionFromRunLoop
    -removeFileAtPath:handler: = removeFile
    -removeObject: = removeObject
    -removeObjectAtArrangedObjectIndex: = removeObject
    -removeObjects: = removeObjects
    -removeObjectsAtArrangedObjectIndexes: = removeObjects
    -renewRows:columns: = renewRowsAndColumns
    -replaceCharactersInRange:withRTF: = replaceCharactersInRangeWithRTF
    -replaceCharactersInRange:withRTFD: = replaceCharactersInRangeWithRTFD
    -reviewUnsavedDocumentsWithAlertTitle:cancellable: = reviewUnsavedDocumentsWithAlertTitle
    -reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextObject: = reviewUnsavedDocumentsWithAlertTitle
    -rulerView:didAddMarker: = rulerViewDidAddMarker
    -rulerView:didMoveMarker: = rulerViewDidMoveMarker
    -rulerView:didRemoveMarker: = rulerViewDidRemoveMarker
    -rulerView:handleMouseDown: = rulerViewHandleMouseDown
    -rulerView:shouldAddMarker: = rulerViewShouldAddMarker
    -rulerView:shouldMoveMarker: = rulerViewShouldMoveMarker
    -rulerView:shouldRemoveMarker: = rulerViewShouldRemoveMarker
    -rulerView:willAddMarker:atLocation: = rulerViewWillAddMarker
    -rulerView:willMoveMarker:toLocation: = rulerViewWillMoveMarker
    -rulerView:willSetClientView: = rulerViewWillSetClientView
    -runModalForDirectory:file: = runModalInDirectory
    -runModalForDirectory:file:types: = runModalInDirectory
    -runModalForDirectory:file:relativeToWindow: = runModalInDirectory
    -runModalForDirectory:file:types:relativeToWindow: = runModalInDirectory
    -runModalForWindow: = runModalForWindow
    -runModalForWindow:relativeToWindow: = runModalForWindow
    -runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextObject: = runModalPageLayout
    -runModalPrintOperation:delegate:didRunSelector:contextObject: = runModalPrintOperation
    -runModalSavePanel:withAccessoryView: = runModalSavePanel
    -runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextObject: = runModalSavePanel
    -runOperationModalForWindow:delegate:didRunSelector:contextObject: = runModalOperation
    -saveDocument: = saveDocument
    -saveDocumentWithDelegate:didSaveSelector:contextObject: = saveDocument
    -scaleXBy:yBy: = scaleXYBy
    -scrollCellToVisibleAtRow:column: = scrollCellAtLocationToVisible
    -scrollClipView:toPoint: = scrollClipViewToPoint
    -selectCellAtRow:column: = selectCellAtLocation
    -selectColumnIndexes:byExtendingSelection: = selectColumnIndexes
    -selectRow:inColumn: = selectRowInColumn
    -selectRowIndexes:byExtendingSelection: = selectRowIndexes
    -selectTextAtRow:column: = selectTextAtLocation
    -selectWithFrame:inView:editor:delegate:start:length: = selectAndEditWithFrameInView
    -sendAction:to: = sendActionToTarget
    -sendAction:to:forAllCells: = sendActionToTargetForAllCells
    -sendAction:to:from: = sendActionToTargetFromSender
    -sendActionOn: = setEventMaskForSendingAction
    -sendBeforeDate:components:from:reserved: = sendBeforeDateWithComponents
    -serializeInt:atIndex: = serializeIntAtIndex
    -serializeInts:count:atIndex: = serializeIntsAtIndex
    -serializeObjectAt:ofObjCType:intoData: = serializeObjectIntoData
    -setArgument:atIndex: = setArgumentAtIndex
    -setCellClass: = setNewCellClass
    -setCharacterIndex:forGlyphAtIndex: = setCharacterIndexForGlyphAtIndex
    -setColor:forKey: = setColorForKey
    -setCompression:factor: = setCompressionWithFactor
    -setContextHelp:forObject: = setContextHelpForObject
    -setData:forType: = setDataForType
    -setDrawsOutsideLineFragment:forGlyphAtIndex: = setDrawsOutsideLineFragmentForGlyphAtIndex
    -setDropItem:dropChildIndex: = setDropItemAndDropChildIndex
    -setDropRow:dropOperation: = setDropRowAndDropOperation
    -setEnabled:forSegment: = setEnabled
    -setFloatValue:knobProportion: = setFloatValueAndKnobProportion
    -setFont:range: = setFontInRange
    -setFrame:display: = setFrame
    -setFrame:display:animate: = setFrame
    -setFrameUsingName: = setFrameUsingName
    -setFrameUsingName:force: = setFrameUsingName
    -setImage:forSegment: = setImage
    -setIndicatorImage:inTableColumn: = setIndicatorImage
    -setIntAttribute:value:forGlyphAtIndex: = setGlyphAttributeForGlyphAtIndex
    -setKeyEquivalentFont:size: = setKeyEquivalentFontAndSize
    -setLabel:forSegment: = setLabel
    -setLineFragmentRect:forGlyphRange:usedRect: = setLineFragmentRectForGlyphAtIndex
    -setLocation:forStartOfGlyphRange: = setLocationForStartOfGlyphRange
    -setMarkedText:selectedRange: = setMarkedTextAndSelectedRange
    -setMatrixClass: = setNewMatrixClass
    -setMenu:forSegment: = setMenu
    -setMenuItemCell:forItemAtIndex: = setMenuItemCellForItemAtIndex
    -setNeedsDisplay = setNeedsDisplay
    -setNeedsDisplay: = setNeedsDisplay
    -setNeedsDisplayInRect: = setNeedsDisplay
    -setNeedsDisplayInRect:avoidAdditionalLayout: = setNeedsDisplay
    -setNotShownAttribute:forGlyphAtIndex: = setNotShownForGlyphAtIndex
    -setPeriodicDelay:interval: = setPeriodicDelayAndInterval
    -setPropertyList:forType: = setPropertyListForType
    -setSelected:forSegment: = setSelected
    -setSelectedRange: = setSelectedRange
    -setSelectedRange:affinity:stillSelecting: = setSelectedRange
    -setSelectedSegment: = setSelected
    -setSelectionFrom:to:anchor:highlight: = setSelectionWithAnchor
    -setState:atRow:column: = setStateAtLocation
    -setString:forType: = setStringForType
    -setSubmenu:forItem: = setSubmenuForItem
    -setTag:forSegment: = setTag
    -setTextColor:range: = setTextColorInRange
    -setTextContainer:forGlyphRange: = setTextContainerForGlyphRange
    -setTitle:ofColumn: = setTitleOfColumn
    -setToolTip:forCell: = setToolTip
    -setToolTip:forSegment: = setToolTip
    -setWidth:forSegment: = setWidth
    -setWidth:ofColumn: = setWidthOfColumn
    -shouldCloseWindowController: = shouldCloseWindowController
    -shouldCloseWindowController:delegate:shouldCloseSelector:contextObject: = shouldCloseWindowController
    -showController:adjustingSize: = showController
    -sizeForKey:inTable: = sizeForKeyInTable
    -smartInsertForString:replacingRange:beforeString:afterString: = smartInsertForStringInRange
    -sortUsingSelector: = sortUsingMethod
    -sortedArrayUsingFunction:context:hint: = sortedArrayUsingFunctionWithHint
    -speechRecognizer:didRecognizeCommand: = speechRecognizerDidRecognizeCommand
    -speechSynthesizer:didFinishSpeaking: = speechSynthesizerDidFinishSpeaking
    -speechSynthesizer:willSpeakPhoneme: = speechSynthesizerWillSpeakPhoneme
    -speechSynthesizer:willSpeakWord:ofString: = speechSynthesizerWillSpeakWord
    -splitView:resizeSubviewsWithOldSize: = splitViewResizeSubviews
    -splitView:canCollapseSubview: = splitViewCanCollapseSubview
    -splitView:constrainSplitPosition:ofSubviewAt: = splitViewConstrainSplitPosition
    -splitView:constrainMinCoordinate:ofSubviewAt: = splitViewConstrainMinSplitPosition
    -splitView:constrainMaxCoordinate:ofSubviewAt: = splitViewConstrainMaxSplitPosition
    -startSpeakingString: = startSpeakingString
    -startSpeakingString:toURL: = startSpeakingString
    -startTrackingAt:inView: = startTrackingMouse
    -statusItemWithLength: = statusItem
    -stopTracking:at:inView:mouseIsUp: = stopTrackingMouse
    -stringForKey:inTable: = stringForKeyInTable
    -stringListForKey:inTable: = stringListForKeyInTable
    -tabView:didSelectTabViewItem: = tabViewDidSelectTabViewItem
    -tabView:shouldSelectTabViewItem: = tabViewShouldSelectTabViewItem
    -tabView:willSelectTabViewItem: = tabViewWillSelectTabViewItem
    -tableView:acceptDrop:row:dropOperation: = tableViewAcceptDrop
    -tableView:didClickTableColumn: = tableViewDidClickTableColumn
    -tableView:didDragTableColumn: = tableViewDidDragTableColumn
    -tableView:mouseDownInHeaderOfTableColumn: = tableViewMouseDownInHeaderOfTableColumn
    -tableView:objectValueForTableColumn:row: = tableViewObjectValueForLocation
    -tableView:setObjectValue:forTableColumn:row: = tableViewSetObjectValueForLocation
    -tableView:shouldEditTableColumn:row: = tableViewShouldEditLocation
    -tableView:shouldSelectRow: = tableViewShouldSelectRow
    -tableView:shouldSelectTableColumn: = tableViewShouldSelectTableColumn
    -tableView:sortDescriptorsDidChange: = tableViewSortDescriptorsDidChange
    -tableView:validateDrop:proposedRow:proposedDropOperation: = tableViewValidateDrop
    -tableView:willDisplayCell:forTableColumn:row: = tableViewWillDisplayCell
    -tableView:writeRows:toPasteboard: = tableViewWriteRowsToPasteboard
    -tagForSegment: = tag
    -takeDoubleValueFrom: = takeDoubleValue
    -takeFloatValueFrom: = takeFloatValue
    -takeIntValueFrom: = takeIntValue
    -takeObjectValueFrom: = takeObjectValue
    -takeStringValueFrom: = takeStringValue
    -targetForAction:to:from: = targetForActionToFrom
    -textStorage:edited:range:changeInLength:invalidatedRange: = textStorageChanged
    -textView:clickedOnCell:inRect: = textViewClickedCell
    -textView:clickedOnCell:inRect:atIndex: = textViewClickedCellAtIndex
    -textView:clickedOnLink: = textViewClickedOnLink
    -textView:clickedOnLink:atIndex: = textViewClickedOnLinkAtIndex
    -textView:completions:forPartialWordRange: = textViewCompletionsForPartialWordRange
    -textView:doCommandBySelector: = textViewDoCommandBySelector
    -textView:doubleClickedOnCell:inRect: = textViewDoubleClickedCell
    -textView:doubleClickedOnCell:inRect:atIndex: = textViewDoubleClickedCellAtIndex
    -textView:draggedCell:inRect:event: = textViewDraggedCell
    -textView:draggedCell:inRect:event:atIndex: = textViewDraggedCellAtIndex
    -textView:shouldChangeTextInRange:replacementString: = textViewShouldChangeTextInRange
    -textView:willChangeSelectionFromCharacterRange:toCharacterRange: = textViewWillChangeSelection
    -textView:willDisplayToolTip:forCharacterAtIndex: = textViewWillDisplayToolTip
    -titleWidth: = titleWidthWithSize
    -toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar: = toolbarItemForItemIdentifier
    -toolTipForCell: = toolTip
    -toolTipForSegment: = toolTip
    -trackMouse:adding: = trackMouseToAddMarker
    -trackMouse:inRect:ofView:untilMouseUp: = trackMouse
    -trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp: = trackMouse
    -translateXBy:yBy: = translateXYBy
    -validRequestorForSendType:returnType: = validRequestorForTypes
    -wait = synchronize
    -widthForSegment: = width
    -window:willPositionSheet:usingRect: = windowWillPositionSheet
    -writeEPSInsideRect:toPasteboard: = writeEPSInsideRectToPasteboard
    -writePDFInsideRect:toPasteboard: = writePDFInsideRectToPasteboard
    -writeSelectionToPasteboard:type: = writeSelectionToPasteboardOfType
    -writeSelectionToPasteboard:types: = writeSelectionToPasteboardOfTypes
    -writeToFile:ofType: = writeToFile
    -writeToFile:ofType:originalFile:saveOperation: = writeToFile
    -years:months:days:hours:minutes:seconds:sinceDate: = getTimeUnitsSinceDate

# Exposed protocol interfaces.

protocol NSChangeSpelling = com.apple.cocoa.application.NSChangeSpelling
    -changeSpelling:

protocol NSColorPickingCustom = com.apple.cocoa.application.NSColorPickingCustom
    -currentMode
    -provideNewView:
    -setColor:
    -supportsMode:

protocol NSColorPickingDefault = com.apple.cocoa.application.NSColorPickingDefault
    -alphaControlAddedOrRemoved:
    -attachColorList:
    -detachColorList:
    constructor -initWithPickerMask:colorPanel:
    -insertNewButtonImage:in:
    -provideNewButtonImage
    -setMode:
    -viewSizeChanged:

protocol NSDraggingInfo = com.apple.cocoa.application.NSDraggingInfo
    -draggedImage
    -draggedImageLocation
    -draggingDestinationWindow
    -draggingLocation
    -draggingPasteboard
    -draggingSequenceNumber
    -draggingSource
    -draggingSourceOperationMask
    -namesOfPromisedFilesDroppedAtDestination:
    -slideDraggedImageTo:

    @{
public static final int DragOperationNone = 0;
public static final int DragOperationCopy = 1;
public static final int DragOperationLink = 2;
public static final int DragOperationGeneric = 4;
public static final int DragOperationPrivate = 8;
public static final int DragOperationAll = 15;
public static final int DragOperationMove = 16;
public static final int DragOperationDelete = 32;
public static final int DragOperationEvery = -1;
    @}

protocol NSEditor = com.apple.cocoa.application.NSEditor
    -commitEditing
    -discardEditing

protocol NSEditorRegistration = com.apple.cocoa.application.NSEditorRegistration
    -objectDidBeginEditing:
    -objectDidEndEditing:

protocol NSKeyValueBindingCreation = com.apple.cocoa.application.NSKeyValueBindingCreation
    -bind:toObject:withKeyPath:options:
    -exposedBindings
    -unbind:
    -valueClassForBinding:

protocol NSIgnoreMisspelledWords = com.apple.cocoa.application.NSIgnoreMisspelledWords
    -ignoreSpelling:

protocol NSInputServerMouseTracker = com.apple.cocoa.application.NSInputServerMouseTracker
    -mouseDownOnCharacterIndex:atCoordinate:withModifier:client:
    -mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:
    -mouseUpOnCharacterIndex:atCoordinate:withModifier:client:

protocol NSInputServiceProvider = com.apple.cocoa.application.NSInputServiceProvider
    -activeConversationChanged:toNewConversation:
    -activeConversationWillChange:fromOldConversation:
    -canBeDisabled
    -doCommandBySelector:client:
    -inputClientBecomeActive:
    -inputClientDisabled:
    -inputClientEnabled:
    -inputClientResignActive:
    -insertText:client:
    -markedTextAbandoned:
    -markedTextSelectionChanged:client:
    -terminate:
    -wantsToDelayTextChangeNotifications
    -wantsToHandleMouseEvents
    -wantsToInterpretAllKeystrokes

protocol NSValidatedUserInterfaceItem = com.apple.cocoa.application.NSValidatedUserInterfaceItem
    -action
    -tag

protocol NSMenuItem = com.apple.cocoa.application._NSObsoleteMenuItemProtocol
    implements NSCoding
    implements NSValidatedUserInterfaceItem
    -attributedTitle
    -hasSubmenu
    -image
    -indentationLevel
    constructor -initWithTitle:action:keyEquivalent:
    -isAlternate
    -isEnabled
    -isSeparatorItem
    -keyEquivalent
    -keyEquivalentModifierMask
    -menu
    -mixedStateImage
    -mnemonic
    -mnemonicLocation
    -offStateImage
    -onStateImage
    -representedObject
    +separatorItem
    -setAction:
    -setAlternate:
    -setAttributedTitle:
    -setEnabled:
    -setImage:
    -setIndentationLevel:
    -setKeyEquivalent:
    -setKeyEquivalentModifierMask:
    -setMenu:
    -setMixedStateImage:
    -setMnemonicLocation:
    -setOffStateImage:
    -setOnStateImage:
    -setRepresentedObject:
    -setState:
    -setSubmenu:
    -setTag:
    -setTarget:
    -setTitle:
    -setTitleWithMnemonic:
    -setToolTip:
    +setUsesUserKeyEquivalents:
    -state
    -submenu
    -target
    -title
    -toolTip
    -userKeyEquivalent
    -userKeyEquivalentModifierMask
    +usesUserKeyEquivalents

protocol NSTextAttachmentCell = com.apple.cocoa.application.NSCellForTextAttachment
    -attachment
    -cellBaselineOffset
    -cellSize
    -drawWithFrame:inView:
    -highlight:withFrame:inView:
    -setAttachment:
    -trackMouse:inRect:ofView:untilMouseUp:
    -wantsToTrackMouse
    -drawWithFrame:inView:characterIndex:
    -drawWithFrame:inView:characterIndex:layoutManager:
    -trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:
    -cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:
    -wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:

protocol NSTextInput = com.apple.cocoa.application.NSTextInput
    -attributedSubstringFromRange:
    -characterIndexForPoint:
    -conversationIdentifier
    -doCommandBySelector:
    -firstRectForCharacterRange:
    -hasMarkedText
    -insertText:
    -markedRange
    -selectedRange
    -setMarkedText:selectedRange:
    -unmarkText
    -validAttributesForMarkedText

# Exposed class interfaces.

class NSActionCell = com.apple.cocoa.application.NSActionCell
    -action
    -controlView
    -doubleValue
    -floatValue
    constructor -init
    -intValue
    -setAction:
    -setAlignment:
    -setBezeled:
    -setBordered:
    -setEnabled:
    -setFloatingPointFormat:left:right:
    -setFont:
    -setImage:
    -setObjectValue:
    -setTag:
    -setTarget:
    -stringValue
    -tag
    -target

    @{
	protected NSActionCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSAffineTransform = com.apple.cocoa.application.NSAffineTransform
    implements NSCoding
    -appendTransform:
    -concat
    constructor -init
    constructor -initWithTransform:
    -invert
    -prependTransform:
    -rotateByDegrees:
    -rotateByRadians:
    -scaleBy:
    -scaleXBy:yBy:
    -set
    +transform
    -transformBezierPath:
    -transformPoint:
    -transformSize:
    -translateXBy:yBy:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSAffineTransform(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSAlert = com.apple.cocoa.application.NSAlert
    -addButtonWithTitle:
    -alertStyle
    -beginSheetModalForWindow:modalDelegate:didEndSelector:contextObject:
    -buttons
    -delegate
    -helpAnchor
    -icon
    -informativeText
    -messageText
    -runModal
    -setDelegate:
    -setHelpAnchor:
    -setAlertStyle:
    -setIcon:
    -setInformativeText:
    -setMessageText:
    -setShowsHelp:
    -showsHelp
    -window

    @{
/*
 * Button default return values.
 *
 */

public static final int FirstButtonReturn = 1000;
public static final int SecondButtonReturn = 1001;
public static final int ThirdButtonReturn = 1002;

/* Alert types */
public static final int WarningStyle = 0;
public static final int InformationalStyle = 1;
public static final int CriticalStyle = 2;
    @}

class NSApplication = com.apple.cocoa.application.NSApplication
    -abortModal
    -activateContextHelpMode:
    -activateIgnoringOtherApps:
    -addWindowsItem:title:filename:
    +appkitVersionNumber
    -applicationIconImage
    -arrangeInFront:
    +beep
    -beginModalSessionForWindow:
    -beginModalSessionForWindow:relativeToWindow:
    -beginSheet:modalForWindow:modalDelegate:didEndSelector:
    -beginSheet:modalForWindow:modalDelegate:didEndSelector:contextObject:
    -cancelUserAttentionRequest:
    -changeWindowsItem:title:filename:
    -context
    -currentEvent
    -deactivate
    -delegate
    -discardEventsMatchingMask:beforeEvent:
    -endModalSession:
    -endSheet:
    -endSheet:returnCode:
    -finishLaunching
    -hide:
    -hideOtherApplications:
    constructor -init
    -isActive
    -isHidden
    -isRunning
    -keyWindow
    -mainMenu
    -mainWindow
    -makeWindowsPerform:inOrder:
    -miniaturizeAll:
    -modalWindow
    -nextEventMatchingMask:untilDate:inMode:dequeue:
    -orderFrontCharacterPalette:
    -orderFrontColorPanel:
    -orderFrontStandardAboutPanel:
    -orderFrontStandardAboutPanelWithOptions:
    -postEvent:atStart:
    -preventWindowOrdering
    -registerServicesMenuSendTypes:returnTypes:
    -removeWindowsItem:
    -replyToApplicationShouldTerminate:
    -replyToOpenOrPrint:
    -reportException:
    -requestUserAttention:
    -run
    -runModalForWindow:
    -runModalForWindow:relativeToWindow:
    -runModalSession:
    -runPageLayout:
    -sendAction:to:from:
    -sendEvent:
    -servicesMenu
    -servicesProvider
    -setApplicationIconImage:
    -setDelegate:
    -setMainMenu:
    -setServicesMenu:
    -setServicesProvider:
    -setWindowsMenu:
    -setWindowsNeedUpdate:
    +sharedApplication
    -showHelp:
    +showSystemInfoPanel:
    -stop:
    -stopModal
    -stopModalWithCode:
    -targetForAction:
    -targetForAction:to:from:
    -terminate:
    -tryToPerform:with:
    -unhide:
    -unhideAllApplications:
    -unhideWithoutActivation
    -updateWindows
    -updateWindowsItem:
    -validRequestorForSendType:returnType:
    -windows
    -windowsMenu
    -windowWithWindowNumber:

    @{

/*
 * Notifications.
 *
 */

public static final String ApplicationDidBecomeActiveNotification = "NSApplicationDidBecomeActiveNotification";
public static final String ApplicationDidChangeScreenParametersNotification = "NSApplicationDidChangeScreenParametersNotification";
public static final String ApplicationDidHideNotification = "NSApplicationDidHideNotification";
public static final String ApplicationDidFinishLaunchingNotification = "NSApplicationDidFinishLaunchingNotification";
public static final String ApplicationDidResignActiveNotification = "NSApplicationDidResignActiveNotification";
public static final String ApplicationDidUnhideNotification = "NSApplicationDidUnhideNotification";
public static final String ApplicationDidUpdateNotification = "NSApplicationDidUpdateNotification";
public static final String ApplicationWillBecomeActiveNotification = "NSApplicationWillBecomeActiveNotification";
public static final String ApplicationWillHideNotification = "NSApplicationWillHideNotification";
public static final String ApplicationWillFinishLaunchingNotification = "NSApplicationWillFinishLaunchingNotification";
public static final String ApplicationWillResignActiveNotification = "NSApplicationWillResignActiveNotification";
public static final String ApplicationWillUnhideNotification = "NSApplicationWillUnhideNotification";
public static final String ApplicationWillUpdateNotification = "NSApplicationWillUpdateNotification";
public static final String ApplicationWillTerminateNotification = "NSApplicationWillTerminateNotification";

/*
  * Nib loading needs some help, since we cannot define categories in
  * Java.
  *
  */

public static native boolean loadNibNamed(String nibName, Object owner);
public static native boolean loadNibFromBundle(com.apple.cocoa.foundation.NSBundle bundle, String nibName, Object owner);

/*
 * RunLoop modes added by the kit
 */
public static final String ModalPanelRunLoopMode = "NSModalPanelRunLoopMode";
public static final String EventTrackingRunLoopMode = "NSEventTrackingRunLoopMode";

/*
 * Modal return values.
 *
 */

public static final int RunStoppedResponse = -1000;
public static final int RunAbortedResponse = -1001;
public static final int RunContinuesResponse = -1002;

/* 
 * Return values for applicationShouldTerminate:
 *
 */
public static final int TerminateCancel = 0;
public static final int TerminateNow = 1;
public static final int TerminateLater = 2;

/*
 * Version numbers
 */
public static final double AppKitVersionNumber10_0 = 577d;
public static final double AppKitVersionNumber10_1 = 620d;
public static final double AppKitVersionNumber10_2 = 663d;
public static final double AppKitVersionNumber10_2_3 = 663.6d;

/*
 * UserAttention request types
 *
 */
public static final int UserAttentionRequestCritical = 0;
public static final int UserAttentionRequestInformational = 10;

/*
 * Delegate reply values
 */
public static final int DelegateReplySuccess = 0;
public static final int DelegateReplyCancel = 1;
public static final int DelegateReplyFailure = 2;
    @}

class NSArrayController = com.apple.cocoa.application.NSArrayController
    -addObject:
    -addObjects:
    -addSelectedObjects:
    -addSelectionIndexes:
    -arrangeObjects:
    -arrangedObjects
    -avoidsEmptySelection
    -canInsert
    -canSelectNext
    -canSelectPrevious
    -insert:
    -insertObject:atArrangedObjectIndex:
    -insertObjects:atArrangedObjectIndexes:
    -preservesSelection
    -removeObject:
    -removeObjectAtArrangedObjectIndex:
    -removeObjects:
    -removeObjectsAtArrangedObjectIndexes:
    -removeSelectedObjects:
    -removeSelectionIndexes:
    -selectNext:
    -selectPrevious:
    -selectedObjects
    -selectionIndex
    -selectionIndexes
    -selectsInsertedObjects
    -setAvoidsEmptySelection:
    -setPreservesSelection:
    -setSelectedObjects:
    -setSelectionIndex:
    -setSelectionIndexes:
    -setSelectsInsertedObjects:
    -setSortDescriptors:
    -sortDescriptors

class NSBezierPath = com.apple.cocoa.application.NSBezierPath
    implements NSCoding
    -addClip
    -appendBezierPath:
    -appendBezierPathWithArcFromPoint:toPoint:radius:
    -appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:
    -appendBezierPathWithGlyph:inFont:
    -appendBezierPathWithOvalInRect:
    -appendBezierPathWithRect:
    +bezierPath
    -bezierPathByFlatteningPath
    -bezierPathByReversingPath
    +bezierPathWithOvalInRect:
    +bezierPathWithRect:
    -bounds
    -cachesBezierPath
    +clipRect:
    -closePath
    -containsPoint:
    -controlPointBounds
    -currentPoint
    -curveToPoint:controlPoint1:controlPoint2:
    +defaultFlatness
    +defaultLineCapStyle
    +defaultLineJoinStyle
    +defaultLineWidth
    +defaultMiterLimit
    +defaultWindingRule
    -elementCount
    -fill
    +fillRect:
    -flatness
    constructor -init
    -isEmpty
    -lineCapStyle
    -lineDashPhase
    -lineJoinStyle
    -lineToPoint:
    -lineWidth
    -miterLimit
    -moveToPoint:
    -relativeCurveToPoint:controlPoint1:controlPoint2:
    -relativeLineToPoint:
    -relativeMoveToPoint:
    -removeAllPoints
    -setCachesBezierPath:
    -setClip
    +setDefaultFlatness:
    +setDefaultLineCapStyle:
    +setDefaultLineJoinStyle:
    +setDefaultLineWidth:
    +setDefaultMiterLimit:
    +setDefaultWindingRule:
    -setFlatness:
    -setLineCapStyle:
    -setLineJoinStyle:
    -setLineWidth:
    -setMiterLimit:
    -setWindingRule:
    -stroke
    +strokeLineFromPoint:toPoint:
    +strokeRect:
    -transformUsingAffineTransform:
    -windingRule

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSBezierPath(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Path elements types.
 *
 */

public static final int BezierPathElementTypeMoveTo = 1;
public static final int BezierPathElementTypeLineTo = 3;
public static final int BezierPathElementTypeCurveTo = 5;
public static final int BezierPathElementTypeClose = 10;

/*
 * Path winding rule types.
 *
 */

public static final int WindingRuleNonZero = 0;
public static final int WindingRuleEvenOdd = 1;

/*
 * Line cap types.
 *
 */

public static final int LineCapStyleButt = 0;
public static final int LineCapStyleRound = 1;
public static final int LineCapStyleProjectingSquare = 2;

/*
 * Line join styles.
 *
 */

public static final int LineJoinStyleMiter = 0;
public static final int LineJoinStyleRound = 1;
public static final int LineJoinStyleBevel = 2;

/*
 * Dashed line support
 */
public native void setLineDash(float[] pattern, float phase);
public native float[] lineDashPattern();
    @}

class NSBitmapImageRep = com.apple.cocoa.application.NSBitmapImageRep
    -bitsPerPixel
    -bytesPerPlane
    -bytesPerRow
    -canBeCompressedUsing:
    -colorizeByMappingGray:toColor:blackMapping:whiteMapping:
    -getCompressionFactor
    -getCompressionType
    +imageRepsWithData:
    +imageRepWithData:
    -incrementalLoadFromData:complete:
    constructor -init
    private -initForIncrementalLoad
    constructor -initWithData:
    constructor -initWithFocusedViewRect:
    constructor -initWithPixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:
    -isPlanar
    +localizedNameForTIFFCompressionType:
    -numberOfPlanes
    +representationOfImageRepsInArray:usingType:properties:
    -representationUsingType:properties:
    -samplesPerPixel
    -setCompression:factor:
    -setProperty:withValue:
    -TIFFRepresentation
    +TIFFRepresentationOfImageRepsInArray:
    +TIFFRepresentationOfImageRepsInArray:usingCompression:factor:
    -TIFFRepresentationUsingCompression:factor:
    -valueForProperty:

    @{
	protected NSBitmapImageRep(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Images types.
 *
 */

public static final int TIFFFileType = 0;
public static final int BMPFileType = 1;
public static final int GIFFileType = 2;
public static final int JPEGFileType = 3;
public static final int PNGFileType = 4;

/*
 * TIFF compression type.
 *
 */

public static final int TIFFCompressionNone = 1;
public static final int TIFFCompressionCCITTFAX3 = 3;            /* 1 bps only */
public static final int TIFFCompressionCCITTFAX4 = 4;            /* 1 bps only */
public static final int TIFFCompressionLZW = 5;
public static final int TIFFCompressionJPEG = 6;
public static final int TIFFCompressionNEXT = 32766;        /* Input only */
public static final int TIFFCompressionPackBits = 32773;
public static final int TIFFCompressionOldJPEG = 32865;         /* Input only */

/*
 * Bitmap Image Properties
 *
 */
public static final String ImageCompressionMethod    = "NSImageCompressionMethod";
public static final String ImageCompressionFactor    = "NSImageCompressionFactor";
public static final String ImageDitherTransparency   = "NSImageDitherTransparency";
public static final String ImageRGBColorTable        = "NSImageRGBColorTable";
public static final String ImageInterlaced           = "NSImageInterlaced";
public static final String ImageColorSyncProfileData = "NSImageColorSyncProfileData";
public static final String ImageFrameCount           = "NSImageFrameCount";
public static final String ImageCurrentFrame         = "NSImageCurrentFrame";
public static final String ImageCurrentFrameDuration = "NSImageCurrentFrameDuration";
public static final String ImageLoopCount            = "NSImageLoopCount";

/*
 * Incremental load status
 *
 */

public static final int ImageRepLoadStatusUnknownType     = -1;
public static final int ImageRepLoadStatusReadingHeader   = -2;
public static final int ImageRepLoadStatusWillNeedAllData = -3;
public static final int ImageRepLoadStatusInvalidData     = -4;
public static final int ImageRepLoadStatusUnexpectedEOF   = -5;
public static final int ImageRepLoadStatusCompleted       = -6;

/*
 * TIFF compression types as list of ints
 *
 */

public static native int[] TIFFCompressionTypes();

/*
 * Get copy of image bytes, set bytes from copy
 *
 */

public native byte[] bitmapData();
public native void setBitmapData(byte[] data);

private native byte[] getIndexedBitmapDataPlane(int i);
public byte[][] bitmapDataPlanes()
{
   /* because we can't currently allocate multidimensional arrays in a,
      native method, allocate an array at the start and pass it in */

   // allocate storage for planes.
   //
   int noOfPlanes = numberOfPlanes();
   byte[][] planes = new byte[noOfPlanes][];

   // get each plane's contents (we can't pass in multidimensional array since we
   // we can't get access to elements in native methods)
   //
   for (int i = 0; i < noOfPlanes; i++)
       planes [i]= getIndexedBitmapDataPlane(i);

   return planes;
}

private native void setIndividualBitmapDataPlanes(byte[] p0, byte[] p1, byte[] p2, byte[] p3, byte[] p4);
public void setBitmapDataPlanes(byte[][] planes)
{
    // because we can't use multidimensional array, pass in each plane separately
    //
   int noOfPlanes = numberOfPlanes();
   if (planes.length != noOfPlanes) 
    setIndividualBitmapDataPlanes(noOfPlanes > 0 ? planes[0] : null, noOfPlanes > 1 ? planes[1] : null,
                                   noOfPlanes > 2 ? planes[2] : null, noOfPlanes > 3 ? planes[3] : null,
                                   noOfPlanes > 4 ? planes[4] : null);
}

public NSBitmapImageRep(boolean incrementalLoad) {
    super(false, 0);
    this.initForIncrementalLoad();
}
    @}

class NSBox = com.apple.cocoa.application.NSBox
    -borderRect
    -borderType
    -boxType
    -contentView
    -contentViewMargins
    constructor -init
    constructor -initWithFrame:
    -setBorderType:
    -setBoxType:
    -setContentView:
    -setContentViewMargins:
    -setFrameFromContentFrame:
    -setTitle:
    -setTitleFont:
    -setTitlePosition:
    -setTitleWithMnemonic:
    -sizeToFit
    -title
    -titleCell
    -titleFont
    -titlePosition
    -titleRect

    @{
	protected NSBox(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int NoTitle = 0;
public static final int AboveTop = 1;
public static final int AtTop = 2;
public static final int BelowTop = 3;
public static final int AboveBottom = 4;
public static final int AtBottom = 5;
public static final int BelowBottom = 6;
    @}

class NSBrowser = com.apple.cocoa.application.NSBrowser
    -acceptsArrowKeys
    -addColumn
    -allowsBranchSelection
    -allowsEmptySelection
    -allowsMultipleSelection
    +cellClass
    -cellPrototype
    -columnsAutosaveName
    -columnContentWidthForColumnWidth:
    -columnResizingType
    -columnWidthForColumnContentWidth:
    -columnOfMatrix:
    -delegate
    -displayAllColumns
    -displayColumn:
    -doClick:
    -doDoubleClick:
    -doubleAction
    -drawTitleOfColumn:inRect:
    -firstVisibleColumn
    -frameOfColumn:
    -frameOfInsideOfColumn:
    -hasHorizontalScroller
    constructor -init
    constructor -initWithFrame:
    -isLoaded
    -isTitled
    -lastColumn
    -lastVisibleColumn
    -loadColumnZero
    -loadedCellAtRow:column:
    -matrixClass
    -matrixInColumn:
    -maxVisibleColumns
    -minColumnWidth
    -numberOfVisibleColumns
    -path
    -pathSeparator
    -pathToColumn:
    -prefersAllColumnUserResizing
    -reloadColumn:
    +removeSavedColumnsWithAutosaveName:
    -reusesColumns
    -scrollColumnsLeftBy:
    -scrollColumnsRightBy:
    -scrollColumnToVisible:
    -scrollViaScroller:
    -selectAll:
    -selectedCell
    -selectedCellInColumn:
    -selectedCells
    -selectedColumn
    -selectedRowInColumn:
    -selectRow:inColumn:
    -sendAction
    -sendsActionOnArrowKeys
    -separatesColumns
    -setAcceptsArrowKeys:
    -setAllowsBranchSelection:
    -setAllowsEmptySelection:
    -setAllowsMultipleSelection:
    -setCellClass:
    -setCellPrototype:
    -setColumnsAutosaveName:
    -setColumnResizingType:
    -setDelegate:
    -setDoubleAction:
    -setHasHorizontalScroller:
    -setLastColumn:
    -setMatrixClass:
    -setMaxVisibleColumns:
    -setMinColumnWidth:
    -setPath:
    -setPathSeparator:
    -setPrefersAllColumnUserResizing:
    -setReusesColumns:
    -setSendsActionOnArrowKeys:
    -setSeparatesColumns:
    -setTakesTitleFromPreviousColumn:
    -setTitle:ofColumn:
    -setTitled:
    -setWidth:ofColumn:
    -takesTitleFromPreviousColumn
    -tile
    -titleFrameOfColumn:
    -titleHeight
    -titleOfColumn:
    -updateScroller
    -validateVisibleColumns
    -widthOfColumn:

    @{
	protected NSBrowser(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int NoColumnResizing = 0;
public static final int AutoColumnResizing = 1;
public static final int UserColumnResizing = 2;

/*
 * Notifications.
 *
 */
 
public static final String ColumnConfigurationDidChangeNotification = "NSBrowserColumnConfigurationDidChangeNotification";

    @}

class NSBrowserCell = com.apple.cocoa.application.NSBrowserCell
    -alternateImage
    +branchImage
    -highlightColorInView:
    +highlightedBranchImage
    constructor -init
    -isLeaf
    -isLoaded
    -reset
    -set
    -setAlternateImage:
    -setLeaf:
    -setLoaded:

    @{
	protected NSBrowserCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSButton = com.apple.cocoa.application.NSButton
    -allowsMixedState
    -alternateImage
    -alternateTitle
    -attributedAlternateTitle
    -attributedTitle
    -bezelStyle
    -highlight:
    -image
    -imagePosition
    constructor -init
    constructor -initWithFrame:
    -interval
    -isBordered
    -isTransparent
    -keyEquivalent
    -keyEquivalentModifierMask
    -performKeyEquivalent:
    -periodicDelay
    -setAllowsMixedState:
    -setAlternateImage:
    -setAlternateTitle:
    -setAttributedAlternateTitle:
    -setAttributedTitle:
    -setBezelStyle:
    -setBordered:
    -setButtonType:
    -setImage:
    -setImagePosition:
    -setKeyEquivalent:
    -setKeyEquivalentModifierMask:
    -setNextState
    -setPeriodicDelay:interval:
    -setShowsBorderOnlyWhileMouseInside:
    -setSound:
    -setState:
    -setTitle:
    -setTitleWithMnemonic:
    -setTransparent:
    -showsBorderOnlyWhileMouseInside
    -sound
    -state
    -title

    @{
	protected NSButton(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int MomentaryLight = 0;
public static final int PushOnPushOff = 1;
public static final int Toggle = 2;
public static final int Switch = 3;
public static final int Radio = 4;
public static final int MomentaryChange = 5;
public static final int OnOff = 6;
public static final int MomentaryPush = 7;
    @}

class NSButtonCell = com.apple.cocoa.application.NSButtonCell
    -alternateImage
    -alternateMnemonic
    -alternateMnemonicLocation
    -alternateTitle
    -attributedAlternateTitle
    -attributedTitle
    -bezelStyle
    -gradientType
    -highlightsBy
    -imageDimsWhenDisabled
    -imagePosition
    constructor -init
    -isOpaque
    -isTransparent
    -keyEquivalent
    -keyEquivalentFont
    -keyEquivalentModifierMask
    -mouseEntered:
    -mouseExited:
    -performClick:
    -setAlternateImage:
    -setAlternateMnemonicLocation:
    -setAlternateTitle:
    -setAlternateTitleWithMnemonic:
    -setAttributedAlternateTitle:
    -setAttributedTitle:
    -setBezelStyle:
    -setButtonType:
    -setFont:
    -setGradientType:
    -setHighlightsBy:
    -setImageDimsWhenDisabled:
    -setImagePosition:
    -setKeyEquivalent:
    -setKeyEquivalentFont:
    -setKeyEquivalentFont:size:
    -setKeyEquivalentModifierMask:
    -setPeriodicDelay:interval:
    -setShowsBorderOnlyWhileMouseInside:
    -setShowsStateBy:
    -setSound:
    -setTitle:
    -setTitleWithMnemonic:
    -setTransparent:
    -showsBorderOnlyWhileMouseInside
    -showsStateBy
    -sound
    -title

    @{
	protected NSButtonCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Button types.
 *
 */

public static final int MomentaryPushButton = 0;
public static final int PushOnPushOffButton = 1;
public static final int ToggleButton = 2;
public static final int SwitchButton = 3;
public static final int RadioButton = 4;
public static final int MomentaryChangeButton  = 5;
public static final int OnOffButton = 6;
public static final int MomentaryLight = 7;

/*
 * Bezel styles.
 *
 */

public static final int RoundedBezelStyle = 1;
public static final int RegularSquareBezelStyle = 2;
public static final int ThickSquareBezelStyle = 3;
public static final int ThickerSquareBezelStyle = 4;
public static final int DisclosureBezelStyle = 5;
public static final int ShadowlessSquareBezelStyle = 6;
public static final int CircularBezelStyle = 7;
public static final int TexturedSquareBezelStyle = 8;
public static final int HelpButtonBezelStyle = 9;
    @}

class NSCachedImageRep = com.apple.cocoa.application.NSCachedImageRep
    constructor -init
    constructor -initWithSize:depth:separate:alpha:
    constructor -initWithWindow:rect:
    -rect
    -window

    @{
	protected NSCachedImageRep(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSCell = com.apple.cocoa.application.NSCell
    implements NSCoding
    -acceptsFirstResponder
    -action
    -alignment
    -allowsEditingTextAttributes
    -allowsMixedState
    -attributedStringValue
    -calcDrawInfo:
    -cellAttribute:
    -cellSize
    -cellSizeForBounds:
    -compare:
    -continueTracking:at:inView:
    -controlSize
    -controlTint
    -controlView
    +defaultFocusRingType
    +defaultMenu
    -doubleValue
    -drawingRectForBounds:
    -drawInteriorWithFrame:inView:
    -drawWithFrame:inView:
    -editWithFrame:inView:editor:delegate:event:
    -endEditing:
    -entryType
    -floatValue
    -focusRingType
    -font
    -formatter
    -hasValidObjectValue
    -highlight:withFrame:inView:
    -highlightColorWithFrame:inView:
    -image
    -imageRectForBounds:
    -importsGraphics
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    -interval
    -intValue
    -isBezeled
    -isBordered
    -isContinuous
    -isEditable
    -isEnabled
    -isEntryAcceptable:
    -isHighlighted
    -isOpaque
    -isScrollable
    -isSelectable
    -keyEquivalent
    -menu
    -menuForEvent:inRect:ofView:
    -mnemonic
    -mnemonicLocation
    -mouseDownFlags
    -nextState
    -objectValue
    -performClick:
    -periodicDelay
    +prefersTrackingUntilMouseUp
    -refusesFirstResponder
    -representedObject
    -resetCursorRect:inView:
    -selectWithFrame:inView:editor:delegate:start:length:
    -sendActionOn:
    -sendsActionOnEndEditing
    -setAction:
    -setAlignment:
    -setAllowsEditingTextAttributes:
    -setAllowsMixedState:
    -setAttributedStringValue:
    -setBezeled:
    -setBordered:
    -setCellAttribute:to:
    -setContinuous:
    -setControlSize:
    -setControlTint:
    -setDoubleValue:
    -setEditable:
    -setEnabled:
    -setEntryType:
    -setFloatingPointFormat:left:right:
    -setFloatValue:
    -setFocusRingType:
    -setFont:
    -setFormatter:
    -setHighlighted:
    -setImage:
    -setImportsGraphics:
    -setIntValue:
    -setMenu:
    -setMnemonicLocation:
    -setNextState
    -setObjectValue:
    -setRefusesFirstResponder:
    -setRepresentedObject:
    -setScrollable:
    -setSelectable:
    -setSendsActionOnEndEditing:
    -setShowsFirstResponder:
    -setState:
    -setStringValue:
    -setTag:
    -setTarget:
    -setTitle:
    -setTitleWithMnemonic:
    -setType:
    -setUpFieldEditorAttributes:
    -setWraps:
    -showsFirstResponder
    -startTrackingAt:inView:
    -state
    -stopTracking:at:inView:mouseIsUp:
    -stringValue
    -tag
    -takeDoubleValueFrom:
    -takeFloatValueFrom:
    -takeIntValueFrom:
    -takeObjectValueFrom:
    -takeStringValueFrom:
    -target
    -titleRectForBounds:
    -trackMouse:inRect:ofView:untilMouseUp:
    -type
    -wraps

    @{

	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Entry types.
 *
 */

public static final int AnyType = 0;
public static final int IntType = 1;
public static final int PositiveIntType = 2;
public static final int FloatType = 3;
public static final int PositiveFloatType = 4;
public static final int DoubleType = 6;
public static final int PositiveDoubleType = 7;

/*
 * Cell types.
 *
 */

public static final int NullCellType = 0;
public static final int TextCellType = 1;
public static final int ImageCellType = 2;

/*
 * Cell attributes.
 *
 */

public static final int Disabled = 0;
public static final int State = 1;
public static final int PushIn = 2;
public static final int Editable = 3;
public static final int ChangeGray = 4;
public static final int Highlighted = 5;
public static final int LightsByContents = 6;
public static final int LightsByGray = 7;
public static final int ChangeBackground = 8;
public static final int LightsByBackground = 9;
public static final int IsBordered = 10;
public static final int HasOverlappingImage = 11;
public static final int HasImageHorizontal = 12;
public static final int HasImageOnLeftOrBottom = 13;
public static final int ChangesContents = 14;
public static final int IsInsetButton = 15;

/*
 * Cell image positions.
 *
 */

public static final int NoImage = 0;
public static final int ImageOnly = 1;
public static final int ImageLeft = 2;
public static final int ImageRight = 3;
public static final int ImageBelow = 4;
public static final int ImageAbove = 5;
public static final int ImageOverlaps = 6;

/*
 * Cell states.
 *
 */

public static final int MixedState = -1;
public static final int OffState   =  0;
public static final int OnState    =  1;

/*
 * Cell tints.
 *
 */

public static final int RegularControlSize = 0;
public static final int SmallControlSize   = 1;
public static final int MiniControlSize    = 2;

public static final int DefaultControlTint  = 0;
public static final int BlueControlTint     = 1;
public static final int GraphiteControlTint = 6;
public static final int ClearControlTint    = 7;

    @}

class NSClipView = com.apple.cocoa.application.NSClipView
    -autoscroll:
    -backgroundColor
    -constrainScrollPoint:
    -copiesOnScroll
    -documentCursor
    -documentRect
    -documentView
    -documentVisibleRect
    -drawsBackground
    constructor -init
    constructor -initWithFrame:
    -scrollToPoint:
    -setBackgroundColor:
    -setCopiesOnScroll:
    -setDocumentCursor:
    -setDocumentView:
    -setDrawsBackground:
    -viewBoundsChanged:
    -viewFrameChanged:

    @{
	protected NSClipView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSColor = com.apple.cocoa.application.NSColor
    implements NSCoding
    -alphaComponent
    +alternateSelectedControlColor
    +alternateSelectedControlTextColor
    +blackColor
    -blackComponent
    -blendedColorWithFraction:ofColor:
    +blueColor
    -blueComponent
    -brightnessComponent
    +brownColor
    -catalogNameComponent
    +clearColor
    +colorForControlTint:
    +colorFromPasteboard:
    -colorNameComponent
    -colorSpaceName
    -colorUsingColorSpaceName:
    -colorUsingColorSpaceName:device:
    -colorWithAlphaComponent:
    +colorWithCalibratedHue:saturation:brightness:alpha:
    +colorWithCalibratedRed:green:blue:alpha:
    +colorWithCalibratedWhite:alpha:
    +colorWithCatalogName:colorName:
    +colorWithDeviceCyan:magenta:yellow:black:alpha:
    +colorWithDeviceHue:saturation:brightness:alpha:
    +colorWithDeviceRed:green:blue:alpha:
    +colorWithDeviceWhite:alpha:
    +colorWithPatternImage:
    +controlAlternatingRowBackgroundColors
    +controlBackgroundColor
    +controlColor
    +controlDarkShadowColor
    +controlHighlightColor
    +controlLightHighlightColor
    +controlShadowColor
    +controlTextColor
    +currentControlTint
    +cyanColor
    -cyanComponent
    +darkGrayColor
    +disabledControlTextColor
    -drawSwatchInRect:
    +grayColor
    +greenColor
    -greenComponent
    +gridColor
    +highlightColor
    -highlightWithLevel:
    -hueComponent
    +ignoresAlpha
    +keyboardFocusIndicatorColor
    +knobColor
    +lightGrayColor
    -localizedCatalogNameComponent
    -localizedColorNameComponent
    +magentaColor
    -magentaComponent
    +orangeColor
    -patternImage
    +purpleColor
    +redColor
    -redComponent
    -saturationComponent
    +scrollBarColor
    +secondarySelectedControlColor
    +selectedControlColor
    +selectedControlTextColor
    +selectedKnobColor
    +selectedMenuItemColor
    +selectedMenuItemTextColor
    +selectedTextBackgroundColor
    +selectedTextColor
    -set
    -setFill
    -setStroke
    +setIgnoresAlpha:
    +shadowColor
    -shadowWithLevel:
    +textBackgroundColor
    +textColor
    +whiteColor
    -whiteComponent
    +windowBackgroundColor
    +windowFrameColor
    +windowFrameTextColor
    -writeToPasteboard:
    +yellowColor
    -yellowComponent

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSColor(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */

public static final String SystemColorsDidChangeNotification = "NSSystemColorsDidChangeNotification";
    @}

class NSColorList = com.apple.cocoa.application.NSColorList
    implements NSCoding
    -allKeys
    +availableColorLists
    +colorListNamed:
    -colorWithKey:
    constructor -init
    constructor -initWithName:
    constructor -initWithName:fromFile:
    -insertColor:key:atIndex:
    -isEditable
    -name
    -removeColorWithKey:
    -removeFile
    -setColor:forKey:
    -writeToFile:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSColorList(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String ColorListDidChangeNotification = "NSColorListDidChangeNotification";
    @}

class NSColorPanel = com.apple.cocoa.application.NSColorPanel
    -accessoryView
    -attachColorList:
    -color
    -detachColorList:
    +dragColor:withEvent:fromView:
    constructor -init
    constructor -initWithContentRect:styleMask:backing:defer:
    constructor -initWithContentRect:styleMask:backing:defer:screen:
    -isContinuous
    -mode
    -setAccessoryView:
    -setAction:
    -setColor:
    -setContinuous:
    -setMode:
    +setPickerMask:
    +setPickerMode:
    -setShowsAlpha:
    -setTarget:
    +sharedColorPanel
    +sharedColorPanelExists
    -showsAlpha

    @{
/*
 * Notifications.
 */
 
public static final String ColorPanelColorDidChangeNotification = "NSColorPanelColorDidChangeNotification";

/*
 * Modes.
 */

public static final int GrayModeColorPanel = 0;
public static final int RGBModeColorPanel = 1;
public static final int CMYKModeColorPanel = 2;
public static final int HSBModeColorPanel = 3;
public static final int CustomPaletteModeColorPanel = 4;
public static final int ColorListModeColorPanel = 5;
public static final int WheelModeColorPanel = 6;

/*
 * Masks.
 */

public static final int ColorPanelGrayModeMask = 0x00000001;
public static final int ColorPanelRGBModeMask = 0x00000002;
public static final int ColorPanelCMYKModeMask = 0x00000004;
public static final int ColorPanelHSBModeMask = 0x00000008;
public static final int ColorPanelCustomPaletteModeMask = 0x00000010;
public static final int ColorPanelColorListModeMask = 0x00000020;
public static final int ColorPanelWheelModeMask = 0x00000040;
public static final int ColorPanelAllModesMask = 0x0000ffff;
    @}

class NSColorPicker = com.apple.cocoa.application.NSColorPicker
    implements NSColorPickingDefault
    -colorPanel
    constructor -init

class NSColorWell = com.apple.cocoa.application.NSColorWell
    -activate:
    -color
    -deactivate
    -drawWellInside:
    constructor -init
    constructor -initWithFrame:
    -isActive
    -isBordered
    -setBordered:
    -setColor:
    -takeColorFrom:

    @{
	protected NSColorWell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSComboBox = com.apple.cocoa.application.NSComboBox
    -addItemsWithObjectValues:
    -addItemWithObjectValue:
    -dataSource
    -deselectItemAtIndex:
    -hasVerticalScroller
    -indexOfItemWithObjectValue:
    -indexOfSelectedItem
    constructor -init
    constructor -initWithFrame:
    -insertItemWithObjectValue:atIndex:
    -intercellSpacing
    -isButtonBordered
    -itemHeight
    -itemObjectValueAtIndex:
    -noteNumberOfItemsChanged
    -numberOfItems
    -numberOfVisibleItems
    -objectValueOfSelectedItem
    -objectValues
    -reloadData
    -removeAllItems
    -removeItemAtIndex:
    -removeItemWithObjectValue:
    -scrollItemAtIndexToTop:
    -scrollItemAtIndexToVisible:
    -selectItemAtIndex:
    -selectItemWithObjectValue:
    -setButtonBordered:
    -setDataSource:
    -setHasVerticalScroller:
    -setIntercellSpacing:
    -setItemHeight:
    -setNumberOfVisibleItems:
    -setUsesDataSource:
    -usesDataSource
    -setCompletes:
    -completes

    @{
	protected NSComboBox(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String ComboBoxWillPopUpNotification = "NSComboBoxWillPopUpNotification";
public static final String ComboBoxWillDismissNotification = "NSComboBoxWillDismissNotification";
public static final String ComboBoxSelectionDidChangeNotification = "NSComboBoxSelectionDidChangeNotification";
public static final String ComboBoxSelectionIsChangingNotification = "NSComboBoxSelectionIsChangingNotification";
    @}

class NSComboBoxCell = com.apple.cocoa.application.NSComboBoxCell
    -addItemsWithObjectValues:
    -addItemWithObjectValue:
    -dataSource
    -deselectItemAtIndex:
    -hasVerticalScroller
    -indexOfItemWithObjectValue:
    -indexOfSelectedItem
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    -insertItemWithObjectValue:atIndex:
    -intercellSpacing
    -isButtonBordered
    -itemHeight
    -itemObjectValueAtIndex:
    -noteNumberOfItemsChanged
    -numberOfItems
    -numberOfVisibleItems
    -objectValueOfSelectedItem
    -objectValues
    -reloadData
    -removeAllItems
    -removeItemAtIndex:
    -removeItemWithObjectValue:
    -scrollItemAtIndexToTop:
    -scrollItemAtIndexToVisible:
    -selectItemAtIndex:
    -selectItemWithObjectValue:
    -setButtonBordered:
    -setDataSource:
    -setHasVerticalScroller:
    -setIntercellSpacing:
    -setItemHeight:
    -setNumberOfVisibleItems:
    -setUsesDataSource:
    -usesDataSource
    -setCompletes:
    -completes
    -completedString:

    @{
	protected NSComboBoxCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSControl = com.apple.cocoa.application.NSControl
    -abortEditing
    -action
    -alignment
    -attributedStringValue
    -calcSize
    -cell
    +cellClass
    -currentEditor
    -doubleValue
    -drawCell:
    -drawCellInside:
    -floatValue
    -font
    -formatter
    -ignoresMultiClick
    constructor -init
    constructor -initWithFrame:
    -intValue
    -isContinuous
    -isEnabled
    -mouseDown:
    -objectValue
    -performClick:
    -refusesFirstResponder
    -selectCell:
    -selectedCell
    -selectedTag
    -sendAction:to:
    -sendActionOn:
    -setAction:
    -setAlignment:
    -setAttributedStringValue:
    -setCell:
    +setCellClass:
    -setContinuous:
    -setDoubleValue:
    -setEnabled:
    -setFloatingPointFormat:left:right:
    -setFloatValue:
    -setFont:
    -setFormatter:
    -setIgnoresMultiClick:
    -setIntValue:
    -setNeedsDisplay
    -setObjectValue:
    -setRefusesFirstResponder:
    -setStringValue:
    -setTag:
    -setTarget:
    -sizeToFit
    -stringValue
    -tag
    -takeDoubleValueFrom:
    -takeFloatValueFrom:
    -takeIntValueFrom:
    -takeObjectValueFrom:
    -takeStringValueFrom:
    -target
    -updateCell:
    -updateCellInside:
    -validateEditing

    @{
	protected NSControl(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String ControlTextDidBeginEditingNotification = "NSControlTextDidBeginEditingNotification";
public static final String ControlTextDidEndEditingNotification = "NSControlTextDidEndEditingNotification";
public static final String ControlTextDidChangeNotification = "NSControlTextDidChangeNotification";
    @}

class NSController = com.apple.cocoa.application.NSController
    implements NSCoding
    -commitEditing
    -discardEditing
    -isEditing
    -objectDidBeginEditing:
    -objectDidEndEditing:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSController(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSControllerPlaceholders = com.apple.cocoa.application.NSControllerPlaceholders
    +defaultPlaceholderForMarker:marker:withBinding:
    +isControllerMarker:
    +multipleValuesMarker
    +noSelectionMarker
    +notApplicableMarker
    +setDefaultPlaceholder:placeHolder:forMarker:withBinding:

class NSCursor = com.apple.cocoa.application.NSCursor
    implements NSCoding
    +arrowCursor
    +closedHandCursor
    +crosshairCursor
    +currentCursor
    +disappearingItemCursor
    +hide
    -hotSpot
    +IBeamCursor
    -image
    constructor -init
    constructor -initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:
    constructor -initWithImage:hotSpot:
    -isSetOnMouseEntered
    -isSetOnMouseExited
    -mouseEntered:
    -mouseExited:
    +openHandCursor
    +pointingHandCursor
    +pop
    -pop
    -push
    +resizeLeftCursor
    +resizeLeftRightCursor
    +resizeRightCursor
    +resizeDownCursor
    +resizeUpCursor
    +resizeUpDownCursor
    -set
    +setHiddenUntilMouseMoves:
    -setOnMouseEntered:
    -setOnMouseExited:
    +unhide

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSCursor(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSCustomImageRep = com.apple.cocoa.application.NSCustomImageRep
    -delegate
    -drawSelector
    constructor -init
    constructor -initWithDrawSelector:delegate:

    @{
	protected NSCustomImageRep(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSDPSContext = com.apple.cocoa.application.NSDPSContext
    @{
/* currentContext returns an NSGraphicsContext.  Nothing else is implemented for NSDPSContext */
public static native com.apple.cocoa.application.NSGraphicsContext currentContext();
public static final String DPSRunLoopMode = "NSDPSRunLoopMode";
    @}

class NSDocument = com.apple.cocoa.application.NSDocument
    -addWindowController:
    -canCloseDocument
    -canCloseDocumentWithDelegate:shouldCloseSelector:contextObject:
    -close
    -dataRepresentationOfType:
    -displayName
    -fileName
    -fileNameFromRunningSavePanelForSaveOperation:
    -fileType
    -fileTypeFromLastRunSavePanel
    -fileWrapperRepresentationOfType:
    -hasUndoManager
    constructor -init
    constructor -initWithContentsOfFile:ofType:
    constructor -initWithContentsOfURL:ofType:
    -isDocumentEdited
    +isNativeType:
    -keepBackupFile
    -loadDataRepresentation:ofType:
    -loadFileWrapperRepresentation:ofType:
    -makeWindowControllers
    -preparePageLayout:
    -prepareSavePanel:
    -printDocument:
    -printInfo
    -printShowingPrintPanel:
    +readableTypes
    -readFromFile:ofType:
    -readFromURL:ofType:
    -removeWindowController:
    -revertDocumentToSaved:
    -revertToSavedFromFile:ofType:
    -revertToSavedFromURL:ofType:
    -runModalPageLayoutWithPrintInfo:
    -runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextObject:
    -runModalPrintOperation:delegate:didRunSelector:contextObject:
    -runModalSavePanel:withAccessoryView:
    -runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextObject:
    -runPageLayout:
    -saveDocument:
    -saveDocumentAs:
    -saveDocumentTo:
    -saveDocumentWithDelegate:didSaveSelector:contextObject:
    -saveToFile:saveOperation:delegate:didSaveSelector:contextObject:
    -setFileName:
    -setFileType:
    -setHasUndoManager:
    -setPrintInfo:
    -setUndoManager:
    -setWindow:
    -shouldChangePrintInfo:
    -shouldCloseWindowController:
    -shouldCloseWindowController:delegate:shouldCloseSelector:contextObject:
    -shouldRunSavePanelWithAccessoryView
    -showWindows
    -undoManager
    -updateChangeCount:
    -validateMenuItem:
    -windowControllerDidLoadNib:
    -windowControllers
    -windowControllerWillLoadNib:
    -windowForSheet
    -windowNibName
    +writableTypes
    -writeToFile:ofType:
    -writeToFile:ofType:originalFile:saveOperation:
    -writeToURL:ofType:
    -writeWithBackupToFile:ofType:saveOperation:
	-fileNameExtensionWasHiddenInLastRunSavePanel
	-fileAttributesToWriteToFile:ofType:saveOperation:
    
    @{
public static final int ChangeDone = 0;
public static final int ChangeUndone = 1;
public static final int ChangeCleared = 2;

public static final int SaveOperation = 0;
public static final int SaveAsOperation = 1;
public static final int SaveToOperation = 2;
    @}

class NSDocumentController = com.apple.cocoa.application.NSDocumentController
    implements NSCoding
    -addDocument:
    -clearRecentDocuments:
    -closeAllDocuments
    -closeAllDocumentsWithDelegate:didCloseAllSelector:contextObject:
    -currentDirectory
    -currentDocument
    -displayNameForType:
    -documentClassForType:
    -documentForFileName:
    -documentForWindow:
    -documents
    -fileExtensionsFromType:
    -fileNamesFromRunningOpenPanel
    -hasEditedDocuments
    constructor -init
    -makeDocumentWithContentsOfFile:ofType:
    -makeDocumentWithContentsOfURL:ofType:
    -makeUntitledDocumentOfType:
    -newDocument:
    -noteNewRecentDocument:
    -noteNewRecentDocumentURL:
    -openDocument:
    -openDocumentWithContentsOfFile:display:
    -openDocumentWithContentsOfURL:display:
    -openUntitledDocumentOfType:display:
    -recentDocumentURLs
    -removeDocument:
    -reviewUnsavedDocumentsWithAlertTitle:cancellable:
    -reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextObject:
    -runModalOpenPanel:forTypes:
    -saveAllDocuments:
    -setShouldCreateUI:
    +sharedDocumentController
    -shouldCreateUI
    -typeFromFileExtension:
    -URLsFromRunningOpenPanel
    -validateMenuItem:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSDocumentController(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSDrawer = com.apple.cocoa.application.NSDrawer
    -close
    -contentSize
    -contentView
    -delegate
    -edge
    constructor -initWithContentSize:preferredEdge:
    -leadingOffset
    -maxContentSize
    -minContentSize
    -open
    -openOnEdge:
    -parentWindow
    -preferredEdge
    -setContentSize:
    -setContentView:
    -setDelegate:
    -setLeadingOffset:
    -setMaxContentSize:
    -setMinContentSize:
    -setParentWindow:
    -setPreferredEdge:
    -setTrailingOffset:
    -state
    -toggle:
    -trailingOffset

    @{
	protected NSDrawer(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/* Deprecated: The following declarations are kept for compatibility, but they are being replaced with new constants that drop the NSDrawer prefix, as it is redundant and inconsistent with existing API. */
public static final int NSDrawerClosedState = 0;
public static final int NSDrawerOpeningState = 1;
public static final int NSDrawerOpenState = 2;
public static final int NSDrawerClosingState = 3;

public static final int ClosedState = 0;
public static final int OpeningState = 1;
public static final int OpenState = 2;
public static final int ClosingState = 3;

public static final String DrawerWillOpenNotification = "NSDrawerWillOpenNotification";
public static final String DrawerDidOpenNotification = "NSDrawerDidOpenNotification";
public static final String DrawerWillCloseNotification = "NSDrawerWillCloseNotification";
public static final String DrawerDidCloseNotification = "NSDrawerDidCloseNotification";
    @}

class NSEPSImageRep = com.apple.cocoa.application.NSEPSImageRep
    -boundingBox
    -EPSRepresentation
    +imageRepWithData:
    constructor -init
    constructor -initWithData:
    -prepareGState

class NSEvent = com.apple.cocoa.application.NSEvent
    implements NSCoding
    -buttonNumber
    -characters
    -charactersIgnoringModifiers
    -clickCount
    -context
    -data1
    -data2
    -deltaX
    -deltaY
    -deltaZ
    -eventNumber
    constructor -init
    -isARepeat
    -keyCode
    +keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:
    -locationInWindow
    -modifierFlags
    +mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:
    +mouseLocation
    +otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:
    -pressure
    +startPeriodicEventsAfterDelay:withPeriod:
    +stopPeriodicEvents
    -subtype
    -timestamp
    -trackingNumber
    -type
    -window
    -windowNumber

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSEvent(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int LeftMouseDown = 1;
public static final int LeftMouseUp = 2;
public static final int RightMouseDown = 3;
public static final int RightMouseUp = 4;
public static final int MouseMoved = 5;
public static final int LeftMouseDragged = 6;
public static final int RightMouseDragged = 7;
public static final int MouseEntered = 8;
public static final int MouseExited = 9;
public static final int KeyDown = 10;
public static final int KeyUp = 11;
public static final int FlagsChanged = 12;
public static final int AppKitDefined = 13;
public static final int SystemDefined = 14;
public static final int ApplicationDefined = 15;
public static final int Periodic = 16;
public static final int CursorUpdate = 17;
public static final int ScrollWheel = 22;
public static final int OtherMouseDown = 25;
public static final int OtherMouseUp = 26;
public static final int OtherMouseDragged = 27;

public static final int LeftMouseDownMask = 1 << LeftMouseDown;
public static final int LeftMouseUpMask = 1 << LeftMouseUp;
public static final int RightMouseDownMask = 1 << RightMouseDown;
public static final int RightMouseUpMask = 1 << RightMouseUp;
public static final int MouseMovedMask = 1 << MouseMoved;
public static final int LeftMouseDraggedMask = 1 << LeftMouseDragged;
public static final int RightMouseDraggedMask = 1 << RightMouseDragged;
public static final int MouseEnteredMask = 1 << MouseEntered;
public static final int MouseExitedMask = 1 << MouseExited;
public static final int KeyDownMask = 1 << KeyDown;
public static final int KeyUpMask = 1 << KeyUp;
public static final int FlagsChangedMask = 1 << FlagsChanged;
public static final int AppKitDefinedMask = 1 << AppKitDefined;
public static final int SystemDefinedMask = 1 << SystemDefined;
public static final int ApplicationDefinedMask = 1 << ApplicationDefined;
public static final int PeriodicMask = 1 << Periodic;
public static final int CursorUpdateMask = 1 << CursorUpdate;
public static final int ScrollWheelMask = 1 << ScrollWheel;
public static final int OtherMouseDownMask = 1 << OtherMouseDown;
public static final int OtherMouseUpMask = 1 << OtherMouseUp;
public static final int OtherMouseDraggedMask = 1 << OtherMouseDragged;
public static final int AnyEventmask = 0xffffffff;

public static final int AlphaShiftKeyMask = 1 << 16;
public static final int ShiftKeyMask = 1 << 17;
public static final int ControlKeyMask = 1 << 18;
public static final int AlternateKeyMask = 1 << 19;
public static final int CommandKeyMask = 1 << 20;
public static final int NumericPadKeyMask = 1 << 21;
public static final int HelpKeyMask = 1 << 22;
public static final int FunctionKeyMask =  1 << 23;

public static final int eventMaskFromType(int type) {
    return 1 << type;
}

public static final int UpArrowFunctionKey = 0xF700;
public static final int DownArrowFunctionKey = 0xF701;
public static final int LeftArrowFunctionKey = 0xF702;
public static final int RightArrowFunctionKey = 0xF703;
public static final int F1FunctionKey = 0xF704;
public static final int F2FunctionKey = 0xF705;
public static final int F3FunctionKey = 0xF706;
public static final int F4FunctionKey = 0xF707;
public static final int F5FunctionKey = 0xF708;
public static final int F6FunctionKey = 0xF709;
public static final int F7FunctionKey = 0xF70A;
public static final int F8FunctionKey = 0xF70B;
public static final int F9FunctionKey = 0xF70C;
public static final int F10FunctionKey = 0xF70D;
public static final int F11FunctionKey = 0xF70E;
public static final int F12FunctionKey = 0xF70F;
public static final int F13FunctionKey = 0xF710;
public static final int F14FunctionKey = 0xF711;
public static final int F15FunctionKey = 0xF712;
public static final int F16FunctionKey = 0xF713;
public static final int F17FunctionKey = 0xF714;
public static final int F18FunctionKey = 0xF715;
public static final int F19FunctionKey = 0xF716;
public static final int F20FunctionKey = 0xF717;
public static final int F21FunctionKey = 0xF718;
public static final int F22FunctionKey = 0xF719;
public static final int F23FunctionKey = 0xF71A;
public static final int F24FunctionKey = 0xF71B;
public static final int F25FunctionKey = 0xF71C;
public static final int F26FunctionKey = 0xF71D;
public static final int F27FunctionKey = 0xF71E;
public static final int F28FunctionKey = 0xF71F;
public static final int F29FunctionKey = 0xF720;
public static final int F30FunctionKey = 0xF721;
public static final int F31FunctionKey = 0xF722;
public static final int F32FunctionKey = 0xF723;
public static final int F33FunctionKey = 0xF724;
public static final int F34FunctionKey = 0xF725;
public static final int F35FunctionKey = 0xF726;
public static final int InsertFunctionKey = 0xF727;
public static final int DeleteFunctionKey = 0xF728;
public static final int HomeFunctionKey = 0xF729;
public static final int BeginFunctionKey = 0xF72A;
public static final int EndFunctionKey = 0xF72B;
public static final int PageUpFunctionKey = 0xF72C;
public static final int PageDownFunctionKey = 0xF72D;
public static final int PrintScreenFunctionKey = 0xF72E;
public static final int ScrollLockFunctionKey = 0xF72F;
public static final int PauseFunctionKey = 0xF730;
public static final int SysReqFunctionKey = 0xF731;
public static final int BreakFunctionKey = 0xF732;
public static final int ResetFunctionKey = 0xF733;
public static final int StopFunctionKey = 0xF734;
public static final int MenuFunctionKey = 0xF735;
public static final int UserFunctionKey = 0xF736;
public static final int SystemFunctionKey = 0xF737;
public static final int PrintFunctionKey = 0xF738;
public static final int ClearLineFunctionKey = 0xF739;
public static final int ClearDisplayFunctionKey	= 0xF73A;
public static final int InsertLineFunctionKey = 0xF73B;
public static final int DeleteLineFunctionKey = 0xF73C;
public static final int InsertCharFunctionKey = 0xF73D;
public static final int DeleteCharFunctionKey = 0xF73E;
public static final int PrevFunctionKey = 0xF73F;
public static final int NextFunctionKey = 0xF740;
public static final int SelectFunctionKey = 0xF741;
public static final int ExecuteFunctionKey = 0xF742;
public static final int UndoFunctionKey = 0xF743;
public static final int RedoFunctionKey = 0xF744;
public static final int FindFunctionKey = 0xF745;
public static final int HelpFunctionKey = 0xF746;
public static final int ModeSwitchFunctionKey = 0xF747;
    @}

class NSFileWrapper = com.apple.cocoa.application.NSFileWrapper
    implements NSCoding
    -addFileWithPath:
    -addFileWrapper:
    -addRegularFileWithContents:preferredFilename:
    -addSymbolicLinkWithDestination:preferredFilename:
    -fileAttributes
    -filename
    -fileWrappers
    -icon
    constructor -init
    constructor -initDirectoryWithFileWrappers:
    private -initRegularFileWithContents:
    private -initSymbolicLinkWithDestination:
    private -initWithPath:
    private -initWithSerializedRepresentation:
    -isDirectory
    -isRegularFile
    -isSymbolicLink
    -keyForFileWrapper:
    -needsToBeUpdatedFromPath:
    -preferredFilename
    -regularFileContents
    -removeFileWrapper:
    -serializedRepresentation
    -setFileAttributes:
    -setFilename:
    -setIcon:
    -setPreferredFilename:
    -symbolicLinkDestination
    -updateFromPath:
    -writeToFile:atomically:updateFilenames:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSFileWrapper(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public NSFileWrapper(String path, boolean symLink) {
    super(false, 0);
    if (symLink) {
    	this.initSymbolicLinkWithDestination(path);
    } else {
    	this.initWithPath(path);
    }
}

public NSFileWrapper(com.apple.cocoa.foundation.NSData data, boolean serializedRep) {
    super(false, 0);
    if (serializedRep) {
    	this.initWithSerializedRepresentation(data);
    } else {
    	this.initRegularFileWithContents(data);
    }
}
    @}

class NSFont = com.apple.cocoa.application.NSFont
    implements NSCoding
    -advancementForGlyph:
    -afmDictionary
    -ascender
    +boldSystemFontOfSize:
    -boundingRectForFont
    -boundingRectForGlyph:
    -capHeight
    +controlContentFontOfSize:
    -descender
    -displayName
    -encodingScheme
    -familyName
    -fontDescriptor
    -fontName
    +fontWithName:matrixArray:
    +fontWithName:size:
    -glyphIsEncoded:
    -glyphPacking
    -glyphWithName:
    constructor -init
    -isBaseFont
    -isFixedPitch
    -italicAngle
    +labelFontOfSize:
    -maximumAdvancement
    +menuBarFontOfSize:
    +menuFontOfSize:
    +messageFontOfSize:
    -mostCompatibleStringEncoding
    -numberOfGlyphs
    +paletteFontOfSize:
    -pointSize
    -positionOfGlyph:forCharacter:struckOverRect:
    +preferredFontNames
    -printerFont
    -screenFont
    -set
    +setPreferredFontNames:
    +setUserFixedPitchFont:
    +setUserFont:
    +systemFontOfSize:
    +titleBarFontOfSize:
    +toolTipsFontOfSize:
    -underlinePosition
    -underlineThickness
    +useFont:
    +userFixedPitchFontOfSize:
    +userFontOfSize:
    -widthOfString:
    -xHeight
    -coveredCharacterSet
    +systemFontSizeForControlSize:
    +smallSystemFontSize
    +labelFontSize
    +systemFontSize

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSFont(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

	public final static int OneByteGlyphPacking = 0;
	public final static int JapaneseEUCGlyphPacking = 1;
	public final static int ASCIIWithDoubleByteEUCGlyphPacking = 2;
	public final static int TwoByteGlyphPacking = 3;
	public final static int FourByteGlyphPacking = 4;

	/** @deprecated No longer implemented. Use NSFont.afmDictionary() */
	public String afmFileContents() { return null; }
    @}

class NSFontDescriptor = com.apple.cocoa.application.NSFontDescriptor
    implements NSCoding
    constructor -initWithFontAttributes:
    -fontAttributes

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSFontDescriptor (com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final String FontFamilyAttribute = "NSFontFamilyAttribute";
public static final String FontNameAttribute = "NSFontNameAttribute";
public static final String FontFaceAttribute = "NSFontFaceAttribute";
public static final String FontSizeAttribute = "NSFontSizeAttribute";
public static final String FontVisibleNameAttribute = "NSFontVisibleNameAttribute";
public static final String FontColorAttribute = "NSFontColorAttribute";
    @}

class NSFontManager = com.apple.cocoa.application.NSFontManager
    -action
    -addCollection:options:
    -addFontDescriptors:toCollection:
    -addFontTrait:
    -availableFontFamilies
    -availableFontNamesWithTraits:
    -availableFonts
    -collectionNames
    -convertAttributes:
    -convertFont:
    -convertFont:toFace:
    -convertFont:toFamily:
    -convertFont:toHaveTrait:
    -convertFont:toNotHaveTrait:
    -convertFont:toSize:
    -convertWeight:ofFont:
    -delegate
    -fontDescriptorsInCollection:
    -fontMenu:
    -fontNamed:hasTraits:
    -fontPanel:
    -fontWithFamily:traits:weight:size:
    constructor -init
    -isEnabled
    -isMultiple
    -localizedNameForFamily:face:
    -modifyFont:
    -modifyFontViaPanel:
    -orderFrontFontPanel:
    -orderFrontStylesPanel:
    -removeCollection:
    -removeFontDescriptor:fromCollection:
    -removeFontTrait:
    -selectedFont
    -sendAction
    -setAction:
    -setDelegate:
    -setEnabled:
    -setFontMenu:
    -setSelectedAttributes:isMultiple:
    -setSelectedFont:isMultiple:
    +sharedFontManager
    -traitsOfFont:
    -weightOfFont:

    @{
public static final int ItalicMask = 0x00000001;
public static final int BoldMask = 0x00000002;
public static final int UnboldMask = 0x00000004;
public static final int NonStandardCharacterSetMask = 0x00000008;
public static final int NarrowMask = 0x00000010;
public static final int ExpandedMask = 0x00000020;
public static final int CondensedMask = 0x00000040;
public static final int SmallCapsMask = 0x000000080;
public static final int PosterMask = 0x00000100;
public static final int CompressedMask = 0x00000200;
public static final int FixedPitchMask = 0x00000400;
public static final int UnitalicMask = 0x01000000;

public static final int FontCollectionApplicationOnlyMask = 0x00000001;

    @}

class NSFontPanel = com.apple.cocoa.application.NSFontPanel
    -accessoryView
    constructor -init
    constructor -initWithContentRect:styleMask:backing:defer:
    constructor -initWithContentRect:styleMask:backing:defer:screen:
    -isEnabled
    -panelConvertFont:
    -setAccessoryView:
    -setEnabled:
    -setPanelFont:isMultiple:
    +sharedFontPanel
    +sharedFontPanelExists
    -worksWhenModal

    @{
public static final int PreviewButton = 131;
public static final int RevertButton = 130;
public static final int SetButton = 132;
public static final int PreviewField = 128;
public static final int SizeField = 129;
public static final int SizeTitle = 133;
public static final int CurrentField = 134;

public static final int FaceModeMask = 0x00000001;
public static final int SizeModeMask = 0x00000002;
public static final int CollectionModeMask = 0x00000004;
public static final int StandardModesMask = 0x0000FFFF;
public static final int AllModesMask = 0x7FFFFFFF;
    @}

class NSForm = com.apple.cocoa.application.NSForm
    -addEntry:
    -cellAtIndex:
    -drawCellAtIndex:
    -indexOfCellWithTag:
    -indexOfSelectedItem
    constructor -init
    constructor -initWithFrame:
    constructor -initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:
    constructor -initWithFrame:mode:prototype:numberOfRows:numberOfColumns:
    -insertEntry:atIndex:
    -removeEntryAtIndex:
    -selectTextAtIndex:
    -setBezeled:
    -setBordered:
    -setEntryWidth:
    -setInterlineSpacing:
    -setTextAlignment:
    -setTextFont:
    -setTitleAlignment:
    -setTitleFont:

    @{
	protected NSForm(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSFormCell = com.apple.cocoa.application.NSFormCell
    -attributedTitle
    constructor -init
    constructor -initTextCell:
    -isOpaque
    -setAttributedTitle:
    -setTitle:
    -setTitleAlignment:
    -setTitleFont:
    -setTitleWidth:
    -setTitleWithMnemonic:
    -title
    -titleAlignment
    -titleFont
    -titleWidth
    -titleWidth:

    @{
	protected NSFormCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSGlyphInfo = com.apple.cocoa.application.NSGlyphInfo
    implements NSCoding
    +glyphInfoWithGlyphName:forFont:baseString:
    +glyphInfoWithGlyph:forFont:baseString:
    +glyphInfoWithCharacterIdentifier:collection:baseString:
    -glyphName
    -characterIdentifier
    -characterCollection

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSGlyphInfo(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

        public static final int IdentityMappingCharacterCollection = 0;
        public static final int AdobeCNS1CharacterCollection = 1;
        public static final int AdobeGB1CharacterCollection = 2;
        public static final int AdobeJapan1CharacterCollection = 3;
        public static final int AdobeJapan2CharacterCollection = 4;
        public static final int AdobeKorea1CharacterCollection = 5;
    @}

class NSGraphicsContext = com.apple.cocoa.application.NSGraphicsContext
    +graphicsContextWithAttributes:
    +graphicsContextWithWindow:
    +currentContextDrawingToScreen
    +saveGraphicsState
    +restoreGraphicsState
    +setGraphicsState:
    +currentContext
    -attributes
    -flushGraphics
    -flush
    -wait
    -imageInterpolation
    constructor -init
    -isDrawingToScreen
    -patternPhase
    -restoreGraphicsState
    -saveGraphicsState
    +setCurrentContext:
    -setImageInterpolation:
    -setPatternPhase:
    -setShouldAntialias:
    -shouldAntialias

    @{
	/* Attributes that can be passed to graphicsContextWithAttributes: method */
	public static final String GraphicsContextDestinationAttributeName = "NSGraphicsContextDestinationAttributeName";
	/* Attributes for NSMutableData or NSURL destinations */
	public static final String GraphicsContextRepresentationFormatAttributeName = "NSGraphicsContextRepresentationFormatAttributeName";
	/* Supported file format */
	public static final String GraphicsContextPSFormat = "NSGraphicsContextPSFormat";
	public static final String GraphicsContextPDFFormat = "NSGraphicsContextPDFFormat";

        /* Image interpolation settings */
        public static final int ImageInterpolationDefault = 0;
        public static final int ImageInterpolationNone = 1;
        public static final int ImageInterpolationLow = 2;
        public static final int ImageInterpolationHigh = 3;
    @}

class NSHelpManager = com.apple.cocoa.application.NSHelpManager
    -contextHelpForObject:
    constructor -init
    -findString:inBook:
    +isContextHelpModeActive
    -openHelpAnchor:inBook:
    -removeContextHelpForObject:
    -setContextHelp:forObject:
    +setContextHelpModeActive:
    +sharedHelpManager
    -showContextHelpForObject:locationHint:

    @{
/*
 * Notifications.
 *
 */
 
public static final String ContextHelpModeDidActivateNotification = "NSContextHelpModeDidActivateNotification";
public static final String ContextHelpModeDidDeactivateNotification = "NSContextHelpModeDidDeactivateNotification";
    @}

class NSImage = com.apple.cocoa.application.NSImage
    implements NSCoding
    -addRepresentation:
    -addRepresentations:
    -backgroundColor
    -bestRepresentationForDevice:
    -cacheDepthMatchesImageDepth
    -cacheMode
    -cancelIncrementalLoad
    +canInitWithPasteboard:
    -compositeToPoint:fromRect:operation:
    -compositeToPoint:fromRect:operation:fraction:
    -compositeToPoint:operation:
    -compositeToPoint:operation:fraction:
    -delegate
    -dissolveToPoint:fraction:
    -dissolveToPoint:fromRect:fraction:
    -drawAtPoint:fromRect:operation:fraction:
    -drawInRect:fromRect:operation:fraction:
    -drawRepresentation:inRect:
    +imageFileTypes
    +imageNamed:
    +imagePasteboardTypes
    +imageUnfilteredFileTypes
    +imageUnfilteredPasteboardTypes
    constructor -init
    private -initByReferencingFile:
    private -initByReferencingURL:
    private -initWithContentsOfFile:
    constructor -initWithContentsOfURL:
    constructor -initWithData:
    constructor -initWithPasteboard:
    constructor -initWithSize:
    -isCachedSeparately
    -isDataRetained
    -isFlipped
    -isValid
    -lockFocus
    -lockFocusOnRepresentation:
    -matchesOnMultipleResolution
    -name
    -prefersColorMatch
    -recache
    -removeRepresentation:
    -representations
    -scalesWhenResized
    -setBackgroundColor:
    -setCacheDepthMatchesImageDepth:
    -setCachedSeparately:
    -setCacheMode:
    -setDataRetained:
    -setDelegate:
    -setFlipped:
    -setMatchesOnMultipleResolution:
    -setName:
    -setPrefersColorMatch:
    -setScalesWhenResized:
    -setSize:
    -setUsesEPSOnResolutionMismatch:
    -size
    -TIFFRepresentation
    -TIFFRepresentationUsingCompression:factor:
    -unlockFocus
    -usesEPSOnResolutionMismatch

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSImage(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Compositing operations.
 *
 */

public static final int CompositeClear = 0;
public static final int CompositeCopy = 1;
public static final int CompositeSourceOver = 2;
public static final int CompositeSourceIn = 3;
public static final int CompositeSourceOut = 4;
public static final int CompositeSourceAtop = 5;
public static final int CompositeDestinationOver = 6;
public static final int CompositeDestinationIn = 7;
public static final int CompositeDestinationOut = 8;
public static final int CompositeDestinationAtop = 9;
public static final int CompositeXOR = 10;
public static final int CompositePlusDarker = 11;
public static final int CompositeHighlight = 12;
public static final int CompositePlusLighter = 13;

/*
 * Incremental Image loading status
 */

public static final int ImageLoadStatusCompleted = 0;
public static final int ImageLoadStatusCancelled = 1;
public static final int ImageLoadStatusInvalidData = 2;
public static final int ImageLoadStatusUnexpectedEOF = 3;
public static final int ImageLoadStatusReadError = 4;

/*
 * Cache mode
 */

public static final int ImageCacheDefault = 0;
public static final int ImageCacheAlways = 1;
public static final int ImageCacheBySize = 2;
public static final int ImageCacheNever = 3;

public NSImage(String path, boolean byReferencing) {
    super(false, 0);
    if (byReferencing) {
    	this.initByReferencingFile(path);
    } else {
    	this.initWithContentsOfFile(path);
    }
}

public NSImage(java.net.URL url, boolean byReferencing) {
    super(false, 0);
    if (byReferencing) {
        this.initByReferencingURL(url);
    } else {
        this.initWithContentsOfURL(url);
    }
}
    @}

class NSImageCell = com.apple.cocoa.application.NSImageCell
    -imageAlignment
    -imageFrameStyle
    -imageScaling
    constructor -init
    constructor -initImageCell:
    -setImageAlignment:
    -setImageFrameStyle:
    -setImageScaling:

    @{
	protected NSImageCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Scaling.
 *
 */

public static final int ScaleProportionally = 0;
public static final int ScaleToFit = 1;
public static final int ScaleNone = 2;

/*
 * Image alignment.
 *
 */

public static final int ImageAlignCenter = 0;
public static final int ImageAlignTop = 1;
public static final int ImageAlignTopLeft = 2;
public static final int ImageAlignTopRight = 3;
public static final int ImageAlignLeft = 4;
public static final int ImageAlignBottom = 5;
public static final int ImageAlignBottomLeft = 6;
public static final int ImageAlignBottomRight = 7;
public static final int ImageAlignRight = 8;

/*
 * Image frames.
 *
 */

public static final int ImageFrameNone = 0;
public static final int ImageFramePhoto = 1;
public static final int ImageFrameGrayBezel = 2;
public static final int ImageFrameGroove = 3;
public static final int ImageFrameButton = 4;
    @}

class NSImageRep = com.apple.cocoa.application.NSImageRep
    implements NSCoding
    -bitsPerSample
    +canInitWithData:
    +canInitWithPasteboard:
    -colorSpaceName
    -draw
    -drawAtPoint:
    -drawInRect:
    -hasAlpha
    +imageFileTypes
    +imagePasteboardTypes
    +imageRepClassForData:
    +imageRepClassForFileType:
    +imageRepClassForPasteboardType:
    +imageRepsWithContentsOfFile:
    +imageRepsWithContentsOfURL:
    +imageRepsWithPasteboard:
    +imageRepWithContentsOfFile:
    +imageRepWithContentsOfURL:
    +imageRepWithPasteboard:
    +imageUnfilteredFileTypes
    +imageUnfilteredPasteboardTypes
    constructor -init
    -isOpaque
    -pixelsHigh
    -pixelsWide
    +registeredImageRepClasses
    +registerImageRepClass:
    -setAlpha:
    -setBitsPerSample:
    -setColorSpaceName:
    -setOpaque:
    -setPixelsHigh:
    -setPixelsWide:
    -setSize:
    -size
    +unregisterImageRepClass:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSImageRep(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Special value for pixel width or height.
 *
 */

public static final int ImageRepMatchesDevice = 0;


/*
 * Notifications.
 *
 */
 
public static final String ImageRepRegistryDidChangeNotification = "NSImageRepRegistryDidChangeNotification";
    @}

class NSImageView = com.apple.cocoa.application.NSImageView
    -animates
    -image
    -imageAlignment
    -imageFrameStyle
    -imageScaling
    constructor -init
    constructor -initWithFrame:
    -isEditable
    -setAnimates:
    -setEditable:
    -setImage:
    -setImageAlignment:
    -setImageFrameStyle:
    -setImageScaling:

    @{
	protected NSImageView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSInputManager = com.apple.cocoa.application.NSInputManager
    implements NSTextInput
    +currentInputManager
    +cycleToNextInputLanguage:
    +cycleToNextInputServerInLanguage:
    -image
    constructor -init
    constructor -initWithName:host:
    -language
    -localizedInputManagerName
    -server
    -wantsToDelayTextChangeNotifications
    -wantsToHandleMouseEvents
    -wantsToInterpretAllKeystrokes

class NSInputServer = com.apple.cocoa.application.NSInputServer
    implements NSInputServerMouseTracker
    implements NSInputServiceProvider
    constructor -init
    constructor -initWithDelegate:name:

class NSJavaHelpGraphics = com.apple.cocoa.application.NSGraphics
    +bestDepth::::
    +bitsPerPixelFromDepth:
    +bitsPerSampleFromDepth:
    +colorSpaceFromDepth:
    +convertGlobalToWindowNumber:
    +convertWindowNumberToGlobal:
    +copyBitmapFromGState:::
    +copyBits:::
    +disableScreenUpdates
    +dottedFrameRect:
    +drawAttributedString:atPoint:
    +drawAttributedString:inRect:
    +drawButton::
    +drawDarkBezel::
    +drawGrayBezel::
    +drawGroove::
    +drawLightBezel::
    +drawWhiteBezel::
    +drawWindowBackground:
    +enableScreenUpdates
    +eraseRect:
    +frameRect:
    +frameRectWithWidth::
    +frameRectWithWidthUsingOperation:::
    +highlightRect:
    constructor -init
    +numberOfColorComponents:
    +planarFromDepth:
    +readPixel:
    +setFocusRingStyle:
    +sizeOfAttributedString:
    +windowCount

    @{
/* methods that require native stubs for type conversion */
public static native int[] availableWindowDepths();
public static native void fillRectListInRange(com.apple.cocoa.foundation.NSRect rects[], com.apple.cocoa.foundation.NSRange range);
public static native void fillRectListWithColorsInRange(com.apple.cocoa.foundation.NSRect rects[], NSColor colors[], com.apple.cocoa.foundation.NSRange range);
public static native void clipRectListInRange(com.apple.cocoa.foundation.NSRect rects[], com.apple.cocoa.foundation.NSRange range);
public static native void drawColorTiledRects(com.apple.cocoa.foundation.NSRect boundsRect, com.apple.cocoa.foundation.NSRect clipRect, int sides[], NSColor colors[], com.apple.cocoa.foundation.NSRange range);
public static native void drawBitmap(com.apple.cocoa.foundation.NSRect rect, int width, int height, int bps, int spp, int bpp, int bpr, boolean planar, boolean alpha, String colorSpaceName, byte[] data);
public static native void windowList(int[] list);
/* convenience methods that invoke other stubs */
public static void fillRectList(com.apple.cocoa.foundation.NSRect rects[]) {
    fillRectListInRange(rects, new com.apple.cocoa.foundation.NSRange(0,rects.length));
}
public static void fillRectListWithColors(com.apple.cocoa.foundation.NSRect rects[], NSColor colors[]) {
    fillRectListWithColorsInRange(rects, colors, new com.apple.cocoa.foundation.NSRange(0,rects.length));
}
public static void clipRectList(com.apple.cocoa.foundation.NSRect rects[]) {
    clipRectListInRange(rects, new com.apple.cocoa.foundation.NSRange(0,rects.length));
}

/* constants */
public static final float White = 1.0f;
public static final float LightGray = (1.0f/3.0f);
public static final float DarkGray = (2.0f/3.0f);
public static final float Black = 0.0f;

public static final int FocusRingOnly  = 0;
public static final int FocusRingBelow = 1;
public static final int FocusRingAbove = 2;

/* used by NSView and NSCell's setFocusRingType: for configuration of if and how the focus ring will be drawn */
public static final int FocusRingTypeDefault = 0;
public static final int FocusRingTypeNone = 1;
public static final int FocusRingTypeExterior = 2;

/* strings */
public static final String DeviceResolution = "NSDeviceResolution";
public static final String DeviceColorSpaceName = "NSDeviceColorSpaceName";
public static final String DeviceBitsPerSample = "NSDeviceBitsPerSample";
public static final String DeviceIsScreen = "NSDeviceIsScreen";
public static final String DeviceIsPrinter = "NSDeviceIsPrinter";
public static final String DeviceSize = "NSDeviceSize"; 

public static final String CalibratedWhiteColorSpace = "NSCalibratedWhiteColorSpace";
public static final String CalibratedBlackColorSpace = "NSCalibratedBlackColorSpace";
public static final String CalibratedRGBColorSpace = "NSCalibratedRGBColorSpace";
public static final String DeviceWhiteColorSpace = "NSDeviceWhiteColorSpace";
public static final String DeviceBlackColorSpace = "NSDeviceBlackColorSpace";
public static final String DeviceRGBColorSpace = "NSDeviceRGBColorSpace";
public static final String DeviceCMYKColorSpace = "NSDeviceCMYKColorSpace";
public static final String NamedColorSpace = "NSNamedColorSpace";
public static final String PatternColorSpace = "NSPatternColorSpace";
public static final String CustomColorSpace = "NSCustomColorSpace";
public static final String DynamicSystemColorSpace = "NSDynamicSystemColorSpace";
public static final String SystemColorsDidChangeNotification = "NSSystemColorsDidChangeNotification";
    @}

class NSJavaHelpInterfaceStyle = com.apple.cocoa.application.NSInterfaceStyle
    constructor -init
    +interfaceStyleForKey:forResponder:

    @{
public static final String Windows95InterfaceStyleDefaultValue = "Windows95";
static final String NextStepInterfaceStyleDefaultValue = "NextStep";
public static final String MacintoshInterfaceStyleDefaultValue = "Macintosh";

public static final String InterfaceStyleDefault = "NSInterfaceStyle";

public static final String SystemColorInterfaceStyleDefault = "NSSystemColorInterfaceStyle";
public static final String AlertInterfaceStyleDefault = "NSAlertInterfaceStyle";
public static final String ScrollerInterfaceStyleDefault = "NSScrollerInterfaceStyle";
public static final String ScrollerPagingBehaviorDefault = "NSScrollerPagingBehavior";
public static final String ScrollerArrowPositioningDefault = "NSScrollerArrowPositioning";
public static final String PopUpButtonInterfaceStyleDefault = "NSPopUpButtonInterfaceStyle";
public static final String TableViewInterfaceStyleDefault = "NSTableViewInterfaceStyle";
public static final String BrowserInterfaceStyleDefault = "NSBrowserInterfaceStyle";
public static final String ControlInterfaceStyleDefault = "NSControlInterfaceStyle";
public static final String MenuInterfaceStyleDefault = "NSMenuInterfaceStyle";
public static final String WindowInterfaceStyleDefault = "NSWindowInterfaceStyle";
public static final String MiniWindowStyleDefault = "NSMiniWindowStyle";

public static final int NoInterfaceStyle = 0;
static final int NextStepInterfaceStyle = 1;
public static final int Windows95InterfaceStyle = 2;
public static final int MacintoshInterfaceStyle = 3;
    @}

class NSLayoutManager = com.apple.cocoa.application.NSLayoutManager
    implements NSCoding
    -addTemporaryAttributes:forCharacterRange:
    -addTextContainer:
    -backgroundLayoutEnabled
    -boundingRectForGlyphRange:inTextContainer:
    -characterIndexForGlyphAtIndex:
    -characterRangeForGlyphRange:actualGlyphRange:
    -defaultAttachmentScaling
    -defaultLineHeightForFont:
    -delegate
    -deleteGlyphsInRange:
    -drawBackgroundForGlyphRange:atPoint:
    -drawGlyphsForGlyphRange:atPoint:
    -drawsOutsideLineFragmentForGlyphAtIndex:
    -drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
    -drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
    -extraLineFragmentRect
    -extraLineFragmentTextContainer
    -extraLineFragmentUsedRect
    -firstTextView
    -firstUnlaidCharacterIndex
    -firstUnlaidGlyphIndex
    -fractionOfDistanceThroughGlyphForPoint:inTextContainer:
    -glyphAtIndex:
    -glyphIndexForPoint:inTextContainer:
    -glyphRangeForBoundingRect:inTextContainer:
    -glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:
    -glyphRangeForCharacterRange:actualCharacterRange:
    -glyphRangeForTextContainer:
    -hyphenationFactor
    constructor -init
    -insertGlyph:atGlyphIndex:characterIndex:
    -insertTextContainer:atIndex:
    -intAttribute:forGlyphAtIndex:
    -invalidateDisplayForCharacterRange:
    -invalidateDisplayForGlyphRange:
    -invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:
    -invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:
    -isValidGlyphIndex:
    -layoutManagerOwnsFirstResponderInWindow:
    -lineFragmentRectForGlyphAtIndex:effectiveRange:
    -lineFragmentUsedRectForGlyphAtIndex:effectiveRange:
    -locationForGlyphAtIndex:
    -notShownAttributeForGlyphAtIndex:
    -numberOfGlyphs
    -rangeOfNominallySpacedGlyphsContainingIndex:
    -removeTemporaryAttribute:forCharacterRange:
    -removeTextContainerAtIndex:
    -replaceGlyphAtIndex:withGlyph:
    -replaceTextStorage:
    -rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:
    -rulerMarkersForTextView:paragraphStyle:ruler:
    -setBackgroundLayoutEnabled:
    -setCharacterIndex:forGlyphAtIndex:
    -setDefaultAttachmentScaling:
    -setDelegate:
    -setDrawsOutsideLineFragment:forGlyphAtIndex:
    -setExtraLineFragmentRect:usedRect:textContainer:
    -setHyphenationFactor:
    -setIntAttribute:value:forGlyphAtIndex:
    -setLineFragmentRect:forGlyphRange:usedRect:
    -setLocation:forStartOfGlyphRange:
    -setNotShownAttribute:forGlyphAtIndex:
    -setShowsControlCharacters:
    -setShowsInvisibleCharacters:
    -setTemporaryAttributes:forCharacterRange:
    -setTextContainer:forGlyphRange:
    -setTextStorage:
    -setTypesetterBehavior:
    -setUsesScreenFonts:
    -showAttachmentCell:inRect:characterIndex:
    -showsControlCharacters
    -showsInvisibleCharacters
    -strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
    -substituteFontForFont:
    -temporaryAttributesAtCharacterIndex:effectiveRange:
    -textContainerChangedGeometry:
    -textContainerChangedTextView:
    -textContainerForGlyphAtIndex:effectiveRange:
    -textContainers
    -textStorage
    -textStorage:edited:range:changeInLength:invalidatedRange:
    -textViewForBeginningOfSelection
    -typesetterBehavior
    -underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
    -usedRectForTextContainer:
    -usesScreenFonts

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSLayoutManager(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }


public static final int GlyphAttributeSoft = 0;
public static final int GlyphAttributeElastic = 1;
public static final int GlyphAttributeBidiLevel = 2;
public static final int GlyphAttributeInscribe = 5;

public static final int GlyphInscribeBase = 0;
public static final int GlyphInscribeBelow = 1;
public static final int GlyphInscribeAbove = 2;
public static final int GlyphInscribeOverstrike = 3;
public static final int GlyphInscribeOverBelow = 4;

public static final int TypesetterLatestBehavior = -1;
public static final int TypesetterOriginalBehavior = 0;
public static final int TypesetterBehavior_10_2_WithCompatibility = 1;
public static final int TypesetterBehavior_10_2 = 2;
public static final int TypesetterBehavior_10_3 = 3;

public native com.apple.cocoa.foundation.NSRect[] rectArrayForCharacterRange(com.apple.cocoa.foundation.NSRange charRange, com.apple.cocoa.foundation.NSRange selCharRange, NSTextContainer container);
public native com.apple.cocoa.foundation.NSRect[] rectArrayForGlyphRange(com.apple.cocoa.foundation.NSRange glyphRange, com.apple.cocoa.foundation.NSRange selGlyphRange, NSTextContainer container);
public native int[] glyphsInRange(com.apple.cocoa.foundation.NSRange glyphRange);
    @}

class NSMatrix = com.apple.cocoa.application.NSMatrix
    -acceptsFirstMouse:
    -addColumn
    -addColumnWithCells:
    -addRow
    -addRowWithCells:
    -allowsEmptySelection
    -autosizesCells
    -backgroundColor
    -cellAtRow:column:
    -cellBackgroundColor
    -cellClass
    -cellFrameAtRow:column:
    -cells
    -cellSize
    -cellWithTag:
    -delegate
    -deselectAllCells
    -deselectSelectedCell
    -doubleAction
    -drawCellAtRow:column:
    -drawsBackground
    -drawsCellBackground
    -getColumnForPoint:
    -getColumnOfCell:
    -getRowForPoint:
    -getRowOfCell:
    -highlightCell:atRow:column:
    constructor -init
    constructor -initWithFrame:
    constructor -initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:
    constructor -initWithFrame:mode:prototype:numberOfRows:numberOfColumns:
    -insertColumn:
    -insertColumn:withCells:
    -insertRow:
    -insertRow:withCells:
    -intercellSpacing
    -isAutoscroll
    -isSelectionByRect
    -keyCell
    -makeCellAtRow:column:
    -mode
    -mouseDown:
    -mouseDownFlags
    -numberOfColumns
    -numberOfRows
    -performKeyEquivalent:
    -prototype
    -putCell:atRow:column:
    -removeColumn:
    -removeRow:
    -renewRows:columns:
    -resetCursorRects
    -scrollCellToVisibleAtRow:column:
    -selectAll:
    -selectCellAtRow:column:
    -selectCellWithTag:
    -selectedCell
    -selectedCells
    -selectedColumn
    -selectedRow
    -selectText:
    -selectTextAtRow:column:
    -sendAction
    -sendAction:to:forAllCells:
    -sendDoubleAction
    -setAllowsEmptySelection:
    -setAutoscroll:
    -setAutosizesCells:
    -setBackgroundColor:
    -setCellBackgroundColor:
    -setCellClass:
    -setCellSize:
    -setDelegate:
    -setDoubleAction:
    -setDrawsBackground:
    -setDrawsCellBackground:
    -setIntercellSpacing:
    -setKeyCell:
    -setMode:
    -setPrototype:
    -setScrollable:
    -setSelectionByRect:
    -setSelectionFrom:to:anchor:highlight:
    -setState:atRow:column:
    -setTabKeyTraversesCells:
    -setToolTip:forCell:
    -setValidateSize:
    -sizeToCells
    -sortUsingSelector:
    -tabKeyTraversesCells
    -textDidBeginEditing:
    -textDidChange:
    -textDidEndEditing:
    -textShouldBeginEditing:
    -textShouldEndEditing:
    -toolTipForCell:

    @{
	protected NSMatrix(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int RadioMode = 0;
public static final int HighlightMode = 1;
public static final int ListMode = 2;
public static final int TrackMode = 3;
    @}

class NSMenu = com.apple.cocoa.application.NSMenu
    implements NSCoding
    -addItem:
    -addItemWithTitle:action:keyEquivalent:
    -attachedMenu
    -autoenablesItems
    -contextMenuRepresentation
    -delegate
    -helpRequested:
    -indexOfItem:
    -indexOfItemWithRepresentedObject:
    -indexOfItemWithSubmenu:
    -indexOfItemWithTag:
    -indexOfItemWithTarget:andAction:
    -indexOfItemWithTitle:
    constructor -init
    constructor -initWithTitle:
    -insertItem:atIndex:
    -insertItemWithTitle:action:keyEquivalent:atIndex:
    -isAttached
    -isTornOff
    -itemArray
    -itemAtIndex:
    -itemChanged:
    -itemWithTag:
    -itemWithTitle:
    -locationForSubmenu:
    +menuBarVisible
    -menuChangedMessagesEnabled
    -menuRepresentation
    -numberOfItems
    -performActionForItemAtIndex:
    -performKeyEquivalent:
    +popUpContextMenu:withEvent:forView:
    +popUpContextMenu:withEvent:forView:withFont:
    -removeItem:
    -removeItemAtIndex:
    -setAutoenablesItems:
    -setContextMenuRepresentation:
    -setDelegate:
    +setMenuBarVisible:
    -setMenuChangedMessagesEnabled:
    -setMenuRepresentation:
    -setSubmenu:forItem:
    -setSupermenu:
    -setTearOffMenuRepresentation:
    -setTitle:
    -sizeToFit
    -submenuAction:
    -supermenu
    -tearOffMenuRepresentation
    -title
    -update

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSMenu(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String MenuWillSendActionNotification = "NSMenuWillSendActionNotification";
public static final String MenuDidSendActionNotification = "NSMenuDidSendActionNotification";
public static final String MenuDidAddItemNotification = "NSMenuDidAddItemNotification";
public static final String MenuDidRemoveItemNotification = "NSMenuDidRemoveItemNotification";
public static final String MenuDidChangeItemNotification = "NSMenuDidChangeItemNotification";
public static final String MenuDidEndTrackingNotification = "NSMenuDidEndTrackingNotification";
    @}

class NSMenuItem = com.apple.cocoa.application.NSMenuItem
    implements NSMenuItem
    constructor -init

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSMenuItem(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public NSMenuItem separatorItem() {
    return (NSMenuItem)this.protocolSeparatorItem();
}
    @}

class NSMenuItemCell = com.apple.cocoa.application.NSMenuItemCell
    -calcSize
    -drawBorderAndBackgroundWithFrame:inView:
    -drawImageWithFrame:inView:
    -drawKeyEquivalentWithFrame:inView:
    -drawSeparatorItemWithFrame:inView:
    -drawStateImageWithFrame:inView:
    -drawTitleWithFrame:inView:
    -imageRectForBounds:
    -imageWidth
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    -isHighlighted
    -keyEquivalentRectForBounds:
    -keyEquivalentWidth
    -menuItem
    -menuView
    -needsDisplay
    -needsSizing
    -setHighlighted:
    -setMenuItem:
    -setMenuView:
    -setNeedsDisplay:
    -setNeedsSizing:
    -stateImageRectForBounds:
    -stateImageWidth
    -titleRectForBounds:
    -titleWidth

class NSMenuView = com.apple.cocoa.application.NSMenuView
    -attachedMenu
    -attachedMenuView
    -attachSubmenuForItemAtIndex:
    -detachSubmenu
    -font
    -highlightedItemIndex
    -horizontalEdgePadding
    -imageAndTitleOffset
    -imageAndTitleWidth
    -indexOfItemAtPoint:
    constructor -init
    private -initAsTearOff
    private -initWithFrame:
    -innerRect
    -isAttached
    -isHorizontal
    -isTornOff
    -itemAdded:
    -itemChanged:
    -itemRemoved:
    -keyEquivalentOffset
    -keyEquivalentWidth
    -locationForSubmenu:
    -menu
    +menuBarHeight
    -menuItemCellForItemAtIndex:
    -needsSizing
    -performActionWithHighlightingForItemAtIndex:
    -rectOfItemAtIndex:
    -setFont:
    -setHighlightedItemIndex:
    -setHorizontal:
    -setHorizontalEdgePadding:
    -setMenu:
    -setMenuItemCell:forItemAtIndex:
    -setNeedsDisplayForItemAtIndex:
    -setNeedsSizing:
    -setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:
    -sizeToFit
    -stateImageOffset
    -stateImageWidth
    -trackWithEvent:
    -update

    @{
public NSMenuView(boolean isTearOff) {
    super(false, 0);
    if (isTearOff) {
	this.initAsTearOff();
    } else {
	this.initWithFrame(new com.apple.cocoa.foundation.NSRect(0.0f, 0.0f, 10.0f, 10.0f));
    }
}
    @}

class NSMovie = com.apple.cocoa.application.NSMovie
    implements NSCoding
    +canInitWithPasteboard:
    +movieUnfilteredFileTypes
    +movieUnfilteredPasteboardTypes
    constructor -initWithPasteboard:
    constructor -initWithURL:byReference:
    -URL

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSMovie(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSMovieView = com.apple.cocoa.application.NSMovieView
    -clear:
    -copy:
    -cut:
    -delete:
    -gotoBeginning:
    -gotoEnd:
    -gotoPosterFrame:
    constructor -initWithFrame:
    -isControllerVisible
    -isEditable
    -isMuted
    -isPlaying
    -loopMode
    -movie
    -movieRect
    -paste:
    -playsEveryFrame
    -playsSelectionOnly
    -rate
    -resizeWithMagnification:
    -selectAll:
    -setEditable:
    -setLoopMode:
    -setMovie:
    -setMuted:
    -setPlaysEveryFrame:
    -setPlaysSelectionOnly:
    -setRate:
    -setVolume:
    -showController:adjustingSize:
    -sizeForMagnification:
    -start:
    -stepBack:
    -stepForward:
    -stop:
    -volume

    @{
	protected NSMovieView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int NormalPlayback = 0;
public static final int LoopingPlayback = 1;
public static final int LoopingBackAndForthPlayback = 2;
    @}

class NSMutableParagraphStyle = com.apple.cocoa.application.NSMutableParagraphStyle
    -addTabStop:
    constructor -init
    -removeTabStop:
    -setAlignment:
    -setDefaultTabInterval:
    -setFirstLineHeadIndent:
    -setHeadIndent:
    -setLineBreakMode:
    -setLineHeightMultiple:
    -setLineSpacing:
    -setMaximumLineHeight:
    -setMinimumLineHeight:
    -setParagraphSpacing:
    -setParagraphSpacingBefore:
    -setParagraphStyle:
    -setTabStops:
    -setTailIndent:
    -setBaseWritingDirection:

    @{
	protected NSMutableParagraphStyle(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSNib = com.apple.cocoa.application.NSNib
    implements NSCoding
    constructor -initWithContentsOfURL:
    constructor -initWithNibNamed:bundle:
    -instantiateNibWithExternalNameTable:
    -instantiateNibWithOwner::

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSNib(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final String NibOwner = "NSOwner";
public static final String TopLevelObjects = "NSTopLevelObjects";
    @}

class NSObjectController = com.apple.cocoa.application.NSObjectController
    -add:
    -addObject:
    -automaticallyPreparesContent
    -canAdd 
    -canRemove
    -content
    constructor -initWithContent:
    -isEditable
    -newObject
    -objectClass
    -prepareContent 
    -removeObject:
    -remove:
    -selectedObjects
    -selection
    -setAutomaticallyPreparesContent:
    -setContent:
    -setEditable:
    -setObjectClass:
    -validateMenuItem:

class NSOpenPanel = com.apple.cocoa.application.NSOpenPanel
    -allowsMultipleSelection
    -beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextObject:
    -beginForDirectory:file:types:modelessDelegate:didEndSelector:contextObject:
    -canChooseDirectories
    -canChooseFiles
    -filenames
    constructor -init
    constructor -initWithContentRect:styleMask:backing:defer:
    constructor -initWithContentRect:styleMask:backing:defer:screen:
    +openPanel
    -resolvesAliases
    -runModalForDirectory:file:types:
    -runModalForDirectory:file:types:relativeToWindow:
    -runModalForTypes:
    -setAllowsMultipleSelection:
    -setCanChooseDirectories:
    -setCanChooseFiles:
    -setResolvesAliases:
    -URLs

class NSOutlineView = com.apple.cocoa.application.NSOutlineView
    -autoresizesOutlineColumn
    -autosaveExpandedItems
    -collapseItem:
    -collapseItem:collapseChildren:
    -expandItem:
    -expandItem:expandChildren:
    -indentationMarkerFollowsCell
    -indentationPerLevel
    constructor -init
    constructor -initWithFrame:
    -isExpandable:
    -isItemExpanded:
    -itemAtRow:
    -levelForItem:
    -levelForRow:
    -outlineTableColumn
    -reloadItem:
    -reloadItem:reloadChildren:
    -rowForItem:
    -setAutoresizesOutlineColumn:
    -setAutosaveExpandedItems:
    -setDropItem:dropChildIndex:
    -setIndentationMarkerFollowsCell:
    -setIndentationPerLevel:
    -setOutlineTableColumn:
    -shouldCollapseAutoExpandedItemsForDeposited:

    @{
	protected NSOutlineView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Value used to signify a drop on a particular item versus on one of it's children.
 */

/* Deprecated: The following declaration is kept for compatibility, but it is being replaced with a new constant that drops the NSOutlineView prefix, as it is redundant and inconsistent with existing API. */
public final static int NSOutlineViewDropOnItemIndex = -1;

public final static int DropOnItemIndex = -1;

/*
 * Notifications.
 *
 */
 
public static final String OutlineViewSelectionDidChangeNotification = "NSOutlineViewSelectionDidChangeNotification";
public static final String OutlineViewColumnDidMoveNotification = "NSOutlineViewColumnDidMoveNotification";
public static final String OutlineViewColumnDidResizeNotification = "NSOutlineViewColumnDidResizeNotification";
public static final String OutlineViewSelectionIsChangingNotification = "NSOutlineViewSelectionIsChangingNotification";
public static final String OutlineViewItemDidExpandNotification = "NSOutlineViewItemDidExpandNotification";
public static final String OutlineViewItemDidCollapseNotification = "NSOutlineViewItemDidCollapseNotification";
    @}

class NSPDFImageRep = com.apple.cocoa.application.NSPDFImageRep
    -bounds
    -currentPage
    +imageRepWithData:
    constructor -init
    constructor -initWithData:
    -PDFRepresentation
    -pageCount
    -setCurrentPage:

    @{
	protected NSPDFImageRep(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSPICTImageRep = com.apple.cocoa.application.NSPICTImageRep
    -boundingBox
    +imageRepWithData:
    constructor -init
    constructor -initWithData:
    -PICTRepresentation

    @{
	protected NSPICTImageRep(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSPageLayout = com.apple.cocoa.application.NSPageLayout
    -accessoryView
    -beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextObject:
    constructor -init
    +pageLayout
    -pickedButton:
    -pickedOrientation:
    -pickedPaperSize:
    -pickedUnits:
    -printInfo
    -readPrintInfo
    -runModal
    -runModalWithPrintInfo:
    -setAccessoryView:
    -writePrintInfo

    @{
public static final int PLImageButton = 5;
public static final int PLTitleField = 51;
public static final int PLPaperNameButton = 52;
public static final int PLUnitsButton = 54;
public static final int PLWidthForm = 55;
public static final int PLHeightForm = 56;
public static final int PLOrientationMatrix = 57;
public static final int PLCancelButton = NSPanel.CancelButton;
public static final int PLOKButton = NSPanel.OKButton;
    @}

class NSPanel = com.apple.cocoa.application.NSPanel
    -becomesKeyOnlyIfNeeded
    constructor -init
    constructor -initWithContentRect:styleMask:backing:defer:
    constructor -initWithContentRect:styleMask:backing:defer:screen:
    -isFloatingPanel
    -setBecomesKeyOnlyIfNeeded:
    -setFloatingPanel:
    -setWorksWhenModal:
    -worksWhenModal

    @{
public static final int OKButton = 1;
public static final int CancelButton = 0;

/* 
 * Additional window mask for panels
 *
 */
public static final int UtilityWindowMask = 1 << 4;
public static final int DocModalWindowMask = 1 << 6;
public static final int NonactivatingPanelMask = 1 << 7;
    @}

class NSParagraphStyle = com.apple.cocoa.application.NSParagraphStyle
    implements NSCoding
    -alignment
    +defaultParagraphStyle
    -defaultTabInterval
    -firstLineHeadIndent
    -headIndent
    constructor -init
    -lineBreakMode
    -lineHeightMultiple
    -lineSpacing
    -maximumLineHeight
    -minimumLineHeight
    -paragraphSpacing
    -paragraphSpacingBefore
    -tabStops
    -tailIndent
    +defaultWritingDirectionForLanguage:
    -baseWritingDirection

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSParagraphStyle(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int LeftTabStopType = 0;
public static final int RightTabStopType = 1;
public static final int CenterTabStopType = 2;
public static final int DecimalTabStopType = 3;

public static final int LineBreakByWordWrapping = 0;
public static final int LineBreakByCharWrapping = 1;
public static final int LineBreakByClipping = 2;
public static final int LineBreakByTruncatingHead = 3;
public static final int LineBreakByTruncatingTail = 4;
public static final int LineBreakByTruncatingMiddle = 5;

public static final int WritingDirectionLeftToRight = 0;
public static final int WritingDirectionRightToLeft = 1;

    @}

class NSPasteboard = com.apple.cocoa.application.NSPasteboard
    -addTypes:owner:
    -availableTypeFromArray:
    -changeCount
    -dataForType:
    -declareTypes:owner:
    +generalPasteboard
    constructor -init
    -name
    +pasteboardByFilteringData:ofType:
    +pasteboardByFilteringFile:
    +pasteboardByFilteringTypesInPasteboard:
    +pasteboardWithName:
    +pasteboardWithUniqueName
    -propertyListForType:
    -readFileContentsType:toFile:
    -readFileWrapper
    -releaseGlobally
    -setData:forType:
    -setPropertyList:forType:
    -setString:forType:
    -stringForType:
    -types
    +typesFilterableTo:
    -writeFileContents:
    -writeFileWrapper:

    @{
public static final String ColorPboardType = "NSColor pasteboard type";
public static final String FileContentsPboardType = "NXFileContentsPboardType";
public static final String FilenamesPboardType = "NSFilenamesPboardType";
public static final String FontPboardType = "NeXT font pasteboard type";
public static final String PostScriptPboardType = "NeXT Encapsulated PostScript v1.2 pasteboard type";
public static final String RulerPboardType = "NeXT ruler pasteboard type";
public static final String RTFPboardType = "NeXT Rich Text Format v1.0 pasteboard type";
public static final String RTFDPboardType = "NeXT RTFD pasteboard type";
public static final String PICTPboardType = "Apple PICT pasteboard type";
public static final String StringPboardType = "NSStringPboardType";
public static final String TabularTextPboardType = "NeXT tabular text pasteboard type";
public static final String TIFFPboardType = "NeXT TIFF v4.0 pasteboard type";
public static final String URLPboardType = "Apple URL pasteboard type";
public static final String PDFPboardType = "Apple PDF pasteboard type";
public static final String HTMLPboardType = "Apple HTML pasteboard type";
public static final String VCardPboardType = "Apple VCard pasteboard type";
public static final String FilesPromisePboardType = "Apple files promise pasteboard type";

public static final String GeneralPboard = "Apple CFPasteboard general";
public static final String FontPboard = "Apple CFPasteboard font";
public static final String RulerPboard = "Apple CFPasteboard ruler";
public static final String FindPboard = "Apple CFPasteboard find";
public static final String DragPboard = "Apple CFPasteboard drag";
    @}

class NSPopUpButton = com.apple.cocoa.application.NSPopUpButton
    -addItemsWithTitles:
    -addItemWithTitle:
    -autoenablesItems
    -indexOfItem:
    -indexOfItemWithRepresentedObject:
    -indexOfItemWithTag:
    -indexOfItemWithTarget:andAction:
    -indexOfItemWithTitle:
    -indexOfSelectedItem
    constructor -init
    constructor -initWithFrame:
    constructor -initWithFrame:pullsDown:
    -insertItemWithTitle:atIndex:
    -itemArray
    -itemAtIndex:
    -itemTitleAtIndex:
    -itemTitles
    -itemWithTitle:
    -lastItem
    -menu
    -numberOfItems
    -preferredEdge
    -pullsDown
    -removeAllItems
    -removeItemAtIndex:
    -removeItemWithTitle:
    -selectedItem
    -selectItem:
    -selectItemAtIndex:
    -selectItemWithTitle:
    -setAutoenablesItems:
    -setMenu:
    -setPreferredEdge:
    -setPullsDown:
    -setTitle:
    -synchronizeTitleAndSelectedItem
    -titleOfSelectedItem

    @{
	protected NSPopUpButton(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final String PopUpButtonWillPopUpNotification = "NSPopUpButtonWillPopUpNotification";
    @}

class NSPopUpButtonCell = com.apple.cocoa.application.NSPopUpButtonCell
    -addItemsWithTitles:
    -addItemWithTitle:
    -altersStateOfSelectedItem
    -arrowPosition
    -attachPopUpWithFrame:inView:
    -autoenablesItems
    -dismissPopUp
    -indexOfItem:
    -indexOfItemWithRepresentedObject:
    -indexOfItemWithTag:
    -indexOfItemWithTarget:andAction:
    -indexOfItemWithTitle:
    -indexOfSelectedItem
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    constructor -initTextCell:pullsDown:
    -insertItemWithTitle:atIndex:
    -itemArray
    -itemAtIndex:
    -itemTitleAtIndex:
    -itemTitles
    -itemWithTitle:
    -lastItem
    -menu
    -numberOfItems
    -performClickWithFrame:inView:
    -preferredEdge
    -pullsDown
    -removeAllItems
    -removeItemAtIndex:
    -removeItemWithTitle:
    -selectedItem
    -selectItem:
    -selectItemAtIndex:
    -selectItemWithTitle:
    -setAltersStateOfSelectedItem:
    -setArrowPosition:
    -setAutoenablesItems:
    -setMenu:
    -setPreferredEdge:
    -setPullsDown:
    -setTitle:
    -setUsesItemFromMenu:
    -synchronizeTitleAndSelectedItem
    -titleOfSelectedItem
    -usesItemFromMenu

    @{
	protected NSPopUpButtonCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final String PopUpButtonCellWillPopUpNotification = "NSPopUpButtonCellWillPopUpNotification";

public static final int PopUpNoArrow = 0;
public static final int PopUpArrowAtCenter = 1;
public static final int PopUpArrowAtBottom = 2;
    @}

class NSPrintInfo = com.apple.cocoa.application.NSPrintInfo
    implements NSCoding
    -bottomMargin
    +defaultPrinter
    -dictionary
    -horizontalPagination
    -imageablePageBounds
    constructor -init
    constructor -initWithDictionary:
    -isHorizontallyCentered
    -isVerticallyCentered
    -jobDisposition
    -leftMargin
    -localizedPaperName
    -orientation
    -paperName
    -paperSize
    -printer
    -rightMargin
    -setBottomMargin:
    +setDefaultPrinter:
    -setHorizontallyCentered:
    -setHorizontalPagination:
    -setJobDisposition:
    -setLeftMargin:
    -setOrientation:
    -setPaperName:
    -setPaperSize:
    -setPrinter:
    -setRightMargin:
    +setSharedPrintInfo:
    -setTopMargin:
    -setUpPrintOperationDefaultValues
    -setVerticallyCentered:
    -setVerticalPagination:
    +sharedPrintInfo
    +sizeForPaperName:
    -topMargin
    -verticalPagination

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSPrintInfo(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Printing orientations.
 *
 */

public static final int PortraitOrientation = 0;
public static final int LandscapeOrientation = 1;

/*
 * Printing pagination modes.
 *
 */

public static final int AutoPagination = 0;
public static final int FitPagination = 1;
public static final int ClipPagination = 2;

/* Print info attributes. */

public static final String PrintSpoolJob = "NSPrintSpoolJob";
public static final String PrintPreviewJob = "NSPrintPreviewJob";
public static final String PrintSaveJob = "NSPrintSaveJob";
public static final String PrintCancelJob = "NSPrintCancelJob";

public static final String PrintPaperName = "NSPaperName";
public static final String PrintPaperSize = "NSPaperSize";
public static final String PrintOrientation = "NSOrientation";
public static final String PrintScalingFactor = "NSScalingFactor";

public static final String PrintLeftMargin = "NSLeftMargin";
public static final String PrintRightMargin = "NSRightMargin";
public static final String PrintTopMargin = "NSTopMargin";
public static final String PrintBottomMargin = "NSBottomMargin";
public static final String PrintHorizontallyCentered = "NSHorizontallyCentered";
public static final String PrintVerticallyCentered = "NSVerticallyCentered";
public static final String PrintHorizontalPagination = "NSHorizonalPagination";
public static final String PrintVerticalPagination = "NSVerticalPagination";

public static final String PrintPrinter = "NSPrinter";
public static final String PrintCopies = "NSCopies";
public static final String PrintAllPages = "NSPrintAllPages";
public static final String PrintFirstPage = "NSFirstPage";
public static final String PrintLastPage = "NSLastPage";
public static final String PrintMustCollate = "NSMustCollate";
public static final String PrintReversePageOrder = "NSReversePageOrder";
public static final String PrintJobDisposition = "NSJobDisposition";
public static final String PrintSavePath = "NSSavePath";

    @}

class NSPrintOperation = com.apple.cocoa.application.NSPrintOperation
    -accessoryView
    -canSpawnSeparateThread
    -cleanUpOperation
    -context
    -createContext
    +currentOperation
    -currentPage
    -deliverResult
    -destroyContext
    +EPSOperationWithView:insideRect:toData:
    +EPSOperationWithView:insideRect:toData:printInfo:
    +EPSOperationWithView:insideRect:toPath:printInfo:
    +PDFOperationWithView:insideRect:toData:
    +PDFOperationWithView:insideRect:toData:printInfo:
    +PDFOperationWithView:insideRect:toPath:printInfo:
    constructor -init
    -isCopyingOperation
    -isEPSOperation
    -jobStyleHint
    -pageOrder
    -printInfo
    +printOperationWithView:
    +printOperationWithView:printInfo:
    -printPanel
    -runOperation
    -runOperationModalForWindow:delegate:didRunSelector:contextObject:
    -setAccessoryView:
    -setCanSpawnSeparateThread:
    +setCurrentOperation:
    -setJobStyleHint:
    -setPageOrder:
    -setPrintInfo:
    -setPrintPanel:
    -setShowPanels:
    -showPanels
    -view

    @{
static public final int DescendingPageOrder = -1;
static public final int SpecialPageOrder = 0;
static public final int AscendingPageOrder = 1;
static public final int UnknownPageOrder = 2;
    @}

class NSPrintPanel = com.apple.cocoa.application.NSPrintPanel
    -accessoryView
    -beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextObject:
    -finalWritePrintInfo
    constructor -init
    -jobStyleHint
    -pickedAllPages:
    -pickedButton:
    -pickedLayoutList:
    +printPanel
    -runModal
    -setAccessoryView:
    -setJobStyleHint:
    -updateFromPrintInfo

    @{
public static final String PrintPhotoJobStyleHint = "Photo";
    @}

class NSPrinter = com.apple.cocoa.application.NSPrinter
    implements NSCoding
    -acceptsBinary
    -booleanForKey:inTable:
    -deviceDescription
    -domain
    -floatForKey:inTable:
    -host
    -imageRectForPaper:
    constructor -init
    -intForKey:inTable:
    -isColor
    -isFontAvailable:
    -isKey:inTable:
    -isOutputStackInReverseOrder
    -languageLevel
    -name
    -note
    -pageSizeForPaper:
    +printerNames
    +printerTypes
    +printerWithName:
    +printerWithName:domain:includeUnavailable:
    +printerWithType:
    -rectForKey:inTable:
    -sizeForKey:inTable:
    -statusForTable:
    -stringForKey:inTable:
    -stringListForKey:inTable:
    -type

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSPrinter(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int PrinterTableOK = 0;
public static final int PrinterTableNotFound = 1;
public static final int PrinterTableError = 2;
    @}

class NSProgressIndicator = com.apple.cocoa.application.NSProgressIndicator
    -animate:
    -animationDelay
    -controlSize
    -controlTint
    -doubleValue
    -incrementBy:
    constructor -init
    constructor -initWithFrame:
    -isBezeled
    -isDisplayedWhenStopped
    -isIndeterminate
    -maxValue
    -minValue
    -setAnimationDelay:
    -setBezeled:
    -setControlSize:
    -setControlTint:
    -setDisplayedWhenStopped:
    -setDoubleValue:
    -setIndeterminate:
    -setMaxValue:
    -setMinValue:
    -setUsesThreadedAnimation:
    -setStyle:
    -sizeToFit
    -style
    -startAnimation:
    -stopAnimation:
    -usesThreadedAnimation

    @{
	protected NSProgressIndicator(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int RegularControlSize = 0;
public static final int SmallControlSize   = 1;
public static final int MiniControlSize    = 2;

public static final int DefaultControlTint  = 0;
public static final int BlueControlTint     = 1;
public static final int GraphiteControlTint = 6;
public static final int ClearControlTint    = 7;

public static final int ProgressIndicatorBarStyle = 0;
public static final int ProgressIndicatorSpinningStyle = 1;
    @}

class NSResponder = com.apple.cocoa.application.NSResponder
    implements NSCoding
    -acceptsFirstResponder
    -becomeFirstResponder
    -flagsChanged:
    -flushBufferedKeyEvents
    -helpRequested:
    constructor -init
    -interfaceStyle
    -interpretKeyEvents:
    -keyDown:
    -keyUp:
    -menu
    -mouseDown:
    -mouseDragged:
    -mouseEntered:
    -mouseExited:
    -mouseMoved:
    -mouseUp:
    -nextResponder
    -noResponderFor:
    -otherMouseDown:
    -otherMouseDragged:
    -otherMouseUp:
    -performKeyEquivalent:
    -performMnemonic:
    -resignFirstResponder
    -rightMouseDown:
    -rightMouseDragged:
    -rightMouseUp:
    -scrollWheel:
    -setInterfaceStyle:
    -setMenu:
    -setNextResponder:
    -shouldBeTreatedAsInkEvent:
    -showContextHelp:
    -tryToPerform:with:
    -undoManager
    -validRequestorForSendType:returnType:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSResponder(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSRulerMarker = com.apple.cocoa.application.NSRulerMarker
    implements NSCoding
    -drawRect:
    -image
    -imageOrigin
    -imageRectInRuler
    constructor -init
    constructor -initWithRulerView:markerLocation:image:imageOrigin:
    -isDragging
    -isMovable
    -isRemovable
    -markerLocation
    -representedObject
    -ruler
    -setImage:
    -setImageOrigin:
    -setMarkerLocation:
    -setMovable:
    -setRemovable:
    -setRepresentedObject:
    -thicknessRequiredInRuler
    -trackMouse:adding:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSRulerMarker(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSRulerView = com.apple.cocoa.application.NSRulerView
    -accessoryView
    -addMarker:
    -baselineLocation
    -clientView
    -drawHashMarksAndLabelsInRect:
    -drawMarkersInRect:
    constructor -init
    constructor -initWithFrame:
    constructor -initWithScrollView:orientation:
    -invalidateHashMarks
    -isFlipped
    -markers
    -measurementUnits
    -moveRulerlineFromLocation:toLocation:
    -orientation
    -originOffset
    +registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:
    -removeMarker:
    -requiredThickness
    -reservedThicknessForAccessoryView
    -reservedThicknessForMarkers
    -ruleThickness
    -scrollView
    -setAccessoryView:
    -setClientView:
    -setMarkers:
    -setMeasurementUnits:
    -setOrientation:
    -setOriginOffset:
    -setReservedThicknessForAccessoryView:
    -setReservedThicknessForMarkers:
    -setRuleThickness:
    -setScrollView:
    -trackMarker:withMouseEvent:

    @{
	protected NSRulerView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int HorizontalRuler = 0;
public static final int VerticalRuler = 1;
    @}

class NSSavePanel = com.apple.cocoa.application.NSSavePanel
    -accessoryView
    -beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:
    -beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextObject:
    -cancel:
    -directory
    -filename
    constructor -init
    constructor -initWithContentRect:styleMask:backing:defer:
    constructor -initWithContentRect:styleMask:backing:defer:screen:
    -isExpanded
    -isExtensionHidden
    -ok:
    -prompt
    -requiredFileType
    -runModal
    -runModalForDirectory:file:
    -runModalForDirectory:file:relativeToWindow:
    +savePanel
    -selectText:
    -setAccessoryView:
    -setCanSelectHiddenExtension:
    -setDelegate:
    -setDirectory:
    -setExtensionHidden:
    -setPrompt:
    -setRequiredFileType:
    -setTitle:
    -setTreatsFilePackagesAsDirectories:
    -title
    -treatsFilePackagesAsDirectories
    -URL
    -validateVisibleColumns
    
    -allowedFileTypes
    -setAllowedFileTypes:
    -allowsOtherFileTypes
    -setAllowsOtherFileTypes:
    -delegate
    -canCreateDirectories
    -setCanCreateDirectories:
    -canSelectHiddenExtension
    -nameFieldLabel
    -setNameFieldLabel:
    -message
    -setMessage:

class NSScreen = com.apple.cocoa.application.NSScreen
    +deepestScreen
    -depth
    -deviceDescription
    -frame
    constructor -init
    +mainScreen
    +screens
    -visibleFrame

    @{
/* methods that require native stubs for type conversion */
public native int[] supportedWindowDepths();
    @}

class NSScrollView = com.apple.cocoa.application.NSScrollView
    -autohidesScrollers
    -backgroundColor
    -borderType
    -contentSize
    +contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:
    -contentView
    -documentCursor
    -documentView
    -documentVisibleRect
    -drawsBackground
    +frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:
    -hasHorizontalRuler
    -hasHorizontalScroller
    -hasVerticalRuler
    -hasVerticalScroller
    -horizontalLineScroll
    -horizontalPageScroll
    -horizontalRulerView
    -horizontalScroller
    constructor -init
    constructor -initWithFrame:
    -lineScroll
    -pageScroll
    -reflectScrolledClipView:
    -rulersVisible
    +rulerViewClass
    -scrollsDynamically
    -scrollWheel:
    -setAutohidesScrollers:
    -setBackgroundColor:
    -setBorderType:
    -setContentView:
    -setDocumentCursor:
    -setDocumentView:
    -setDrawsBackground:
    -setHasHorizontalRuler:
    -setHasHorizontalScroller:
    -setHasVerticalRuler:
    -setHasVerticalScroller:
    -setHorizontalLineScroll:
    -setHorizontalPageScroll:
    -setHorizontalRulerView:
    -setHorizontalScroller:
    -setLineScroll:
    -setPageScroll:
    -setRulersVisible:
    +setRulerViewClass:
    -setScrollsDynamically:
    -setVerticalLineScroll:
    -setVerticalPageScroll:
    -setVerticalRulerView:
    -setVerticalScroller:
    -tile
    -verticalLineScroll
    -verticalPageScroll
    -verticalRulerView
    -verticalScroller

    @{
	protected NSScrollView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSScroller = com.apple.cocoa.application.NSScroller
    -arrowsPosition
    -checkSpaceForParts
    -controlSize
    -controlTint
    -drawArrow:highlight:
    -drawKnob
    -drawParts
    -highlight:
    -hitPart
    constructor -init
    constructor -initWithFrame:
    -knobProportion
    -rectForPart:
    +scrollerWidth
    +scrollerWidthForControlSize:
    -setArrowsPosition:
    -setControlSize:
    -setControlTint:
    -setFloatValue:knobProportion:
    -testPart:
    -trackKnob:
    -trackScrollButtons:
    -usableParts

    @{
	protected NSScroller(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final int ArrowsMaxEnd = 0;
public static final int ArrowsMinEnd = 1;
public static final int ArrowsDefaultSetting = 0;
public static final int ArrowsNone = 2;

public static final int IncrementArrow = 0;
public static final int DecrementArrow = 1;

/* Useable scroller parts */
public static final int NoParts = 0;
public static final int OnlyArrows = 1;
public static final int AllParts = 2;

public static final int NoPart = 0;
public static final int DecrementPage = 1;
public static final int Knob = 2;
public static final int IncrementPage = 3;
public static final int DecrementLine = 4;
public static final int IncrementLine = 5;
public static final int KnobSlot = 6;

public static final int RegularControlSize = 0;
public static final int SmallControlSize   = 1;
public static final int MiniControlSize    = 2;

public static final int DefaultControlTint  = 0;
public static final int BlueControlTint     = 1;
public static final int GraphiteControlTint = 6;
public static final int ClearControlTint    = 7;

    @}

class NSSearchField = com.apple.cocoa.application.NSSearchField
    -recentSearches
    -recentsAutosaveName
    -setRecentSearches:
    -setRecentsAutosaveName:

class NSSearchFieldCell = com.apple.cocoa.application.NSSearchFieldCell
    -cancelButtonCell
    -cancelButtonRectForBounds:
    -maximumRecents
    -recentSearches
    -recentsAutosaveName
    -resetCancelButtonCell
    -resetSearchButtonCell
    -searchButtonCell
    -searchButtonRectForBounds:
    -searchMenuTemplate
    -searchTextRectForBounds:
    -sendsWholeSearchString
    -setCancelButtonCell:
    -setMaximumRecents:
    -setRecentSearches:
    -setRecentsAutosaveName:
    -setSearchButtonCell:
    -setSearchMenuTemplate:
    -setSendsWholeSearchString:

    @{
/*
 * Search field cell menu template special tags.
 *
 */
public static final int SearchFieldRecentsTitleMenuItemTag   = 1000;
public static final int SearchFieldRecentsMenuItemTag        = 1001;
public static final int SearchFieldClearRecentsMenuItemTag   = 1002;
public static final int SearchFieldNoRecentsMenuItemTag      = 1003;
    @}

class NSSecureTextField = com.apple.cocoa.application.NSSecureTextField
    constructor -init
    constructor -initWithFrame:

    @{
	protected NSSecureTextField(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSSecureTextFieldCell = com.apple.cocoa.application.NSSecureTextFieldCell
    -echosBullets
    constructor -init
    constructor -initTextCell:
    -setEchosBullets:

    @{
	protected NSSecureTextFieldCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSSegmentedCell = com.apple.cocoa.application.NSSegmentedCell
    -drawSegment:inFrame:withView:
    -imageForSegment:
    -isEnabledForSegment:
    -isSelectedForSegment:
    -labelForSegment:
    -makeNextSegmentKey
    -makePreviousSegmentKey
    -menuForSegment:
    -segmentCount
    -selectedSegment
    -setEnabled:forSegment:
    -setImage:forSegment:
    -setLabel:forSegment:
    -setMenu:forSegment:
    -setSegmentCount:
    -setSelected:forSegment:
    -setSelectedSegment:
    -setTag:forSegment:
    -setToolTip:forSegment:
    -setTrackingMode:
    -setWidth:forSegment:
    -tagForSegment:
    -toolTipForSegment:
    -trackingMode
    -widthForSegment:

    @{
	protected NSSegmentedCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Segemented cell tracking modes
 *
 */
public final static int NSSegmentSwitchTrackingSelectOne = 0;
public final static int NSSegmentSwitchTrackingSelectAny = 1;
public final static int NSSegmentSwitchTrackingMomentary = 2;

    @}

class NSSegmentedControl = com.apple.cocoa.application.NSSegmentedControl
    -imageForSegment:
    -isEnabledForSegment:
    -isSelectedForSegment:
    -labelForSegment:
    -menuForSegment:
    -segmentCount
    -selectedSegment
    -setEnabled:forSegment:
    -setImage:forSegment:
    -setLabel:forSegment:
    -setMenu:forSegment:
    -setSegmentCount:
    -setSelected:forSegment:
    -setSelectedSegment:
    -setWidth:forSegment:
    -widthForSegment:

    @{
	protected NSSegmentedControl(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSShadow = com.apple.cocoa.application.NSShadow
    implements NSCoding
    constructor -init
    -set
    -setShadowBlurRadius:
    -setShadowColor:
    -setShadowOffset:
    -shadowBlurRadius
    -shadowColor
    -shadowOffset

class NSSlider = com.apple.cocoa.application.NSSlider
    -acceptsFirstMouse:
    -allowsTickMarkValuesOnly
    -altIncrementValue
    -closestTickMarkValueToValue:
    -image
    -indexOfTickMarkAtPoint:
    constructor -init
    constructor -initWithFrame:
    -isVertical
    -knobThickness
    -maxValue
    -minValue
    -numberOfTickMarks
    -rectOfTickMarkAtIndex:
    -setAllowsTickMarkValuesOnly:
    -setAltIncrementValue:
    -setImage:
    -setKnobThickness:
    -setMaxValue:
    -setMinValue:
    -setNumberOfTickMarks:
    -setTickMarkPosition:
    -setTitle:
    -setTitleCell:
    -setTitleColor:
    -setTitleFont:
    -tickMarkPosition
    -tickMarkValueAtIndex:
    -title
    -titleCell
    -titleColor
    -titleFont

    @{
	protected NSSlider(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSSliderCell = com.apple.cocoa.application.NSSliderCell
    -allowsTickMarkValuesOnly
    -altIncrementValue
    -closestTickMarkValueToValue:
    -drawBarInside:flipped:
    -drawKnob
    -drawKnob:
    -indexOfTickMarkAtPoint:
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    -isVertical
    -knobRectFlipped:
    -knobThickness
    -maxValue
    -minValue
    -numberOfTickMarks
    +prefersTrackingUntilMouseUp
    -rectOfTickMarkAtIndex:
    -setAllowsTickMarkValuesOnly:
    -setAltIncrementValue:
    -setKnobThickness:
    -setMaxValue:
    -setMinValue:
    -setNumberOfTickMarks:
    -setSliderType:
    -setTickMarkPosition:
    -setTitle:
    -setTitleCell:
    -setTitleColor:
    -setTitleFont:
    -sliderType
    -tickMarkPosition
    -tickMarkValueAtIndex:
    -title
    -titleCell
    -titleColor
    -titleFont
    -trackRect

    @{
	protected NSSliderCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/* 
 * Tick mark position 
 *
 */
public static final int TickMarkBelow = 0;
public static final int TickMarkAbove = 1;
public static final int TickMarkRight = 0;
public static final int TickMarkLeft  = 1;

/* 
 * Slider type 
 *
 */
public static final int LinearSlider   = 0;
public static final int CircularSlider = 1;

    @}

class NSSound = com.apple.cocoa.application.NSSound
    implements NSCoding
    +canInitWithPasteboard:
    -delegate
    constructor -initWithContentsOfURL:byReference:
    constructor -initWithContentsOfFile:byReference:
    constructor -initWithPasteboard:
    constructor -initWithData:
    -isPlaying
    -name
    -pause
    -resume
    -play
    -setDelegate:
    -setName:
    +soundNamed:
    +soundUnfilteredFileTypes
    +soundUnfilteredPasteboardTypes
    -stop
    -writeToPasteboard:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSSound(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSSpeechRecognizer = com.apple.cocoa.application.NSSpeechRecognizer
    -blocksOtherRecognizers
    -commands
    -delegate
    -displayedCommandsTitle
    constructor -init
    -listensInForegroundOnly
    -setBlocksOtherRecognizers:
    -setCommands:
    -setDelegate:
    -setDisplayedCommandsTitle:
    -setListensInForegroundOnly:
    -startListening
    -stopListening

class NSSpeechSynthesizer = com.apple.cocoa.application.NSSpeechSynthesizer
    +availableVoices
    +attributesForVoice:
    +defaultVoice
    -delegate
    constructor -initWithVoice:
    +isAnyApplicationSpeaking
    -isSpeaking
    -setUsesFeedbackWindow:
    -setVoice:
    -startSpeakingString:
    -startSpeakingString:toURL:
    -stopSpeaking
    -setDelegate:
    -voice
    -usesFeedbackWindow

    @{
public static final String VoiceName = "VoiceName";
public static final String VoiceIdentifier = "VoiceIdentifier";
public static final String VoiceAge = "VoiceAge";
public static final String VoiceGender = "VoiceGender";
public static final String VoiceDemoText = "VoiceDemoText";
public static final String VoiceLanguage = "VoiceLanguage";

public static final String VoiceGenderNeuter = "VoiceGenderNeuter";
public static final String VoiceGenderMale = "VoiceGenderMale";
public static final String VoiceGenderFemale = "VoiceGenderFemale";
    @}

class NSSpellChecker = com.apple.cocoa.application.NSSpellChecker
    -accessoryView
    -checkSpellingOfString:startingAt:
    -closeSpellDocumentWithTag:
    -completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:
    -countWordsInString:language:
    -guessesForWord:
    -ignoredWordsInSpellDocumentWithTag:
    -ignoreWord:inSpellDocumentWithTag:
    constructor -init
    -language
    -setAccessoryView:
    -setIgnoredWords:inSpellDocumentWithTag:
    -setLanguage:
    -setWordFieldStringValue:
    +sharedSpellChecker
    +sharedSpellCheckerExists
    -spellingPanel
    +uniqueSpellDocumentTag
    -updateSpellingPanelWithMisspelledWord:

class NSSplitView = com.apple.cocoa.application.NSSplitView
    -adjustSubviews
    -delegate
    -dividerThickness
    -drawDividerInRect:
    constructor -init
    constructor -initWithFrame:
    -isPaneSplitter
    -isSubviewCollapsed:
    -isVertical
    -setDelegate:
    -setIsPaneSplitter:
    -setVertical:

    @{
	protected NSSplitView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final String SplitViewDidResizeSubviewsNotification = "NSSplitViewDidResizeSubviewsNotification";
public static final String SplitViewWillResizeSubviewsNotification = "NSSplitViewWillResizeSubviewsNotification";
    @}

class NSStatusBar = com.apple.cocoa.application.NSStatusBar
    constructor -init
    -isVertical
    -removeStatusItem:
    -statusItemWithLength:
    +systemStatusBar
    -thickness

    @{
/*
 * Special lengths.
 */

public static final float VariableStatusItemLength = -1;
public static final float SquareStatusItemLength = -2;
    @}

class NSStatusItem = com.apple.cocoa.application.NSStatusItem
    -action
    -alternateImage
    -attributedTitle
    -drawStatusBarBackgroundInRect:withHighlight:
    -highlightMode
    -image
    constructor -init
    -isEnabled
    -length
    -menu
    -popUpStatusItemMenu:
    -sendActionOn:
    -setAction:
    -setAlternateImage:
    -setAttributedTitle:
    -setEnabled:
    -setHighlightMode:
    -setImage:
    -setLength:
    -setMenu:
    -setTarget:
    -setTitle:
    -setToolTip:
    -setView:
    -statusBar
    -target
    -title
    -toolTip
    -view

class NSStepper = com.apple.cocoa.application.NSStepper
    -autorepeat
    -increment
    -maxValue
    -minValue
    -setAutorepeat:
    -setIncrement:
    -setMaxValue:
    -setMinValue:
    -setValueWraps:
    -valueWraps

    @{
	protected NSStepper(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSStepperCell = com.apple.cocoa.application.NSStepperCell
    -autorepeat
    -increment
    -maxValue
    -minValue
    -setAutorepeat:
    -setIncrement:
    -setMaxValue:
    -setMinValue:
    -setValueWraps:
    -valueWraps

    @{
	protected NSStepperCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTabView = com.apple.cocoa.application.NSTabView
    -addTabViewItem:
    -allowsTruncatedLabels
    -contentRect
    -controlSize
    -controlTint
    -delegate
    -drawsBackground
    -font
    -indexOfTabViewItem:
    -indexOfTabViewItemWithIdentifier:
    constructor -init
    constructor -initWithFrame:
    -insertTabViewItem:atIndex:
    -minimumSize
    -numberOfTabViewItems
    -removeTabViewItem:
    -selectedTabViewItem
    -selectFirstTabViewItem:
    -selectLastTabViewItem:
    -selectNextTabViewItem:
    -selectPreviousTabViewItem:
    -selectTabViewItem:
    -selectTabViewItemAtIndex:
    -selectTabViewItemWithIdentifier:
    -setAllowsTruncatedLabels:
    -setControlSize:
    -setControlTint:
    -setDelegate:
    -setDrawsBackground:
    -setFont:
    -setTabViewType:
    -tabViewItemAtIndex:
    -tabViewItemAtPoint:
    -tabViewItems
    -tabViewType
    -takeSelectedTabViewItemFromSender:

    @{
	protected NSTabView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public final static int SelectedTab = 0;
public final static int BackgroundTab = 1;
public final static int PressedTab = 2;

/*
 * Tab view types.
 *
 */

public final static int TopTabsBezelBorder = 0;
public final static int LeftTabsBezelBorder = 1;
public final static int BottomTabsBezelBorder = 2;
public final static int RightTabsBezelBorder = 3;
public final static int NoTabsBezelBorder = 4;
public final static int NoTabsLineBorder = 5;
public final static int NoTabsNoBorder = 6;

/*
 * Tab tints.
 *
 */

public static final int RegularControlSize = 0;
public static final int SmallControlSize   = 1;
public static final int MiniControlSize    = 2;

public static final int DefaultControlTint  = 0;
public static final int BlueControlTint     = 1;
public static final int GraphiteControlTint = 6;
public static final int ClearControlTint    = 7;
    @}

class NSTabViewItem = com.apple.cocoa.application.NSTabViewItem
    implements NSCoding
    -color
    -drawLabel:inRect:
    -identifier
    constructor -init
    -initialFirstResponder
    constructor -initWithIdentifier:
    -label
    -setColor:
    -setIdentifier:
    -setInitialFirstResponder:
    -setLabel:
    -setView:
    -sizeOfLabel:
    -tabState
    -tabView
    -view

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSTabViewItem(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTableColumn = com.apple.cocoa.application.NSTableColumn
    implements NSCoding
    -dataCell
    -dataCellForRow:
    -headerCell
    -identifier
    constructor -init
    constructor -initWithIdentifier:
    -isEditable
    -isResizable
    -maxWidth
    -minWidth
    -setDataCell:
    -setEditable:
    -setHeaderCell:
    -setIdentifier:
    -setMaxWidth:
    -setMinWidth:
    -setResizable:
    -setSortDescriptorPrototype:
    -setTableView:
    -setWidth:
    -sizeToFit
    -sortDescriptorPrototype
    -tableView
    -width

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSTableColumn(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTableHeaderCell = com.apple.cocoa.application.NSTableHeaderCell
    -drawSortIndicatorWithFrame:inView:ascending:priority:
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    -sortIndicatorRectForBounds:

    @{
	protected NSTableHeaderCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTableHeaderView = com.apple.cocoa.application.NSTableHeaderView
    -columnAtPoint:
    -draggedColumn
    -draggedDistance
    -headerRectOfColumn:
    constructor -init
    constructor -initWithFrame:
    -resizedColumn
    -setTableView:
    -tableView

    @{
	protected NSTableHeaderView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTableView = com.apple.cocoa.application.NSTableView
    -addTableColumn:
    -allowsColumnReordering
    -allowsColumnResizing
    -allowsColumnSelection
    -allowsEmptySelection
    -allowsMultipleSelection
    -autoresizesAllColumnsToFit
    -autosaveName
    -autosaveTableColumns
    -backgroundColor
    -clickedColumn
    -clickedRow
    -columnAtPoint:
    -columnsInRect:
    -columnWithIdentifier:
    -cornerView
    -dataSource
    -delegate
    -deselectAll:
    -deselectColumn:
    -deselectRow:
    -doubleAction
    -dragImageForRows:event:dragImageOffset:
    -drawBackgroundInClipRect:
    -drawGridInClipRect:
    -drawRow:clipRect:
    -drawsGrid
    -editColumn:row:withEvent:select:
    -editedColumn
    -editedRow
    -frameOfCellAtColumn:row:
    -gridColor
    -gridStyleMask
    -headerView
    -highlightedTableColumn
    -highlightSelectionInClipRect:
    -indicatorImageInTableColumn:
    constructor -init
    constructor -initWithFrame:
    -intercellSpacing
    -isColumnSelected:
    -isRowSelected:
    -moveColumn:toColumn:
    -noteNumberOfRowsChanged
    -numberOfColumns
    -numberOfRows
    -numberOfSelectedColumns
    -numberOfSelectedRows
    -rectOfColumn:
    -rectOfRow:
    -reloadData
    -removeTableColumn:
    -rowAtPoint:
    -rowHeight
    -rowsInRect:
    -scrollColumnToVisible:
    -scrollRowToVisible:
    -selectAll:
    -selectColumn:byExtendingSelection:
    -selectedColumn
    -selectColumnIndexes:byExtendingSelection:
    -selectedColumnEnumerator
    -selectedColumnIndexes
    -selectedRow
    -selectRowIndexes:byExtendingSelection:
    -selectedRowEnumerator
    -selectedRowIndexes
    -selectRow:byExtendingSelection:
    -setAllowsColumnReordering:
    -setAllowsColumnResizing:
    -setAllowsColumnSelection:
    -setAllowsEmptySelection:
    -setAllowsMultipleSelection:
    -setAutoresizesAllColumnsToFit:
    -setAutosaveName:
    -setAutosaveTableColumns:
    -setBackgroundColor:
    -setCornerView:
    -setDataSource:
    -setDelegate:
    -setDoubleAction:
    -setDrawsGrid:
    -setDropRow:dropOperation:
    -setGridColor:
    -setGridStyleMask:
    -setHeaderView:
    -setHighlightedTableColumn:
    -setIndicatorImage:inTableColumn: 
    -setIntercellSpacing:
    -setRowHeight:
    -setSortDescriptors:
    -setUsesAlternatingRowBackgroundColors:
    -setVerticalMotionCanBeginDrag:
    -sizeLastColumnToFit
    -sizeToFit
    -sortDescriptors
    -tableColumns
    -tableColumnWithIdentifier:
    -textDidBeginEditing:
    -textDidChange:
    -textDidEndEditing:
    -textShouldBeginEditing:
    -textShouldEndEditing:
    -tile
    -usesAlternatingRowBackgroundColors
    -verticalMotionCanBeginDrag

    @{
	protected NSTableView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Values used to specify the type of drop operation.
 */

/* Deprecated: The following declarations are kept for compatibility, but they are being replaced with new constants that drop the NSTableView prefix, as it is redundant and inconsistent with existing API. */
public static final int NSTableViewDropOn = 0;
public static final int NSTableViewDropAbove = 1;

public static final int DropOn = 0;
public static final int DropAbove = 1;

/*
 * Notifications.
 *
 */
 
public static final String TableViewSelectionDidChangeNotification = "NSTableViewSelectionDidChangeNotification";
public static final String TableViewColumnDidMoveNotification = "NSTableViewColumnDidMoveNotification";
public static final String TableViewColumnDidResizeNotification = "NSTableViewColumnDidResizeNotification";
public static final String TableViewSelectionIsChangingNotification = "NSTableViewSelectionIsChangingNotification";

/*
 * Grid Style Mask Values
 *
 */

public static final int GridNone = 0;
public static final int SolidVerticalGridLineMask = 1 << 0;
public static final int SolidHorizontalGridLineMask = 1 << 1;

    @}

class NSText = com.apple.cocoa.application.NSText
    implements NSChangeSpelling
    implements NSIgnoreMisspelledWords
    -alignCenter:
    -alignLeft:
    -alignment
    -alignRight:
    -backgroundColor
    -changeFont:
    -checkSpelling:
    -copy:
    -copyFont:
    -copyRuler:
    -cut:
    -delegate
    -delete:
    -drawsBackground
    -font
    -importsGraphics
    constructor -init
    constructor -initWithFrame:
    -isEditable
    -isFieldEditor
    -isHorizontallyResizable
    -isRichText
    -isRulerVisible
    -isSelectable
    -isVerticallyResizable
    -maxSize
    -minSize
    -paste:
    -pasteFont:
    -pasteRuler:
    -readRTFDFromFile:
    -replaceCharactersInRange:withRTF:
    -replaceCharactersInRange:withRTFD:
    -replaceCharactersInRange:withString:
    -RTFDFromRange:
    -RTFFromRange:
    -scrollRangeToVisible:
    -selectAll:
    -selectedRange
    -setAlignment:
    -setBackgroundColor:
    -setDelegate:
    -setDrawsBackground:
    -setEditable:
    -setFieldEditor:
    -setFont:
    -setFont:range:
    -setHorizontallyResizable:
    -setImportsGraphics:
    -setMaxSize:
    -setMinSize:
    -setRichText:
    -setSelectable:
    -setSelectedRange:
    -setString:
    -setTextColor:
    -setTextColor:range:
    -setUsesFontPanel:
    -setVerticallyResizable:
    -showGuessPanel:
    -sizeToFit
    -string
    -subscript:
    -superscript:
    -textColor
    -toggleRuler:
    -underline:
    -unscript:
    -usesFontPanel
    -writeRTFDToFile:atomically:

    @{
/*
 * Notifications.
 *
 */
 
public static final String TextDidBeginEditingNotification = "NSTextDidBeginEditingNotification";
public static final String TextDidEndEditingNotification = "NSTextDidEndEditingNotification";
public static final String TextDidChangeNotification = "NSTextDidChangeNotification";

/*
 * Text alignment.
 *
 */

public static final int LeftTextAlignment = 0;
public static final int RightTextAlignment = 1;
public static final int CenterTextAlignment = 2;
public static final int JustifiedTextAlignment = 3;
public static final int NaturalTextAlignment = 4;

public static final int IllegalTextMovement = 0;
public static final int ReturnTextMovement = 0x10;
public static final int TabTextMovement = 0x11;
public static final int BacktabTextMovement = 0x12;
public static final int LeftTextMovement = 0x13;
public static final int RightTextMovement = 0x14;
public static final int UpTextMovement = 0x15;
public static final int DownTextMovement = 0x16;
public static final int CancelTextMovement = 0x17;
public static final int OtherTextMovement = 0;

public static final char ParagraphSeparatorCharacter = (char)0x2029;
public static final char LineSeparatorCharacter = (char)0x2028;
public static final char TabCharacter = (char)0x0009;
public static final char FormFeedCharacter = (char)0x000c;
public static final char NewlineCharacter = (char)0x000a;
public static final char CarriageReturnCharacter = (char)0x000d;
public static final char EnterCharacter = (char)0x0003;
public static final char BackspaceCharacter = (char)0x0008;
public static final char DeleteCharacter = (char)0x007f;
    @}

class NSTextAttachment = com.apple.cocoa.application.NSTextAttachment
    implements NSCoding
    -attachmentCell
    -fileWrapper
    constructor -init
    constructor -initWithFileWrapper:
    -setAttachmentCell:
    -setFileWrapper:

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSTextAttachment(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final char AttachmentCharacter = (char)0xfffc;
    @}

class NSTextAttachmentCell = com.apple.cocoa.application.NSTextAttachmentCell
    implements NSTextAttachmentCell
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:

    @{
	protected NSTextAttachmentCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTextContainer = com.apple.cocoa.application.NSTextContainer
    implements NSCoding
    -containerSize
    -containsPoint:
    -heightTracksTextView
    constructor -init
    constructor -initWithContainerSize:
    -isSimpleRectangularTextContainer
    -layoutManager
    -lineFragmentPadding
    -lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:
    -replaceLayoutManager:
    -setContainerSize:
    -setHeightTracksTextView:
    -setLayoutManager:
    -setLineFragmentPadding:
    -setTextView:
    -setWidthTracksTextView:
    -textView
    -widthTracksTextView

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSTextContainer(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Line sweep direction.
 *
 */

public static final int LineSweepLeft = 0;
public static final int LineSweepRight = 1;
public static final int LineSweepDown = 2;
public static final int LineSweepUp = 3;

/*
 * Line movement.
 *
 */

public static final int LineDoesntMove = 0;
public static final int LineMovesLeft = 1;
public static final int LineMovesRight = 2;
public static final int LineMovesDown = 3;
public static final int LineMovesUp = 4;
    @}

class NSTextField = com.apple.cocoa.application.NSTextField
    -acceptsFirstResponder
    -allowsEditingTextAttributes
    -backgroundColor
    -bezelStyle
    -delegate
    -drawsBackground
    -importsGraphics
    constructor -init
    constructor -initWithFrame:
    -isBezeled
    -isBordered
    -isEditable
    -isSelectable
    -selectText:
    -setAllowsEditingTextAttributes:
    -setBackgroundColor:
    -setBezeled:
    -setBezelStyle:
    -setBordered:
    -setDelegate:
    -setDrawsBackground:
    -setEditable:
    -setImportsGraphics:
    -setSelectable:
    -setTextColor:
    -setTitleWithMnemonic:
    -textColor
    -textDidBeginEditing:
    -textDidChange:
    -textDidEndEditing:
    -textShouldBeginEditing:
    -textShouldEndEditing:

    @{
	protected NSTextField(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }
    @}

class NSTextFieldCell = com.apple.cocoa.application.NSTextFieldCell
    -backgroundColor
    -bezelStyle
    -drawsBackground
    constructor -init
    constructor -initImageCell:
    constructor -initTextCell:
    -placeholderAttributedString
    -placeholderString
    -setBackgroundColor:
    -setBezelStyle:
    -setDrawsBackground:
    -setPlaceholderAttributedString:
    -setPlaceholderString:
    -setTextColor:
    -setUpFieldEditorAttributes:
    -textColor

    @{
	protected NSTextFieldCell(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Bezel styles.
 *
 */

public static final int TextFieldSquareBezel  = 0;
public static final int TextFieldRoundedBezel = 1;

    @}

class NSTextStorage = com.apple.cocoa.application.NSTextStorage
    -addLayoutManager:
    -changeInLength
    -delegate
    -edited:range:changeInLength:
    -editedMask
    -editedRange
    -ensureAttributesAreFixedInRange:
    -fixesAttributesLazily
    constructor -init
    constructor -initWithAttributedString:
    constructor -initWithPath::
    constructor -initWithString:
    constructor -initWithString:attributes:
    constructor -initWithURL::
    -invalidateAttributesInRange:
    -layoutManagers
    -processEditing
    -removeLayoutManager:
    -replaceCharactersInRange:withString:
    -setAttributes:range:
    -setDelegate:

    @{
	protected NSTextStorage(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String TextStorageWillProcessEditingNotification = "NSTextStorageWillProcessEditingNotification";
public static final String TextStorageDidProcessEditingNotification = "NSTextStorageDidProcessEditingNotification";
    @}

class NSTextTab = com.apple.cocoa.application.NSTextTab
    implements NSCoding
    constructor -init
    constructor -initWithTextAlignment:location:options:
    constructor -initWithType:location:
    -alignment
    -location
    -options
    -tabStopType

    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSTextTab(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public static final String TabColumnTerminatorsAttributeName = "NSTabColumnTerminatorsAttributeName";

public static final int LeftTabStopType = 0;
public static final int RightTabStopType = 1;
public static final int CenterTabStopType = 2;
public static final int DecimalTabStopType = 3;
    @}

class NSTextView = com.apple.cocoa.application.NSTextView
    implements NSTextInput
    -acceptableDragTypes
    -alignJustified:
    -allowsDocumentBackgroundColorChange
    -allowsUndo
    -backgroundColor
    -becomeFirstResponder
    -changeAttributes:
    -changeColor:
    -changeDocumentBackgroundColor:
    -cleanUpAfterDragOperation
    -clickedOnLink:atIndex:
    -defaultParagraphStyle
    -delegate
    -didChangeText
    -dragOperationForDraggingInfo:type:
    -drawInsertionPointInRect:color:turnedOn:
    -drawViewBackgroundInRect:
    -drawsBackground
    -importsGraphics
    constructor -init
    constructor -initWithFrame:
    constructor -initWithFrame:textContainer:
    -insertCompletion:forPartialWordRange:movement:isFinal:
    -insertionPointColor
    -invalidateTextContainerOrigin
    -isContinuousSpellCheckingEnabled
    -isEditable
    -isFieldEditor
    -isRichText
    -isRulerVisible
    -isSelectable
    -layoutManager
    -linkTextAttributes
    -loosenKerning:
    -lowerBaseline:
    -markedTextAttributes
    -outline:
    -pasteAsPlainText:
    -pasteAsRichText:
    -performFindPanelAction:
    -preferredPasteboardTypeFromArray:restrictedToTypesFromArray:
    -raiseBaseline:
    -rangeForUserCharacterAttributeChange
    -rangeForUserCompletion
    -rangeForUserParagraphAttributeChange
    -rangeForUserTextChange
    -readablePasteboardTypes
    -readSelectionFromPasteboard:
    -readSelectionFromPasteboard:type:
    +registerForServices
    -replaceTextContainer:
    -resignFirstResponder
    -rulerView:didAddMarker:
    -rulerView:didMoveMarker:
    -rulerView:didRemoveMarker:
    -rulerView:handleMouseDown:
    -rulerView:shouldAddMarker:
    -rulerView:shouldMoveMarker:
    -rulerView:shouldRemoveMarker:
    -rulerView:willAddMarker:atLocation:
    -rulerView:willMoveMarker:toLocation:
    -selectedTextAttributes
    -selectionAffinity
    -selectionGranularity
    -selectionRangeForProposedRange:granularity:
    -setAlignment:range:
    -setAllowsDocumentBackgroundColorChange:
    -setAllowsUndo:
    -setBackgroundColor:
    -setConstrainedFrameSize:
    -setContinuousSpellCheckingEnabled:
    -setDefaultParagraphStyle:
    -setDelegate:
    -setDrawsBackground:
    -setEditable:
    -setFieldEditor:
    -setImportsGraphics:
    -setInsertionPointColor:
    -setLinkTextAttributes:
    -setMarkedTextAttributes:
    -setNeedsDisplayInRect:avoidAdditionalLayout:
    -setRichText:
    -setRulerVisible:
    -setSelectable:
    -setSelectedRange:
    -setSelectedRange:affinity:stillSelecting:
    -setSelectedTextAttributes:
    -setSelectionGranularity:
    -setSmartInsertDeleteEnabled:
    -setTextContainer:
    -setTextContainerInset:
    -setTypingAttributes:
    -setUsesFindPanel:
    -setUsesFontPanel:
    -setUsesRuler:
    -shouldChangeTextInRange:replacementString:
    -shouldDrawInsertionPoint
    -smartDeleteRangeForProposedRange:
    -smartInsertAfterStringForString:replacingRange:
    -smartInsertBeforeStringForString:replacingRange:
    -smartInsertDeleteEnabled
    -spellCheckerDocumentTag
    -startSpeaking:
    -stopSpeaking:
    -textContainer
    -textContainerInset
    -textContainerOrigin
    -textStorage
    -tightenKerning:
    -toggleBaseWritingDirection:
    -toggleContinuousSpellChecking:
    -toggleTraditionalCharacterShape:
    -turnOffKerning:
    -turnOffLigatures:
    -typingAttributes
    -updateDragTypeRegistration
    -updateFontPanel
    -updateInsertionPointStateAndRestartTimer:
    -updateRuler
    -useAllLigatures:
    -usesFindPanel
    -usesFontPanel
    -usesRuler
    -useStandardKerning:
    -useStandardLigatures:
    -validRequestorForSendType:returnType:
    -writablePasteboardTypes
    -writeSelectionToPasteboard:type:
    -writeSelectionToPasteboard:types:

    @{
	protected NSTextView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String TextViewWillChangeNotifyingTextViewNotification = "NSTextViewWillChangeNotifyingTextViewNotification";
public static final String TextViewDidChangeSelectionNotification = "NSTextViewDidChangeSelectionNotification";
public static final String TextViewDidChangeTypingAttributesNotification = "NSTextViewDidChangeTypingAttributesNotification";

/*
 * Enumerations.
 *
 */

public static final int SelectByCharacter = 0;
public static final int SelectByWord = 1;
public static final int SelectByParagraph = 2;

public static final int SelectionAffinityUpstream = 0;
public static final int SelectionAffinityDownstream = 1;

public static final int FindPanelActionShowFindPanel = 1;
public static final int FindPanelActionNext = 2;
public static final int FindPanelActionPrevious = 3;
public static final int FindPanelActionReplaceAll = 4;
public static final int FindPanelActionReplace = 5;
public static final int FindPanelActionReplaceAndFind = 6;
public static final int FindPanelActionSetFindString = 7;
public static final int FindPanelActionReplaceAllInSelection = 8;

    @}


class NSToolbar = com.apple.cocoa.application.NSToolbar
    -allowsUserCustomization
    -autosavesConfiguration
    -configurationDictionary
    -customizationPaletteIsRunning
    -delegate
    -displayMode
    -identifier
    constructor -init
    constructor -initWithIdentifier:
    -insertItemWithItemIdentifier:atIndex:
    -isVisible
    -items
    -removeItemAtIndex:
    -runCustomizationPalette:
    -selectedItemIdentifier
    -setAllowsUserCustomization:
    -setAutosavesConfiguration:
    -setConfigurationFromDictionary:
    -setDelegate:
    -setDisplayMode:
    -setSelectedItemIdentifier:
    -setSizeMode:
    -setVisible:
    -sizeMode
    -validateVisibleItems
    -visibleItems

    @{
/*
 * Notifications
 */

/* Deprecated: The following declarations are kept for compatibility, but they are being replaced with new constants that drop the NSToolbar prefix, as it is redundant and inconsistent with existing API. */
public static final String NSToolbarWillAddItemNotification = "NSToolbarWillAddItemNotification";
public static final String NSToolbarDidRemoveItemNotification = "NSToolbarDidRemoveItemNotification";

public static final String WillAddItemNotification = "NSToolbarWillAddItemNotification";
public static final String DidRemoveItemNotification = "NSToolbarDidRemoveItemNotification";

/*
 * enum: NSToolbarDisplayMode
 */

/* Deprecated: The following declarations are kept for compatibility, but they are being replaced with new constants that drop the NSToolbar prefix, as it is redundant and inconsistent with existing API. */
public static final int NSToolbarDisplayModeDefault = 0;
public static final int NSToolbarDisplayModeIconAndLabel = 1;
public static final int NSToolbarDisplayModeIconOnly = 2;
public static final int NSToolbarDisplayModeLabelOnly = 3;

public static final int DisplayModeDefault = 0;
public static final int DisplayModeIconAndLabel = 1;
public static final int DisplayModeIconOnly = 2;
public static final int DisplayModeLabelOnly = 3;

/*
 * enum: NSToolbarSizeMode
 */

public static final int SizeModeDefault = 0;
public static final int SizeModeRegular = 1;
public static final int SizeModeSmall = 2;

    @}


class NSToolbarItem = com.apple.cocoa.application.NSToolbarItem
    implements NSValidatedUserInterfaceItem
    -allowsDuplicatesInToolbar
    -image
    constructor -init
    constructor -initWithItemIdentifier:
    -itemIdentifier
    -isEnabled
    -label
    -maxSize
    -menuFormRepresentation
    -minSize
    -paletteLabel
    -target
    -toolbar
    -toolTip
    -validate
    -view
    -setAction:
    -setEnabled:
    -setImage:
    -setLabel:
    -setMaxSize:
    -setMenuFormRepresentation:
    -setMinSize:
    -setPaletteLabel:
    -setTag:
    -setTarget:
    -setToolTip:
    -setView:

    @{
/*
 * Standard Item Identifiers.
 */

/* Deprecated: The following declarations are kept for compatibility, but they are being replaced with new constants that drop the NSToolbar prefix, as it is redundant and inconsistent with existing API.  Also, FlexibleItemIdentifier is replaced with FlexibleSpaceItemIdentifier to exactly match the ObjC declaration. */
public static final String NSToolbarSeparatorItemIdentifier = "NSToolbarSeparatorItem";
public static final String NSToolbarSpaceItemIdentifier = "NSToolbarSpaceItem";
public static final String NSToolbarFlexibleItemIdentifier = "NSToolbarFlexibleSpaceItem";
public static final String NSToolbarShowColorsItemIdentifier = "NSToolbarShowColorsItem";  
public static final String NSToolbarShowFontsItemIdentifier = "NSToolbarShowFontsItem";       
public static final String NSToolbarCustomizeToolbarItemIdentifier = "NSToolbarCustomizeToolbarItem";
public static final String NSToolbarPrintItemIdentifier = "NSToolbarPrintItem";

public static final String SeparatorItemIdentifier = "NSToolbarSeparatorItem";
public static final String SpaceItemIdentifier = "NSToolbarSpaceItem";
public static final String FlexibleSpaceItemIdentifier = "NSToolbarFlexibleSpaceItem";
public static final String ShowColorsItemIdentifier = "NSToolbarShowColorsItem";  
public static final String ShowFontsItemIdentifier = "NSToolbarShowFontsItem";       
public static final String CustomizeToolbarItemIdentifier = "NSToolbarCustomizeToolbarItem";
public static final String PrintItemIdentifier = "NSToolbarPrintItem";

    @}

class NSUserDefaultsController = com.apple.cocoa.application.NSUserDefaultsController
    +sharedUserDefaultsController
    -appliesImmediately
    -defaults
    -initialValues
    constructor -initWithDefaults:initialValues:
    -revert:
    -revertToInitialValues:
    -save:
    -setAppliesImmediately:
    -setInitialValues:

class NSView = com.apple.cocoa.application.NSView
    -acceptsFirstMouse:
    -addCursorRect:cursor:
    -addSubview:
    -addSubview:positioned:relativeTo:
    -addTrackingRect:owner:userObject:assumeInside:
    -adjustPageHeightTop:bottom:limit:
    -adjustPageWidthLeft:right:limit:
    -adjustScroll:
    -allocateGState
    -ancestorSharedWithView:
    -autoresizesSubviews
    -autoresizingMask
    -autoscroll:
    -bounds
    -boundsRotation
    -canBecomeKeyView
    -canDraw
    -centerScanRect:
    -concludeDragOperation:
    -convertPoint:fromView:
    -convertPoint:toView:
    -convertRect:fromView:
    -convertRect:toView:
    -convertSize:fromView:
    -convertSize:toView:
    -dataWithEPSInsideRect:
    -dataWithPDFInsideRect:
    +defaultFocusRingType
    +defaultMenu
    -didAddSubview:
    -discardCursorRects
    -display
    -displayIfNeeded
    -displayIfNeededIgnoringOpacity
    -displayIfNeededInRect:
    -displayIfNeededInRectIgnoringOpacity:
    -displayRect:
    -displayRectIgnoringOpacity:
    -dragFile:fromRect:slideBack:event:
    -dragPromisedFilesOfTypes:fromRect:source:slideBack:event:
    -draggingEntered:
    -draggingExited:
    -draggingUpdated:
    -dragImage:at:offset:event:pasteboard:source:slideBack:
    -drawPageBorderWithSize:
    -drawRect:
    -drawSheetBorderWithSize:
    -enclosingScrollView
    -endPage
    -focusRingType
    +focusView
    -frame
    -frameRotation
    -rectsBeingDrawn
    -gState
    -heightAdjustLimit
    -hitTest:
    constructor -init
    constructor -initWithFrame:
    -inLiveResize
    -isDescendantOf:
    -isFlipped
    -isHidden
    -isHiddenOrHasHiddenAncestor
    -isOpaque
    -isRotatedFromBase
    -isRotatedOrScaledFromBase
    -knowsPageRange:
    -locationOfPrintRect:
    -lockFocus
    -menuForEvent:
    -mouse:inRect:
    -mouseDownCanMoveWindow
    -needsDisplay
    -needsPanelToBecomeKey
    -needsToDrawRect:
    -nextKeyView
    -nextValidKeyView
    -opaqueAncestor
    -performDragOperation:
    -performKeyEquivalent:
    -performMnemonic:
    -postsBoundsChangedNotifications
    -postsFrameChangedNotifications
    -prepareForDragOperation:
    -previousKeyView
    -previousValidKeyView
    -print:
    -rectForPage:
    -reflectScrolledClipView:
    -registerForDraggedTypes:
    -releaseGState
    -removeCursorRect:cursor:
    -removeFromSuperview
    -removeFromSuperviewWithoutNeedingDisplay
    -removeTrackingRect:
    -renewGState
    -replaceSubview:with:
    -resetCursorRects
    -resizeSubviewsWithOldSize:
    -resizeWithOldSuperviewSize:
    -rotateByAngle:
    -scaleUnitSquareToSize:
    -scrollClipView:toPoint:
    -scrollPoint:
    -scrollRect:by:
    -scrollRectToVisible:
    -setAutoresizesSubviews:
    -setAutoresizingMask:
    -setBounds:
    -setBoundsOrigin:
    -setBoundsRotation:
    -setBoundsSize:
    -setFocusRingType:
    -setFrame:
    -setFrameOrigin:
    -setFrameRotation:
    -setFrameSize:
    -setHidden:
    -setKeyboardFocusRingNeedsDisplayInRect:
    -setNeedsDisplay:
    -setNeedsDisplayInRect:
    -setNextKeyView:
    -setPostsBoundsChangedNotifications:
    -setPostsFrameChangedNotifications:
    -setToolTip:
    -setUpGState
    -shouldDelayWindowOrderingForEvent:
    -shouldDrawColor
    -subviews
    -superview
    -tag
    -toolTip
    -translateOriginToPoint:
    -unlockFocus
    -unregisterDraggedTypes
    -viewDidEndLiveResize
    -viewDidMoveToSuperview
    -viewDidMoveToWindow
    -viewWillMoveToSuperview:
    -viewWillMoveToWindow:
    -viewWillStartLiveResize
    -viewWithTag:
    -visibleRect
    -wantsDefaultClipping
    -widthAdjustLimit
    -willRemoveSubview:
    -window
    -writeEPSInsideRect:toPasteboard:
    -writePDFInsideRect:toPasteboard:

    @{
	protected NSView(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

/*
 * Notifications.
 *
 */
 
public static final String ViewFrameDidChangeNotification = "NSViewFrameDidChangeNotification";
public static final String ViewFocusDidChangeNotification = "NSViewFocusDidChangeNotification";
public static final String ViewBoundsDidChangeNotification = "NSViewBoundsDidChangeNotification";

/*
 * Borders.
 *
 */

public static final int NoBorder = 0;
public static final int LineBorder = 1;
public static final int BezelBorder = 2;
public static final int GrooveBorder = 3;

/*
 * Autoresizing masks.
 *
 */

public static final int ViewNotSizable = 0;
public static final int ViewMinXMargin = 1;
public static final int ViewWidthSizable = 2;
public static final int ViewMaxXMargin = 4;
public static final int ViewMinYMargin = 8;
public static final int ViewHeightSizable = 16;
public static final int ViewMaxYMargin = 32;

    @}

class NSWindow = com.apple.cocoa.application.NSWindow
    -acceptsMouseMovedEvents
    -addChildWindow:ordered:
    -allowsToolTipsWhenApplicationIsInactive
    -alphaValue
    -animationResizeTime:
    -areCursorRectsEnabled
    -aspectRatio
    -attachedSheet
    -backgroundColor
    -backingType
    -becomeKeyWindow
    -becomeMainWindow
    -cacheImageInRect:
    -canBecomeKeyWindow
    -canBecomeMainWindow
    -canHide
    -canStoreColor
    -cascadeTopLeftFromPoint:
    -center
    -childWindows
    -close
    -concludeDragOperation:
    -constrainFrameRect:toScreen:
    -contentAspectRatio
    -contentMaxSize
    -contentMinSize
    -contentRectForFrameRect:
    +contentRectForFrameRect:styleMask:
    -contentResizeIncrements
    -contentView
    -convertBaseToScreen:
    -convertScreenToBase:
    -currentEvent
    -dataWithEPSInsideRect:
    -dataWithPDFInsideRect:
    -deepestScreen
    -defaultButtonCell
    +defaultDepthLimit
    -delegate
    -deminiaturize:
    -depthLimit
    -deviceDescription
    -disableCursorRects
    -disableFlushWindow
    -disableKeyEquivalentForDefaultButtonCell
    -discardCachedImage
    -discardCursorRects
    -discardEventsMatchingMask:beforeEvent:
    -display
    -displayIfNeeded
    -draggingEntered:
    -draggingExited:
    -draggingUpdated:
    -dragImage:at:offset:event:pasteboard:source:slideBack:
    -drawers
    -enableCursorRects
    -enableFlushWindow
    -enableKeyEquivalentForDefaultButtonCell
    -endEditingFor:
    -fieldEditor:forObject:
    -firstResponder
    -flushWindow
    -flushWindowIfNeeded
    -frame
    -frameAutosaveName
    -frameRectForContentRect:
    +frameRectForContentRect:styleMask:
    -gState
    -hasDynamicDepthLimit
    -hasShadow
    -hidesOnDeactivate
    -ignoresMouseEvents
    constructor -init
    -initialFirstResponder
    constructor -initWithContentRect:styleMask:backing:defer:
    constructor -initWithContentRect:styleMask:backing:defer:screen:
    -invalidateCursorRectsForView:
    -invalidateShadow
    -isAutodisplay
    -isDocumentEdited
    -isExcludedFromWindowsMenu
    -isFlushWindowDisabled
    -isKeyWindow
    -isMainWindow
    -isMiniaturized
    -isMovableByWindowBackground
    -isOneShot
    -isOpaque
    -isReleasedWhenClosed
    -isSheet
    -isVisible
    -isZoomed
    -keyDown:
    -keyViewSelectionDirection
    -level
    -makeFirstResponder:
    -makeKeyAndOrderFront:
    -makeKeyWindow
    -makeMainWindow
    -maxSize
    +menuChanged:
    +minFrameWidthWithTitle:styleMask:
    -miniaturize:
    -miniwindowImage
    -miniwindowTitle
    -minSize
    -mouseLocationOutsideOfEventStream
    -nextEventMatchingMask:
    -nextEventMatchingMask:untilDate:inMode:dequeue:
    -orderBack:
    -orderFront:
    -orderFrontRegardless
    -orderOut:
    -orderWindow:relativeTo:
    -parentWindow
    -performClose:
    -performDragOperation:
    -performMiniaturize:
    -performZoom:
    -postEvent:atStart:
    -prepareForDragOperation:
    -print:
    -registerForDraggedTypes:
    -removeChildWindow:
    +removeFrameUsingName:
    -representedFilename
    -resetCursorRects
    -resignKeyWindow
    -resignMainWindow
    -resizeFlags
    -resizeIncrements
    -restoreCachedImage
    -runToolbarCustomizationPalette:
    -saveFrameUsingName:
    -screen
    -selectKeyViewFollowingView:
    -selectKeyViewPrecedingView:
    -selectNextKeyView:
    -selectPreviousKeyView:
    -sendEvent:
    -setAcceptsMouseMovedEvents:
    -setAllowsToolTipsWhenApplicationIsInactive:
    -setAlphaValue:
    -setAspectRatio:
    -setAutodisplay:
    -setBackgroundColor:
    -setBackingType:
    -setCanHide:
    -setContentAspectRatio:
    -setContentMaxSize:
    -setContentMinSize:
    -setContentResizeIncrements:
    -setContentSize:
    -setContentView:
    -setDefaultButtonCell:
    -setDelegate:
    -setDepthLimit:
    -setDocumentEdited:
    -setDynamicDepthLimit:
    -setExcludedFromWindowsMenu:
    -setFrame:display:
    -setFrame:display:animate:
    -setFrameAutosaveName:
    -setFrameFromString:
    -setFrameOrigin:
    -setFrameTopLeftPoint:
    -setFrameUsingName:
    -setFrameUsingName:force:
    -setHasShadow:
    -setHidesOnDeactivate:
    -setIgnoresMouseEvents:
    -setInitialFirstResponder:
    -setLevel:
    -setMaxSize:
    -setMiniwindowImage:
    -setMiniwindowTitle:
    -setMinSize:
    -setMovableByWindowBackground:
    -setOneShot:
    -setOpaque:
    -setParentWindow:
    -setReleasedWhenClosed:
    -setRepresentedFilename:
    -setResizeIncrements:
    -setShowsResizeIndicator:
    -setTitle:
    -setTitleWithRepresentedFilename:
    -setToolbar:
    -setViewsNeedDisplay:
    -setWindowController:
    -showsResizeIndicator
    +standardWindowButton:forStyleMask:
    -standardWindowButton:
    -stringWithSavedFrame
    -styleMask
    -title
    -toggleToolbarShown:
    -toolbar
    -tryToPerform:with:
    -unregisterDraggedTypes
    -update
    -useOptimizedDrawing:
    -validRequestorForSendType:returnType:
    -viewsNeedDisplay
    -windowController
    -windowNumber
    -worksWhenModal
    -zoom:

    @{
/*
 * Notifications.
 *
 */
 
public static final String WindowDidBecomeKeyNotification = "NSWindowDidBecomeKeyNotification";
public static final String WindowDidBecomeMainNotification = "NSWindowDidBecomeMainNotification";
public static final String WindowDidChangeScreenNotification = "NSWindowDidChangeScreenNotification";
public static final String WindowDidDeminiaturizeNotification = "NSWindowDidDeminiaturizeNotification";
public static final String WindowDidEndSheetNotification = "NSWindowDidEndSheetNotification";
public static final String WindowDidExposeNotification = "NSWindowDidExposeNotification";
public static final String WindowDidMiniaturizeNotification = "NSWindowDidMiniaturizeNotification";
public static final String WindowDidMoveNotification = "NSWindowDidMoveNotification";
public static final String WindowDidResignKeyNotification = "NSWindowDidResignKeyNotification";
public static final String WindowDidResignMainNotification = "NSWindowDidResignMainNotification";
public static final String WindowDidResizeNotification = "NSWindowDidResizeNotification";
public static final String WindowDidUpdateNotification = "NSWindowDidUpdateNotification";
public static final String WindowWillBeginSheetNotification = "NSWindowWillBeginSheetNotification";
public static final String WindowWillCloseNotification = "NSWindowWillCloseNotification";
public static final String WindowWillMiniaturizeNotification = "NSWindowWillMiniaturizeNotification";
public static final String WindowWillMoveNotification = "NSWindowWillMoveNotification";

/*
 * Backing store types.
 *
 */

public static final int Retained = 0;
public static final int NonRetained = 1;
public static final int Buffered = 2;

/*
 * Window masks.
 *
 */

public static final int BorderlessWindowMask = 0;
public static final int TitledWindowMask = 1 << 0;
public static final int ClosableWindowMask = 1 << 1;
public static final int MiniaturizableWindowMask = 1 << 2;
public static final int ResizableWindowMask = 1 << 3;
public static final int TexturedBackgroundWindowMask = 1 << 8;

/*
 * Window levels.
 *
 */

public static final int NormalWindowLevel = 0;
public static final int FloatingWindowLevel = 3;
public static final int SubmenuWindowLevel = 3;   // Actually this is more accurately described as the torn off menu level as below.
public static final int TornOffMenuWindowLevel = 3;
public static final int MainMenuWindowLevel = 20;
public static final int StatusWindowLevel = 21;
public static final int ModalPanelWindowLevel = 100;
public static final int PopUpMenuWindowLevel = 101;
public static final int ScreenSaverWindowLevel = 1000;

/*
 * Window ordering.
 *
 */

public static final int Above = 1;
public static final int Below = -1;
public static final int Out = 0;

/*
 * Selection direction.
 *
 */

public static final int DirectSelection = 0;
public static final int SelectingNext = 1;
public static final int SelectingPrevious = 2;

/*
 * Standard window buttons
 *
 */

public static final int CloseButton = 0;
public static final int MiniaturizeButton = 1;
public static final int ZoomButton = 2;
public static final int ToolbarButton = 3;
public static final int DocumentIconButton = 4;
    @}

class NSWindowController = com.apple.cocoa.application.NSWindowController
    implements NSCoding
    -close
    -document
    constructor -init
    constructor -initWithWindow:
    constructor -initWithWindowNibName:
    private -initWithWindowNibName:owner:
    private -initWithWindowNibPath:owner:
    -isWindowLoaded
    -loadWindow
    -owner
    -setDocument:
    -setDocumentEdited:
    -setShouldCascadeWindows:
    -setShouldCloseDocument:
    -setWindow:
    -setWindowFrameAutosaveName:
    -shouldCascadeWindows
    -shouldCloseDocument
    -showWindow:
    -synchronizeWindowTitleWithDocumentName
    -window
    -windowDidLoad
    -windowFrameAutosaveName
    -windowNibName
    -windowNibPath
    -windowTitleForDocumentDisplayName:
    -windowWillLoad
    
    @{
	protected native void encodeWithCoder(com.apple.cocoa.foundation.NSCoder encoder);
	protected NSWindowController(com.apple.cocoa.foundation.NSCoder decoder, long token) { super(false, 0); initWithCoder(decoder, token); }

public NSWindowController(String nibNameOrPath, java.lang.Object owner, boolean isFullPath) {
    super(false, 0);
    if (isFullPath) {
    	this.initWithWindowNibPathAndOwner(nibNameOrPath, owner);
    } else {
    	this.initWithWindowNibNameAndOwner (nibNameOrPath, owner);
    }
}

public NSWindowController(String nibNameOrPath, java.lang.Object owner) {
    this.initWithWindowNibNameAndOwner (nibNameOrPath, owner);
}
    @}

class NSWorkspace = com.apple.cocoa.application.NSWorkspace
    -absolutePathForAppBundleWithIdentifier:
    -activeApplication
    -applicationForFile:
    -checkForRemovableMedia
    -extendPowerOffBy:
    -fileSystemChanged
    -findApplications
    -fullPathForApplication:
    -hideOtherApplications
    -iconForFile:
    -iconForFiles:
    -iconForFileType:
    constructor -init
    -isFilePackageAtPath:
    -launchApplication:
    -launchApplication:showIcon:autolaunch:
    -launchedApplications
    -mountedLocalVolumePaths
    -mountedRemovableMedia
    -mountNewRemovableMedia
    -noteFileSystemChanged
    -noteFileSystemChanged:
    -noteUserDefaultsChanged
    -notificationCenter
    -openFile:
    -openFile:fromImage:at:inView:
    -openFile:withApplication:
    -openFile:withApplication:andDeactivate:
    -openTempFile:
    -openURL:
    -openURLs:::::
    -performFileOperation:source:destination:files:
    -selectFile:inFileViewerRootedAtPath:
    +sharedWorkspace
    -slideImage:from:to:
    -unmountAndEjectDeviceAtPath:
    -userDefaultsChanged

    @{
/*
 * Notifications.
 */
 
public static final String WorkspaceDidLaunchApplicationNotification = "NSWorkspaceDidLaunchApplicationNotification";
public static final String WorkspaceDidMountNotification = "NSWorkspaceDidMountNotification";
public static final String WorkspaceDidPerformFileOperationNotification = "NSWorkspaceDidPerformFileOperationNotification";
public static final String WorkspaceDidTerminateApplicationNotification = "NSWorkspaceDidTerminateApplicationNotification";
public static final String WorkspaceDidUnmountNotification = "NSWorkspaceDidUnmountNotification";
public static final String WorkspaceDidWakeNotification = "NSWorkspaceDidWakeNotification";
public static final String WorkspaceWillLaunchApplicationNotification = "NSWorkspaceWillLaunchApplicationNotification";
public static final String WorkspaceWillPowerOffNotification = "NSWorkspaceWillPowerOffNotification";
public static final String WorkspaceWillSleepNotification = "NSWorkspaceWillSleepNotification";
public static final String WorkspaceWillUnmountNotification = "NSWorkspaceWillUnmountNotification";
public static final String WorkspaceSessionDidBecomeActiveNotification = "NSWorkspaceSessionDidBecomeActiveNotification";
public static final String WorkspaceSessionDidResignActiveNotification = "NSWorkspaceSessionDidResignActiveNotification";

/*
 * Notification dictionary keys.
 */
 
public static final String ApplicationName = "NSApplicationName";
public static final String DevicePath = "NSDevicePath";
public static final String OperationNumber = "NSOperationNumber";

/*
 * Return values for type when getting info for file.
 */
 
public static final String PlainFileType = "";
public static final String DirectoryFileType = "NXDirectoryFileType";
public static final String ApplicationFileType = "app";
public static final String FilesystemFileType = "NXFilesystemFileType";
public static final String ShellCommandFileType = "NXShellCommandFileType";

/*
 * Possible file operations to be performed.
 */
 
public static final String MoveOperation = "move";
public static final String CopyOperation = "copy";
public static final String LinkOperation = "link";
public static final String CompressOperation = "compress";
public static final String DecompressOperation = "decompress";
public static final String EncryptOperation = "encrypt";
public static final String DecryptOperation = "decrypt";
public static final String DestroyOperation = "destroy";
public static final String RecycleOperation = "recycle";
public static final String DuplicateOperation = "duplicate";

public static final int LaunchAndPrint = 0x00000002;
public static final int LaunchInhibitingBackgroundOnly = 0x00000080;
public static final int LaunchWithoutAddingToRecents = 0x00000100;
public static final int LaunchWithoutActivation = 0x00000200;
public static final int LaunchAsync = 0x00010000;
public static final int LaunchAllowingClassicStartup = 0x00020000;
public static final int LaunchPreferringClassic= 0x00040000;
public static final int LaunchNewInstance = 0x00080000;
public static final int LaunchAndHide= 0x00100000;
public static final int LaunchAndHideOthers = 0x00200000;
public static final int LaunchDefault = 0x00030000;
    @}

class NSDragDestination = protected com.apple.cocoa.application.NSDragDestination
    implements NSDraggingInfo
    constructor -init

# Exposed category interfaces.

category NSObject(NSAlertDelegate) = com.apple.cocoa.application.NSAlert.Delegate
    -alertShowHelp:

category NSObject(NSApplicationDelegate) = com.apple.cocoa.application.NSApplication.Delegate
    -application:openFile:
    -application:openFileWithoutUI:
    -application:openFiles:
    -application:openTempFile:
    -application:printFile:
    -application:printFiles:
    -applicationDockMenu:
    -applicationOpenUntitledFile:
    -applicationShouldOpenUntitledFile:
    -applicationShouldTerminate:
    -applicationShouldTerminateAfterLastWindowClosed:
    -applicationShouldHandleReopen:hasVisibleWindows:


category NSObject(NSApplicationNotifications) = com.apple.cocoa.application.NSApplication.Notifications
    -applicationDidBecomeActive:
    -applicationDidChangeScreenParameters:
    -applicationDidFinishLaunching:
    -applicationDidHide:
    -applicationDidResignActive:
    -applicationDidUnhide:
    -applicationDidUpdate:
    -applicationWillBecomeActive:
    -applicationWillFinishLaunching:
    -applicationWillHide:
    -applicationWillResignActive:
    -applicationWillTerminate:
    -applicationWillUnhide:
    -applicationWillUpdate:

category NSObject(NSBrowserDelegate) = com.apple.cocoa.application.NSBrowser.Delegate
    -browser:createRowsForColumn:inMatrix:
    -browser:isColumnValid:
    -browser:numberOfRowsInColumn:
    -browser:selectCellWithString:inColumn:
    -browser:selectRow:inColumn:
    -browser:shouldSizeColumn:forUserResize:toWidth:
    -browser:sizeToFitWidthOfColumn:
    -browser:titleOfColumn:
    -browser:willDisplayCell:atRow:column:
    -browserColumnConfigurationDidChange:
    -browserDidScroll:
    -browserWillScroll:

category NSObject(NSColorPanelResponderMethod) = com.apple.cocoa.application.NSColorPanel.Responder
    -changeColor:

category NSObject(NSComboBoxCellDataSource) = com.apple.cocoa.application.NSComboBoxCell.DataSource
    -comboBoxCell:indexOfItemWithStringValue:
    -comboBoxCell:objectValueForItemAtIndex:
    -comboBoxCell:completedString:
    -numberOfItemsInComboBoxCell:

category NSObject(NSComboBoxDataSource) = com.apple.cocoa.application.NSComboBox.DataSource
    -comboBox:indexOfItemWithStringValue:
    -comboBox:objectValueForItemAtIndex:
    -comboBox:completedString:
    -numberOfItemsInComboBox:

category NSObject(NSComboBoxNotifications) = com.apple.cocoa.application.NSComboBox.Notifications
    -comboBoxSelectionDidChange:
    -comboBoxSelectionIsChanging:
    -comboBoxWillDismiss:
    -comboBoxWillPopUp:

category NSObject(NSControlSubclassDelegateJavaSignatures) = com.apple.cocoa.application.NSControl.Delegate
    -control:didFailToFormatString:errorDescription:
    -control:didFailToValidatePartialString:errorDescription:
    -control:isValidObject:
    -control:textShouldBeginEditing:
    -control:textShouldEndEditing:
    -control:textView:completions:forPartialWordRange:
    -control:textView:doCommandBySelector:

category NSObject(NSControlSubclassNotifications) = com.apple.cocoa.application.NSControl.Notifications
    -controlTextDidBeginEditing:
    -controlTextDidChange:
    -controlTextDidEndEditing:

category NSObject(NSDraggingDestination) = com.apple.cocoa.application.NSDraggingDestination
    -concludeDragOperation:
    -draggingEnded:
    -draggingEntered:
    -draggingExited:
    -draggingUpdated:
    -performDragOperation:
    -prepareForDragOperation:

category NSObject(NSDraggingSource) = com.apple.cocoa.application.NSDraggingSource
    -draggedImage:beganAt:
    -draggedImage:endedAt:deposited:
    -draggedImage:endedAt:operation:
    -draggedImage:movedTo:
    -draggingSourceOperationMaskForLocal:
    -ignoreModifierKeysWhileDragging
    -namesOfPromisedFilesDroppedAtDestination:

category NSObject(NSDrawerDelegate) = com.apple.cocoa.application.NSDrawer.Delegate
    -drawerShouldClose:
    -drawerShouldOpen:
    -drawerWillResizeContents:toSize:

category NSObject(NSDrawerNotifications) = com.apple.cocoa.application.NSDrawer.Notifications
    -drawerDidClose:
    -drawerDidOpen:
    -drawerWillClose:
    -drawerWillOpen:

category NSObject(NSFontManagerDelegate) = com.apple.cocoa.application.NSFontManager.Delegate
    -fontManager:willIncludeFont:

category NSObject(NSImageDelegate) = com.apple.cocoa.application.NSImage.Delegate
    -imageDidNotDraw:inRect:
    -image:willLoadRepresentation:
    -image:didLoadRepresentationHeader:
    -image:didLoadPartOfRepresentation:withValidRows:
    -image:didLoadRepresentation:withStatus:

category NSObject(NSLayoutManagerDelegate) = com.apple.cocoa.application.NSLayoutManager.Delegate
    -layoutManager:didCompleteLayoutForTextContainer:atEnd:
    -layoutManagerDidInvalidateLayout:

category NSObject(NSMenuDelegate) = com.apple.cocoa.application.NSMenu.Delegate
    -menu:updateItem:atIndex:shouldCancel:
    -menuNeedsUpdate:
    -numberOfItemsInMenu:

category NSObject(NSMenuDelegateJava) = com.apple.cocoa.application.NSMenu.DelegateJava
    -menuHasKeyEquivalent:forEvent:
    -menuKeyEquivalentAction:forEvent:
    -menuKeyEquivalentTarget:forEvent:

category NSObject(NSMenuValidation) = com.apple.cocoa.application.NSMenu.MenuValidation
    -validateMenuItem:

category NSObject(NSOutlineViewDataSource) = com.apple.cocoa.application.NSOutlineView.DataSource
    -outlineView:acceptDrop:item:childIndex:
    -outlineView:child:ofItem:
    -outlineView:isItemExpandable:
    -outlineView:itemForPersistentObject:
    -outlineView:numberOfChildrenOfItem:
    -outlineView:objectValueForTableColumn:byItem:
    -outlineView:persistentObjectForItem:
    -outlineView:setObjectValue:forTableColumn:byItem:
    -outlineView:sortDescriptorsDidChange:
    -outlineView:validateDrop:proposedItem:proposedChildIndex:
    -outlineView:writeItems:toPasteboard:

category NSObject(NSOutlineViewDelegate) = com.apple.cocoa.application.NSOutlineView.Delegate
    -outlineView:didClickTableColumn:
    -outlineView:didDragTableColumn:
    -outlineView:mouseDownInHeaderOfTableColumn:
    -outlineView:shouldCollapseItem:
    -outlineView:shouldEditTableColumn:item:
    -outlineView:shouldExpandItem:
    -outlineView:shouldSelectItem:
    -outlineView:shouldSelectTableColumn:
    -outlineView:willDisplayCell:forTableColumn:item:
    -outlineView:willDisplayOutlineCell:forTableColumn:item:
    -selectionShouldChangeInOutlineView:

category NSObject(NSOutlineViewNotifications) = com.apple.cocoa.application.NSOutlineView.Notifications
    -outlineViewColumnDidMove:
    -outlineViewColumnDidResize:
    -outlineViewItemDidCollapse:
    -outlineViewItemDidExpand:
    -outlineViewSelectionDidChange:
    -outlineViewSelectionIsChanging:

category NSObject(NSPasteboardOwner) = com.apple.cocoa.application.NSPasteboardOwner
    -pasteboard:provideDataForType:
    -pasteboardChangedOwner:

category NSObject(NSSavePanelDelegate) = com.apple.cocoa.application.NSSavePanel.Delegate
    -panel:compareFilename:with:caseSensitive:
    -panel:isValidFilename:
    -panel:shouldShowFilename:
    -panel:userEnteredFilename:confirmed:
    -panel:willExpand:
    -panel:directoryDidChange:
    -panelSelectionDidChange:

category NSObject(NSSpeechRecognizerDelegate) = com.apple.cocoa.application.NSSpeechRecognizer.Delegate
    -speechRecognizer:didRecognizeCommand:

category NSObject(NSSpeechSynthesizerDelegate) = com.apple.cocoa.application.NSSpeechSynthesizer.Delegate
    -speechSynthesizer:didFinishSpeaking:
    -speechSynthesizer:willSpeakPhoneme:
    -speechSynthesizer:willSpeakWord:ofString:

category NSObject(NSSplitViewDelegate) = com.apple.cocoa.application.NSSplitView.Delegate
    -splitView:resizeSubviewsWithOldSize:
    -splitViewDidResizeSubviews:
    -splitViewWillResizeSubviews:
    -splitView:canCollapseSubview:
    -splitView:constrainSplitPosition:ofSubviewAt:
    -splitView:constrainMinCoordinate:ofSubviewAt:
    -splitView:constrainMaxCoordinate:ofSubviewAt:

category NSObject(NSTabViewDelegate) = com.apple.cocoa.application.NSTabView.Delegate
    -tabView:didSelectTabViewItem:
    -tabView:shouldSelectTabViewItem:
    -tabView:willSelectTabViewItem:
    -tabViewDidChangeNumberOfTabViewItems:

category NSObject(NSTableDataSource) = com.apple.cocoa.application.NSTableView.DataSource
    -numberOfRowsInTableView:
    -tableView:acceptDrop:row:dropOperation:
    -tableView:objectValueForTableColumn:row:
    -tableView:setObjectValue:forTableColumn:row:
    -tableView:sortDescriptorsDidChange:
    -tableView:validateDrop:proposedRow:proposedDropOperation:
    -tableView:writeRows:toPasteboard:

category NSObject(NSTableViewDelegate) = com.apple.cocoa.application.NSTableView.Delegate
    -selectionShouldChangeInTableView:
    -tableView:didClickTableColumn:
    -tableView:didDragTableColumn:
    -tableView:mouseDownInHeaderOfTableColumn:
    -tableView:shouldEditTableColumn:row:
    -tableView:shouldSelectRow:
    -tableView:shouldSelectTableColumn:
    -tableView:willDisplayCell:forTableColumn:row:

category NSObject(NSTableViewNotifications) = com.apple.cocoa.application.NSTableView.Notifications
    -tableViewColumnDidMove:
    -tableViewColumnDidResize:
    -tableViewSelectionDidChange:
    -tableViewSelectionIsChanging:

category NSObject(NSTextDelegate) = com.apple.cocoa.application.NSText.Delegate
    -textDidBeginEditing:
    -textDidChange:
    -textDidEndEditing:
    -textShouldBeginEditing:
    -textShouldEndEditing:

category NSObject(NSTextStorageDelegate) = com.apple.cocoa.application.NSTextStorage.Delegate
    -textStorageDidProcessEditing:
    -textStorageWillProcessEditing:

category NSObject(NSTextViewDelegateJavaSignatures) = com.apple.cocoa.application.NSTextView.Delegate
    -textView:clickedOnCell:inRect:
    -textView:clickedOnCell:inRect:atIndex:
    -textView:clickedOnLink:
    -textView:clickedOnLink:atIndex:
    -textView:completions:forPartialWordRange:
    -textView:doCommandBySelector:
    -textView:doubleClickedOnCell:inRect:
    -textView:doubleClickedOnCell:inRect:atIndex:
    -textView:draggedCell:inRect:event:
    -textView:draggedCell:inRect:event:atIndex:
    -textView:shouldChangeTextInRange:replacementString:
    -textView:willChangeSelectionFromCharacterRange:toCharacterRange:
    -textView:willDisplayToolTip:forCharacterAtIndex:
    -textView:writablePasteboardTypesForCell:atIndex:
    -textView:writeCell:atIndex:toPasteboard:type:
    -textViewDidChangeSelection:
    -textViewDidChangeTypingAttributes:
    -undoManagerForTextView:

category NSObject(NSToolbarDelegate) = com.apple.cocoa.application.NSToolbar.Delegate
    -toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:
    -toolbarAllowedItemIdentifiers:
    -toolbarDefaultItemIdentifiers:
    -toolbarSelectableItemIdentifiers:

category NSObject(NSToolbarNotifications) = com.apple.cocoa.application.NSToolbar.Notifications
    -toolbarDidRemoveItem:
    -toolbarWillAddItem:

category NSObject(NSToolbarItemValidation) = com.apple.cocoa.application.NSToolbarItem.ItemValidation
    -validateToolbarItem:

category NSObject(NSWindowDelegate) = com.apple.cocoa.application.NSWindow.Delegate
    -windowShouldClose:
    -windowShouldZoom:toFrame:
    -windowWillResize:toSize:
    -windowWillReturnFieldEditor:toObject:
    -windowWillReturnUndoManager:
    -windowWillUseStandardFrame:defaultFrame:
    -window:willPositionSheet:usingRect:

category NSObject(NSWindowNotifications) = com.apple.cocoa.application.NSWindow.Notifications
    -windowDidBecomeKey:
    -windowDidBecomeMain:
    -windowDidChangeScreen:
    -windowDidDeminiaturize:
    -windowDidEndSheet:
    -windowDidExpose:
    -windowDidMiniaturize:
    -windowDidMove:
    -windowDidResignKey:
    -windowDidResignMain:
    -windowDidResize:
    -windowDidUpdate:
    -windowWillBeginSheet:
    -windowWillClose:
    -windowWillMiniaturize:
    -windowWillMove:

category NSResponder(NSStandardKeyBindingMethods) = com.apple.cocoa.application.NSKeyBindingResponder
    -cancelOperation:
    -capitalizeWord:
    -centerSelectionInVisibleArea:
    -changeCaseOfLetter:
    -complete:
    -deleteBackward:
    -deleteBackwardByDecomposingPreviousCharacter:
    -deleteForward:
    -deleteToBeginningOfLine:
    -deleteToBeginningOfParagraph:
    -deleteToEndOfLine:
    -deleteToEndOfParagraph:
    -deleteToMark:
    -deleteWordBackward:
    -deleteWordForward:
    -doCommandBySelector:
    -indent:
    -insertBacktab:
    -insertNewline:
    -insertNewlineIgnoringFieldEditor:
    -insertParagraphSeparator:
    -insertTab:
    -insertTabIgnoringFieldEditor:
    -insertText:
    -lowercaseWord:
    -moveBackward:
    -moveBackwardAndModifySelection:
    -moveDown:
    -moveDownAndModifySelection:
    -moveForward:
    -moveForwardAndModifySelection:
    -moveLeft:
    -moveLeftAndModifySelection:
    -moveRight:
    -moveRightAndModifySelection:
    -moveToBeginningOfDocument:
    -moveToBeginningOfLine:
    -moveToBeginningOfParagraph:
    -moveToEndOfDocument:
    -moveToEndOfLine:
    -moveToEndOfParagraph:
    -moveUp:
    -moveUpAndModifySelection:
    -moveWordBackward:
    -moveWordBackwardAndModifySelection:
    -moveWordForward:
    -moveWordForwardAndModifySelection:
    -moveWordLeft:
    -moveWordLeftAndModifySelection:
    -moveWordRight:
    -moveWordRightAndModifySelection:
    -pageDown:
    -pageUp:
    -scrollLineDown:
    -scrollLineUp:
    -scrollPageDown:
    -scrollPageUp:
    -selectAll:
    -selectLine:
    -selectParagraph:
    -selectToMark:
    -selectWord:
    -setMark:
    -swapWithMark:
    -transpose:
    -transposeWords:
    -uppercaseWord:
    -yank:

category NSView(NSRulerMarkerClientViewDelegation) = com.apple.cocoa.application.NSRulerMarkerClientViewDelegation
    -rulerView:didAddMarker:
    -rulerView:didMoveMarker:
    -rulerView:didRemoveMarker:
    -rulerView:handleMouseDown:
    -rulerView:shouldAddMarker:
    -rulerView:shouldMoveMarker:
    -rulerView:shouldRemoveMarker:
    -rulerView:willAddMarker:atLocation:
    -rulerView:willMoveMarker:toLocation:
    -rulerView:willSetClientView:

