# EOAccessJava.jobs
# Copyright (c) 1997, Apple Computer, Inc. All rights reserved. 

# This .jobs file was automatically generated for your bridging convenience.
# Do not edit this file by hand, use WrapIt or any .jobs creation tool!

# Pseudo-comments controlling exposition of interfaces and directories; human
# readers please note: these pseudo-comments *must* appear *before* the header
# directive for the moment, or they will not be obeyed!

#
# The name of this package.
#
name EOAccessJava

# Pseudo-comment giving WrapIt the name of the default package name.

#> package com.apple.yellow.eoaccess

#
# Source of the Objective C interfaces specifications.
#
header EOAccessJava.h

#
# What other .jobs files bridget should include (for class mappings,
# type definitions, etc.)
#
import EOControlJava.jobs

# Header files that are to be imported in the stub files.

stub-import EOAccessJava.h

# Initialization of the Java framework, outside of what the bridge does.

postinit-callout _InitializeEOAccessJava

# Mapping of Objective C types to Java basic types or classes.

type
    EOAdaptorOperator = int
    EOAdaptorValueType = int
    EODatabaseOperator = int
    EOFactoryMethodArgumentType = int
    EOJoinSemantic = int
    EOParameterDirection = int
    EOUpdateStrategy = int

# Mapping of Objective C selectors to Java methods.

selector
    +delegate = classDelegate
    +formatValue:forAttribute: = formatValueForAttribute
    +qualifier:migratedFromEntity:relationshipPath: = qualifierMigratedFromEntity
    +setDelegate: = setClassDelegate
    +setExpressionClassName:adaptorClassName: = setExpressionClassName
    +sqlPatternFromShellPattern:withEscapeCharacter: = sqlPatternFromShellPatternWithEscapeCharacter
    -adaptor:fetchedValueForValue:attribute: = adaptorFetchedValueForValue
    -adaptorChannel:didEvaluateExpression: = adaptorChannelDidEvaluateExpression
    -adaptorChannel:didExecuteStoredProcedure:withValues: = adaptorChannelDidExecuteStoredProcedure
    -adaptorChannel:didFetchRow: = adaptorChannelDidFetchRow
    -adaptorChannel:didPerformOperations:exception: = adaptorChannelDidPerformOperations
    -adaptorChannel:didSelectAttributes:fetchSpecification:lock:entity: = adaptorChannelDidSelectAttributes
    -adaptorChannel:shouldEvaluateExpression: = adaptorChannelShouldEvaluateExpression
    -adaptorChannel:shouldExecuteStoredProcedure:withValues: = adaptorChannelShouldExecuteStoredProcedure
    -adaptorChannel:shouldReturnValuesForStoredProcedure: = adaptorChannelShouldReturnValuesForStoredProcedure
    -adaptorChannel:shouldSelectAttributes:fetchSpecification:lock:entity: = adaptorChannelShouldSelectAttributes
    -adaptorChannel:willPerformOperations: = adaptorChannelWillPerformOperations
    -addJoinClauseWithLeftName:rightName:joinSemantic: = addJoinClause
    -addModelWithFile: = addModelWithPath
    -addStoredProceduresNamed:toModel: = addStoredProceduresNamed
    -appendItem:toListString: = appendItemToListString
    -assembleJoinClauseWithLeftName:rightName:joinSemantic: = assembleJoinClause
    -databaseContext:didFetchObjects:fetchSpecification:editingContext: = databaseContextDidFetchObjects
    -databaseContext:didSelectObjectsWithFetchSpecification:databaseChannel: = databaseContextDidSelectObjects
    -databaseContext:failedToFetchObject:globalID: = databaseContextFailedToFetchObject
    -databaseContext:newPrimaryKeyForObject:entity: = databaseContextNewPrimaryKey
    -databaseContext:shouldFetchArrayFault: = databaseContextShouldFetchArrayFault
    -databaseContext:shouldFetchObjectFault: = databaseContextShouldFetchObjectFault
    -databaseContext:shouldFetchObjectsWithFetchSpecification:editingContext: = databaseContextShouldFetchObjects
    -databaseContext:shouldHandleDatabaseException: = databaseContextShouldHandleDatabaseException
    -databaseContext:shouldInvalidateObjectWithGlobalID:snapshot: = databaseContextShouldInvalidateObjectWithGlobalID
    -databaseContext:shouldLockObjectWithGlobalID:snapshot: = databaseContextShouldLockObjectWithGlobalID
    -databaseContext:shouldRaiseExceptionForLockFailure: = databaseContextShouldRaiseExceptionForLockFailure
    -databaseContext:shouldSelectObjectsWithFetchSpecification:databaseChannel: = databaseContextShouldSelectObjects
    -databaseContext:shouldUpdateCurrentSnapshot:newSnapshot:globalID:databaseChannel: = databaseContextShouldUpdateCurrentSnapshot
    -databaseContext:shouldUsePessimisticLockWithFetchSpecification:databaseChannel: = databaseContextShouldUsePessimisticLock
    -databaseContext:willFireObjectFaultForGlobalID:withFetchSpecification:editingContext: = databaseContextWillFireObjectFaultForGlobalID
    -databaseContext:willFireArrayFaultForGlobalID:relationship:withFetchSpecification:editingContext: = databaseContextWillFireArrayFaultForGlobalID
    -databaseContext:willOrderAdaptorOperationsFromDatabaseOperations: = databaseContextWillOrderAdaptorOperations
    -databaseContext:willPerformAdaptorOperations:adaptorChannel: = databaseContextWillPerformAdaptorOperations
    -databaseContext:willRunLoginPanelToOpenDatabaseChannel: =     databaseContextWillRunLoginPanelToOpenDatabaseChannel
    -entity:classForObjectWithGlobalID: = classForObjectWithGlobalID
    -entity:failedToLookupClassNamed: = failedToLookupClassNamed
    -entity:relationshipForRow:relationship: = relationshipForRow
    -initWithEditingContext:entityName: = initWithEditingContextEntityName
    -initWithEditingContext:entityName:fetchSpecificationName: = initWithEditingContextEntityNameFetchSpecificationName
    -isObjectLockedWithGlobalID: = isObjectLockedWithGlobalID
    -isObjectLockedWithGlobalID:editingContext: = isObjectLockedWithGlobalID
    +isColumnType:equivalentToColumnType: = isColumnTypeEquivalentToColumnType
    -isValidQualifierType:model: = isValidQualifierType
    -linkAfter:usingGeneration: = linkAfterHandler
    -modelGroup:entityNamed: = modelGroupEntityNamed
    -objectStoreChangesFromAttribute:toAttribute: = objectStoreChangesFromAttributeToAttribute
    -recordSnapshot:forGlobalID: = recordSnapshotForGlobalID
    -recordSnapshot:forSourceGlobalID:relationshipName: = recordSnapshotForSourceGlobalID
    -relationship:failedToLookupDestinationNamed: = relationshipFailedToLookupDestinationWithName
    -selectAttributes:fetchSpecification:lock:entity: = selectAttributes
    -setResultCache:forEntityNamed: = setResultCache
    -snapshotForGlobalID: = snapshotForGlobalID
    -snapshotForGlobalID:after: = snapshotForGlobalID
    -snapshotForSourceGlobalID:relationshipName: = snapshotForSourceGlobalID
    -snapshotForSourceGlobalID:relationshipName:after: = snapshotForSourceGlobalID
    -sqlStringForValue:attributeNamed: = sqlStringForValue
    -sqlStringForValue:caseInsensitiveLikeKey: = sqlStringForCaseInsensitiveLike
    +statementsToModifyColumnNamed:inTableNamed:toNullRule:options: = statementsToModifyColumnNullRule
    +statementsToConvertColumnNamed:inTableNamed:fromType:toType:options: = statementsToConvertColumnType
    -updateValues:inRowDescribedByQualifier:entity: = updateValuesInRowDescribedByQualifier
    -updateValues:inRowsDescribedByQualifier:entity: = updateValuesInRowsDescribedByQualifier
# EOUtilites Methods
    +editingContext:objectsForEntityNamed: = objectsForEntityNamed
    +editingContext:objectsOfClass: = objectsOfClass
    +editingContext:objectsWithEntityNamed:fetchSpecificationNamed:bindings: = objectsWithFetchSpecificationAndBindings
    +editingContext:objectsForEntityNamed:qualifierFormat:args: = objectsWithQualifierFormat
    +editingContext:objectsForEntityName:matchingKey:value: = objectsMatchingKeyAndValue
    +editingContext:objectsForEntityName:matchingValues: = objectsMatchingValues
    +editingContext:objectWithEntityNamed:fetchSpecificationNamed:bindings: = objectWithFetchSpecificationAndBindings
    +editingContext:objectForEntityNamed:qualifierFormat:args: = objectWithQualifierFormat
    +editingContext:objectForEntityNamed:matchingKey:value: = objectMatchingKeyAndValue
    +editingContext:objectForEntityName:matchingValues: = objectMatchingValues
    +editingContext:objectForEntityName:primaryKeyValue: = objectWithPrimaryKeyValue
    +editingContext:objectForEntityName:primaryKey: = objectWithPrimaryKey
    +editingContext:rawRowsForEntityName:qualifierFormat:args: = rawRowsWithQualifierFormat
    +editingContext:rawRowsForEntityName:matchingKey:value: = rawRowsMatchingKeyAndValue
    +editingContext:rawRowsForEntityName:matchingValues: = rawRowsMatchingValues
    +editingContext:rawRowsForModelName:SQL: = rawRowsForSQL
    +editingContext:rawRowsForStoredProcedureNamed:arguments: = rawRowsForStoredProcedureNamed
    +editingContext:executeStoredProcedureNamed:arguments: = executeStoredProcedureNamed
    +editingContext:objectForEntityName:rawRow: = objectFromRawRow
    +editingContext:databaseContextForModelNamed: = databaseContextForModelNamed
    +editingContext:connectWithModelNamed:connectionInfo: = connectWithModelNamed
    +editingContext:createAndInsertInstanceOfEntityNamed: = createAndInsertInstance
    +editingContext:primaryKeyForObject: = primaryKeyForObject
    +editingContext:destinationKeyForSourceObject:relationshipNamed: = destinationKeyForSourceObject
    +editingContext:localInstanceOfObject: = localInstanceOfObject
    +editingContext:localInstancesOfObjects: = localInstancesOfObjects
    +editingContextModelGroup: = modelGroup
    +editingContext:entityNamed: = entityNamed
    +editingContext:entityForClass: = entityForClass
    +editingContext:entityForObject: = entityForObject

# Exposed protocol interfaces.

protocol EOPropertyListEncoding = com.apple.yellow.eoaccess.EOPropertyListEncoding
    -awakeWithPropertyList:
    -encodeIntoPropertyList:
    constructor -initWithPropertyList:owner:

protocol EOColumnTypes = com.apple.yellow.eoaccess.EOSQLExpression.EOColumnTypes
    -name
    -precision
    -scale
    -width

# Exposed class interfaces.

class EODatabaseChannel = com.apple.yellow.eoaccess.EODatabaseChannel
    -adaptorChannel
    -cancelFetch
    -databaseContext
    -delegate
    -fetchObject
    constructor -initWithDatabaseContext:
    -isFetchInProgress
    -isLocking
    -isRefreshingObjects
    -selectObjectsWithFetchSpecification:editingContext:
    -setCurrentEditingContext:
    -setCurrentEntity:
    -setDelegate:
    -setIsLocking:
    -setIsRefreshingObjects:

class EOSQLExpression = com.apple.yellow.eoaccess.EOSQLExpression
    -addBindVariableDictionary:
    -addCreateClauseForAttribute:
    -addInsertListAttribute:value:
    -addJoinClauseWithLeftName:rightName:joinSemantic:
    -addOrderByAttributeOrdering:
    -addSelectListAttribute:
    -addUpdateListAttribute:value:
    -aliasesByRelationshipPath
    -allowsNullClauseForConstraint:
    +appendExpression:toScript:
    -appendItem:toListString:
    -assembleDeleteStatementWithQualifier:tableList:whereClause:
    -assembleInsertStatementWithRow:tableList:columnList:valueList:
    -assembleJoinClauseWithLeftName:rightName:joinSemantic:
    -assembleSelectStatementWithAttributes:lock:qualifier:fetchOrder:selectString:columnList:tableList:whereClause:joinClause:orderByClause:lockClause:
    -assembleUpdateStatementWithRow:qualifier:tableList:updateList:whereClause:
    -bindVariableDictionaries
     -bindVariableDictionaryForAttribute:value:
    -columnTypeStringForAttribute:
    +createDatabaseStatementsForConnectionDictionary:administrativeConnectionDictionary:
    +createTableStatementsForEntityGroup:
    +createTableStatementsForEntityGroups:
    +dropDatabaseStatementsForConnectionDictionary:administrativeConnectionDictionary:
    +deleteStatementWithQualifier:entity:
    +dropPrimaryKeySupportStatementsForEntityGroup:
    +dropPrimaryKeySupportStatementsForEntityGroups:
    +dropTableStatementsForEntityGroup:
    +dropTableStatementsForEntityGroups:
    -entity
    +expressionForString:
    -externalNameQuoteCharacter
    +foreignKeyConstraintStatementsForRelationship:
    +formatSQLString:format:
    +formatStringValue:
    +formatValue:forAttribute:
    constructor -initWithEntity:
    +insertStatementForRow:entity:
    +isColumnType:equivalentToColumnType:options:
    -joinClauseString
    -joinExpression
    -listString
    -lockClause
    -mustUseBindVariableForAttribute:
    -orderByString
    +phraseCastingColumnNamed:fromType:toType:options:
    -prepareConstraintStatementForRelationship:sourceColumns:destinationColumns:
    -prepareDeleteExpressionForQualifier:
    -prepareInsertExpressionWithRow:
    -prepareSelectExpressionWithAttributes:lock:fetchSpecification:
    -prepareUpdateExpressionWithRow:qualifier:
    +primaryKeyConstraintStatementsForEntityGroup:
    +primaryKeyConstraintStatementsForEntityGroups:
    +primaryKeySupportStatementsForEntityGroup:
    +primaryKeySupportStatementsForEntityGroups:
    +schemaCreationScriptForEntities:options:
    +schemaCreationStatementsForEntities:options:
    +selectStatementForAttributes:lock:fetchSpecification:entity:
    -setStatement:
    -setUseAliases:
    +setUseBindVariables:
    +setUseQuotedExternalNames:
    -shouldUseBindVariableForAttribute:
    +sqlPatternFromShellPattern:
    +sqlPatternFromShellPattern:withEscapeCharacter:
    -sqlStringForAttribute:
    -sqlStringForAttributeNamed:
    -sqlStringForAttributePath:
    -sqlStringForConjoinedQualifiers:
    -sqlStringForDisjoinedQualifiers:
    -sqlStringForKeyComparisonQualifier:
    -sqlStringForKeyValueQualifier:
    -sqlStringForNegatedQualifier:
    +sqlStringForNumber:
    -sqlStringForQualifier:
    -sqlStringForSchemaObjectName:
    -sqlStringForSelector:value:
    +sqlStringForString:
    -sqlStringForValue:attributeNamed:
    -sqlStringForValue:caseInsensitiveLikeKey:
    -statement
    +statementsToConvertColumnNamed:inTableNamed:fromType:toType:options:
    +statementsToCopyTableNamed:intoTableForEntityGroup:withChangeDictionary:options:
    +statementsToDeleteColumnNamed:inTableNamed:options:
    +statementsToDropForeignKeyConstraintsOnEntityGroups:withChangeDictionary:options:
    +statementsToDropPrimaryKeyConstraintsOnEntityGroups:withChangeDictionary:options:
    +statementsToDropPrimaryKeySupportForEntityGroups:withChangeDictionary:options:
    +statementsToImplementForeignKeyConstraintsOnEntityGroups:withChangeDictionary:options:
    +statementsToImplementPrimaryKeyConstraintsOnEntityGroups:withChangeDictionary:options:
    +statementsToImplementPrimaryKeySupportForEntityGroups:withChangeDictionary:options:
    +statementsToInsertColumnForAttribute:options:
    +statementsToModifyColumnNamed:inTableNamed:toNullRule:options:
    +statementsToRenameColumnNamed:inTableNamed:newName:options:
    +statementsToRenameTableNamed:newName:options:
    +statementsToUpdateObjectStoreForModel:withChangeDictionary:options:
    +statementsToUpdateObjectStoreForEntityGroups:withChangeDictionary:options:
    +supportsDirectColumnCoercion
    +supportsDirectColumnDeletion
    +supportsDirectColumnInsertion
    +supportsDirectColumnNullRuleModification
    +supportsDirectColumnRenaming
    +supportsSchemaSynchronization
    -tableListWithRootEntity:
    +updateStatementForRow:qualifier:entity:
    -useAliases
    +useBindVariables
    +useQuotedExternalNames
    -valueList
    -whereClauseString

    @{
        public static final String BindVariableNameKey = "BindVariableName";
        public static final String BindVariableAttributeKey = "BindVariableAttribute";
        public static final String BindVariableValueKey = "BindVariableValue";
        public static final String BindVariablePlaceHolderKey = "BindVariablePlaceholder";
        public static final String BindVariableColumnKey = "BindVariableColumn";
        public static final String CreateTablesKey = "createTables";
        public static final String DropTablesKey = "dropTables";
        public static final String CreatePrimaryKeySupportKey = "createPrimaryKeySupport";
        public static final String DropPrimaryKeySupportKey = "dropPrimaryKeySupport";
        public static final String PrimaryKeyConstraintsKey = "primaryKeyConstraints";
        public static final String ForeignKeyConstraintsKey = "foreignKeyConstraints";
        public static final String CreateDatabaseKey = "createDatabase";
        public static final String DropDatabaseKey = "dropDatabase";

        public static final String SchemaSynchronizationForeignKeyConstraintsKey = "EOSchemaSynchronizationForeignKeyConstraintsKey";
        public static final String SchemaSynchronizationPrimaryKeyConstraintsKey = "EOSchemaSynchronizationPrimaryKeyConstraintsKey";
        public static final String SchemaSynchronizationPrimaryKeySupportKey = "EOSchemaSynchronizationPrimaryKeySupportKey";

        public static final String AllowsNullKey = "allowsNull";
        public static final String ColumnNameKey = "columnName";
        public static final String ExternalNameKey = "externalName";
        public static final String ExternalTypeKey = "externalType";
        public static final String NameKey = "name";
        public static final String PrecisionKey = "precision";
        public static final String RelationshipsKey = "relationships";
        public static final String ScaleKey = "scale";
        public static final String WidthKey = "width";
    @}

class EOAdaptor = com.apple.yellow.eoaccess.EOAdaptor
    +adaptorWithModel:
    +adaptorWithName:
    -assertConnectionDictionaryIsValid
    +assignExternalInfoForAttribute:
    +assignExternalInfoForEntireModel:
    +assignExternalInfoForEntity:
    +assignExternalTypeForAttribute:
    +availableAdaptorNames
    -canServiceModel:
    -connectionDictionary
    -contexts
    -createAdaptorContext
    -createDatabaseWithAdministrativeConnectionDictionary:
    -databaseEncoding
    +defaultDelegate
    -defaultExpressionClass
    -delegate
    -dropDatabaseWithAdministrativeConnectionDictionary:
    -expressionClass
    +externalTypesWithModel:
    -fetchedValueForDataValue:attribute:
    -fetchedValueForDateValue:attribute:
    -fetchedValueForNumberValue:attribute:
    -fetchedValueForStringValue:attribute:
    -fetchedValueForValue:attribute:
    -handleDroppedConnection
    -hasOpenChannels
    constructor -initWithName:
    +internalTypeForExternalType:model:
    -isDroppedConnectionException:
    -isValidQualifierType:model:
    -name
    -objectStoreChangesFromAttribute:toAttribute:
    -prototypeAttributes
    -runLoginPanelAndValidateConnectionDictionary
    -runLoginPanel
    -setConnectionDictionary:
    +setDefaultDelegate:
    -setDelegate:
    +setExpressionClassName:adaptorClassName:
    +sharedLoginPanelInstance

    @{
        public static final String GeneralAdaptorException = "EOGeneralAdaptorException";
    @}

category NSObject(EOAdaptorDelegation) = com.apple.yellow.eoaccess.EOAdaptor.Delegate
    -adaptor:fetchedValueForValue:attribute:
    -reconnectionDictionaryForAdaptor:

class EODatabase = com.apple.yellow.eoaccess.EODatabase
    -adaptor
    -addModel:
    -addModelIfCompatible:
    -decrementSnapshotCountForGlobalID:
    +disableSnapshotRefCounting
    -entityForObject:
    -entityNamed:
    -forgetAllSnapshots
    -forgetSnapshotForGlobalID:
    -forgetSnapshotsForGlobalIDs:
    -handleDroppedConnection
    -incrementSnapshotCountForGlobalID:
    constructor -initWithAdaptor:
    constructor -initWithModel:
    -invalidateResultCache
    -invalidateResultCacheForEntityNamed:
    -models
    -recordSnapshot:forGlobalID:
    -recordSnapshot:forSourceGlobalID:relationshipName:
    -recordSnapshots:
    -recordToManySnapshots:
    -registerContext:
    -registeredContexts
    -removeModel:
    -resultCacheForEntityNamed:
    -setResultCache:forEntityNamed:
    -setTimestampToNow
    -snapshotForGlobalID:
    -snapshotForGlobalID:after:
    -snapshotForSourceGlobalID:relationshipName:
    -snapshotForSourceGlobalID:relationshipName:after:
    -snapshots
    -timestampForGlobalID:
    -timestampForSourceGlobalID:relationshipName:
    -unregisterContext:

    @{
        public static final String GeneralDatabaseException = "EOGeneralDatabaseException";
        public static final double DistantPastTimeInterval = -63113817600.0;
    @}

class EOJoin = com.apple.yellow.eoaccess.EOJoin
    -destinationAttribute
    constructor -initWithSourceAttribute:destinationAttribute:
    -isReciprocalToJoin:
    -sourceAttribute

class EOModelGroup = com.apple.yellow.eoaccess.EOModelGroup
    -addModel:
    -addModelWithFile:
    +classDelegate
    +defaultGroup
    -delegate
    -entitiesWithSharedObjects
    -entityForObject:
    -entityNamed:
    -fetchSpecificationNamed:entityNamed:
    +globalModelGroup
    -loadAllModelObjects
    +modelGroupForObjectStoreCoordinator:
    -modelNamed:
    -modelNames
    -models
    -modelWithPath:
    -removeModel:
    +setClassDelegate:
    +setDefaultGroup:
    -setDelegate:
    +setModelGroup:forObjectStoreCoordinator:
    -storedProcedureNamed:

    @{
        public static final String ModelInvalidatedNotification = "EOModelInvalidatedNotification";
        public static final String ModelAddedNotification = "EOModelAddedNotification";
    @}

category NSObject(EOHackedModelGroupDelegate) = com.apple.yellow.eoaccess.EOModelGroup.Delegate
    -entity:classForObjectWithGlobalID:
    -entity:failedToLookupClassNamed:
    -entity:relationshipForRow:relationship:
    -modelGroup:entityNamed:
    -relationship:failedToLookupDestinationNamed:
    -subEntityForEntity:primaryKey:

category NSObject(EOModelGroupClassDelegation) = com.apple.yellow.eoaccess.EOModelGroup.ClassDelegate
    -defaultModelGroup

class EOAccessFaultHandler = com.apple.yellow.eoaccess.EOAccessFaultHandler
    -completeInitializationOfObject:
    -databaseContext
    -editingContext
    -globalID
    constructor -initWithGlobalID:databaseContext:editingContext:

class EORelationship = com.apple.yellow.eoaccess.EORelationship
    implements EOPropertyListEncoding
    -addJoin:
    -anyInverseRelationship
    -beautifyName
    -componentRelationships
    -definition
    -deleteRule
    -destinationAttributes
    -destinationEntity
    -entity
    -inverseRelationship
    -isCompound
    -isFlattened
    -isMandatory
    -isToMany
    -joins
    -joinSemantic
    -name
    -numberOfToManyFaultsToBatchFetch
    -ownsDestination
    -propagatesPrimaryKey
    -qualifierWithSourceRow:
    -referencesProperty:
    -removeJoin:
    -setDefinition:
    -setDeleteRule:
    -setEntity:
    -setIsMandatory:
    -setJoinSemantic:
    -setName:
    -setNumberOfToManyFaultsToBatchFetch:
    -setOwnsDestination:
    -setPropagatesPrimaryKey:
    -setToMany:
    -setUserInfo:
    -sourceAttributes
    -userInfo

    @{
        public static final int InnerJoin = 0;
        public static final int FullOuterJoin = 1;
        public static final int LeftOuterJoin = 2;
        public static final int RightOuterJoin = 3;

        public native void validateName(String name) throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native Object validateValue(Object value) throws com.apple.yellow.eocontrol.EOValidation.Exception;
    @}

class EOEntityClassDescription = com.apple.yellow.eoaccess.EOEntityClassDescription
    -entity
    constructor -initWithEntity:

class EOAdaptorOperation = com.apple.yellow.eoaccess.EOAdaptorOperation
    -adaptorOperator
    -attributes
    -changedValues
    -compareAdaptorOperation:
    -entity
    -exception
    constructor -initWithEntity:
    -qualifier
    -setAdaptorOperator:
    -setAttributes:
    -setChangedValues:
    -setException:
    -setQualifier:
    -setStoredProcedure:
    -storedProcedure

class EOModel = com.apple.yellow.eoaccess.EOModel
    -adaptorName
    -addEntity:
    -availablePrototypeAttributeNames
    -addStoredProcedure:
    -beautifyNames
    -connectionDictionary
    -encodeTableOfContentsIntoPropertyList:
    -entities
    -entitiesWithSharedObjects
    -entityForObject:
    -entityNamed:
    -entityNames
    -externalModelsReferenced
    constructor -initWithContentsOfFile:
    constructor -initWithTableOfContentsPropertyList:path:
    -loadAllModelObjects
    -modelGroup
    -name
    -path
    -prototypeAttributeNamed:
    -referencesToProperty:
    -removeEntity:
    -removeEntityAndReferences:
    -removeStoredProcedure:
    -setAdaptorName:
    -setConnectionDictionary:
    -setModelGroup:
    -setName:
    -setUserInfo:
    -storedProcedureNamed:
    -storedProcedureNames
    -storedProcedures
    -userInfo
    -writeToFile:

    @{
        public static final String EntityLoadedNotification = "EOEntityLoadedNotification";
    @}

class EOStoredProcedure = com.apple.yellow.eoaccess.EOStoredProcedure
    implements EOPropertyListEncoding
    -arguments
    -beautifyName
    -externalName
    constructor -initWithName:
    -model
    -name
    -setArguments:
    -setExternalName:
    -setName:
    -setUserInfo:
    -userInfo

class EOAdaptorContext = com.apple.yellow.eoaccess.EOAdaptorContext
    -adaptor
    -beginTransaction
    -canNestTransactions
    -channels
    -commitTransaction
    -createAdaptorChannel
    +debugEnabledDefault
    +defaultDelegate
    -delegate
    -handleDroppedConnection
    -hasBusyChannels
    -hasOpenChannels
    -hasOpenTransaction
    constructor -initWithAdaptor:
    -isDebugEnabled
    -rollbackTransaction
    -setDebugEnabled:
    +setDebugEnabledDefault:
    +setDefaultDelegate:
    -setDelegate:
    -transactionDidBegin
    -transactionDidCommit
    -transactionDidRollback
    -transactionNestingLevel

    @{
        public static final String AdaptorContextBeginTransactionNotification = "EOAdaptorContextBeginTransactionNotification";
        public static final String AdaptorContextCommitTransactionNotification = "EOAdaptorContextCommitTransactionNotification";
        public static final String AdaptorContextRollbackTransactionNotification = "EOAdaptorContextRollbackTransactionNotification";
    @}

category NSObject(EOAdaptorContextDelegation) = com.apple.yellow.eoaccess.EOAdaptorContext.Delegate
    -adaptorContextDidBegin:
    -adaptorContextDidCommit:
    -adaptorContextDidRollback:
    -adaptorContextShouldBegin:
    -adaptorContextShouldCommit:
    -adaptorContextShouldConnect:
    -adaptorContextShouldRollback:

class EOAttribute = com.apple.yellow.eoaccess.EOAttribute
    implements EOPropertyListEncoding
    -adaptorValueByConvertingAttributeValue:
    -adaptorValueConversionMethod
    -adaptorValueConversionMethodName
    -adaptorValueType
    -allowsNull
    +archiveDataForObject:
    -beautifyName
    -columnName
    -definition
    -entity
    -externalType
    -factoryMethodArgumentType
    -isDerived
    -isFlattened
    -isReadOnly
    -name
    -overridesPrototypeDefinitionForKey:
    -parameterDirection
    -parent
    -precision
    -prototypeName
    -prototype
    -readFormat
    -scale
    -serverTimeZone
    -setAdaptorValueConversionMethodName:
    -setAllowsNull:
    -setColumnName:
    -setDefinition:
    -setExternalType:
    -setFactoryMethodArgumentType:
    -setName:
    -setParameterDirection:
    -setPrecision:
    -setPrototype:
    -setReadFormat:
    -setReadOnly:
    -setScale:
    -setServerTimeZone:
    -setUserInfo:
    -setValueClassName:
    -setValueFactoryMethodName:
    -setValueType:
    -setWidth:
    -setWriteFormat:
    -storedProcedure
    -userInfo
    -valueClassName
    -valueFactoryMethod
    -valueFactoryMethodName
    -valueType
    -width
    -writeFormat

    @{
        public static final int FactoryMethodArgumentIsData = 0;
        public static final int FactoryMethodArgumentIsString = 1;
        public static final int FactoryMethodArgumentIsBytes = 2;

        public static final int AdaptorNumberType = 0;
        public static final int AdaptorCharactersType = 1;
        public static final int AdaptorBytesType = 2;
        public static final int AdaptorDateType = 3;

        public static final int Void = 0;
        public static final int InParameter = 1;
        public static final int OutParameter = 2;
        public static final int InOutParameter = 3;

        public native void validateName(String name) throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native Object validateValue(Object value) throws com.apple.yellow.eocontrol.EOValidation.Exception;
    @}

class EODatabaseOperation = com.apple.yellow.eoaccess.EODatabaseOperation
    -adaptorOperations
    -addAdaptorOperation:
    -databaseOperator
    -dbSnapshot
    -entity
    -globalID
    constructor -initWithGlobalID:object:entity:
    -newRow
    -object
    -primaryKeyDiffs
    -recordToManySnapshot:relationshipName:
    -removeAdaptorOperation:
    -rowDiffs
    -rowDiffsForAttributes:
    -setDatabaseOperator:
    -setDBSnapshot:
    -setNewRow:
    -toManySnapshots

    @{
        public static final int AdaptorLockOperator = 0;
        public static final int AdaptorInsertOperator = 1;
        public static final int AdaptorUpdateOperator = 2;
        public static final int AdaptorDeleteOperator = 3;
        public static final int AdaptorStoredProcedureOperator = 4;

        public static final int DatabaseNothingOperator = 0;
        public static final int DatabaseInsertOperator = 1;
        public static final int DatabaseUpdateOperator = 2;
        public static final int DatabaseDeleteOperator = 3;
    @}

class EODatabaseDataSource = com.apple.yellow.eoaccess.EODatabaseDataSource
    -auxiliaryQualifier
    -databaseContext
    -dataSourceQualifiedByKey:
    -deleteObject:
    -entity
    -fetchSpecification
    -fetchSpecificationForFetch
    -fetchSpecificationName
    constructor -initWithEditingContext:entityName:
    constructor -initWithEditingContext:entityName:fetchSpecificationName:
    -insertObject:
    -isFetchEnabled
    -qualifierBindingKeys
    -qualifierBindings
    -qualifyWithRelationshipKey:ofObject:
    -setAuxiliaryQualifier:
    -setFetchEnabled:
    -setFetchSpecification:
    -setFetchSpecificationByName:
    -setQualifierBindings:

class EOSQLQualifier = com.apple.yellow.eoaccess.EOSQLQualifier
    constructor -initWithEntity:qualifierFormat:
    +qualifier:migratedFromEntity:relationshipPath:
    -qualifierWithBindings:requiresAllVariables:
    +qualifierWithQualifierFormat:
    -validateKeysWithRootClassDescription:

class EOAccessGenericFaultHandler = abstract com.apple.yellow.eoaccess.EOAccessGenericFaultHandler
    -generation
    -linkAfter:usingGeneration:
    -next
    -previous

class EOAccessArrayFaultHandler = com.apple.yellow.eoaccess.EOAccessArrayFaultHandler
    -completeInitializationOfObject:
    -databaseContext
    -editingContext
    constructor -initWithSourceGlobalID:relationshipName:databaseContext:editingContext:
    -relationshipName
    -sourceGlobalID

class EODatabaseContext = com.apple.yellow.eoaccess.EODatabaseContext
    -adaptorContext
    -arrayFaultWithSourceGlobalID:relationshipName:editingContext:
    -availableChannel
    -batchFetchRelationship:forSourceObjects:editingContext:
    +contextClassToRegister
    -commitChanges
    -coordinator
    -database
    +defaultDelegate
    -delegate
    -editingContext:didForgetObjectWithGlobalID:
    -faultForGlobalID:editingContext:
    -faultForRawRow:entityNamed:editingContext:
    +forceConnectionWithModel:connectionDictionaryOverrides:editingContext:
    -forgetAllLocks
    -forgetLocksForObjectsWithGlobalIDs:
    -forgetSnapshotForGlobalID:
    -forgetSnapshotsForGlobalIDs:
    -handleDroppedConnection
    -handlesFetchSpecification:
    -hasBusyChannels
    -initializeObject:withGlobalID:editingContext:
    constructor -initWithDatabase:
    -invalidateAllObjects
    -invalidateObjectsWithGlobalIDs:
    -isObjectLockedWithGlobalID:
    -isObjectLockedWithGlobalID:editingContext:
    +isSharedObjectLoadingEnabled
    -localSnapshotForGlobalID:
    -localSnapshotForSourceGlobalID:relationshipName:
    -lock
    -lockObjectWithGlobalID:editingContext:
    -missingObjectGlobalIDs
    -objectsForSourceGlobalID:relationshipName:editingContext:
    -objectsWithFetchSpecification:editingContext:
    -ownsGlobalID:
    -ownsObject:
    -performChanges
    -prepareForSaveWithCoordinator:editingContext:
    -recordChangesInEditingContext
    -recordSnapshot:forGlobalID:
    -recordSnapshot:forSourceGlobalID:relationshipName:
    -recordSnapshots:
    -recordToManySnapshots:
    -recordUpdateForObject:changes:
    -refaultObject:withGlobalID:editingContext:
    -registerChannel:
    -registeredChannels
    +registeredDatabaseContextForModel:editingContext:
    -registerLockedObjectWithGlobalID:
    -rollbackChanges
    -saveChangesInEditingContext:
    +setContextClassToRegister:
    +setDefaultDelegate:
    -setDelegate:
    +setSharedObjectLoadingEnabled:
    -setUpdateStrategy:
    -snapshotForGlobalID:
    -snapshotForGlobalID:after:
    -snapshotForSourceGlobalID:relationshipName:
    -snapshotForSourceGlobalID:relationshipName:after:
    -unlock
    -unregisterChannel:
    -updateStrategy
    -valuesForKeys:object:

    @{
        public static final int UpdateWithOptimisticLocking = 0;
        public static final int UpdateWithPessimisticLocking = 1;
        public static final int UpdateWithNoLocking = 2;

        public static final String DatabaseChannelNeededNotification = "EODatabaseChannelNeededNotification";
        public static final String CustomQueryExpressionHintKey = "EOCustomQueryExpressionHintKey";
        public static final String StoredProcedureNameHintKey = "EOStoredProcedureNameHintKey";
        public static final String DatabaseContextKey = "EODatabaseContextKey";
        public static final String DatabaseOperationsKey = "EODatabaseOperationsKey";
        public static final String FailedDatabaseOperationKey = "EOFailedDatabaseOperationKey";
    @}

category NSObject(EODatabaseContextDelegation) = com.apple.yellow.eoaccess.EODatabaseContext.Delegate
    -databaseContext:didFetchObjects:fetchSpecification:editingContext:
    -databaseContext:didSelectObjectsWithFetchSpecification:databaseChannel:
    -databaseContext:failedToFetchObject:globalID:
    -databaseContext:newPrimaryKeyForObject:entity:
    -databaseContext:shouldFetchArrayFault:
    -databaseContext:shouldFetchObjectFault:
    -databaseContext:shouldFetchObjectsWithFetchSpecification:editingContext:
    -databaseContext:shouldHandleDatabaseException:
    -databaseContext:shouldInvalidateObjectWithGlobalID:snapshot:
    -databaseContext:shouldLockObjectWithGlobalID:snapshot:
    -databaseContext:shouldRaiseExceptionForLockFailure:
    -databaseContext:shouldSelectObjectsWithFetchSpecification:databaseChannel:
    -databaseContext:shouldUpdateCurrentSnapshot:newSnapshot:globalID:databaseChannel:
    -databaseContext:shouldUsePessimisticLockWithFetchSpecification:databaseChannel:
    -databaseContext:willFireObjectFaultForGlobalID:withFetchSpecification:editingContext:
    -databaseContext:willFireArrayFaultForGlobalID:relationship:withFetchSpecification:editingContext:
    -databaseContext:willOrderAdaptorOperationsFromDatabaseOperations:
    -databaseContext:willPerformAdaptorOperations:adaptorChannel:
    -databaseContext:willRunLoginPanelToOpenDatabaseChannel:

class EOAdaptorChannel = com.apple.yellow.eoaccess.EOAdaptorChannel
    -adaptorContext
    -addStoredProceduresNamed:toModel:
     -attributesToFetch
     -cancelFetch
     -closeChannel
    -delegate
    -deleteRowDescribedByQualifier:entity:
     -deleteRowsDescribedByQualifier:entity:
    -describeModelWithTableNames:
     -describeResults
    -describeStoredProcedureNames
    -describeTableNames
     -evaluateExpression:
     -executeStoredProcedure:withValues:
    constructor -initWithAdaptorContext:
     -insertRow:forEntity:
    -isDebugEnabled
     -isFetchInProgress
     -isOpen
    -lockRowComparingAttributes:entity:qualifier:snapshot:
     -openChannel
    -performAdaptorOperation:
    -performAdaptorOperations:
    -primaryKeyForNewRowWithEntity:
     -returnValuesForLastStoredProcedureInvocation
     -selectAttributes:fetchSpecification:lock:entity:
     -setAttributesToFetch:
    -setDebugEnabled:
    -setDelegate:
    -updateValues:inRowDescribedByQualifier:entity:
     -updateValues:inRowsDescribedByQualifier:entity:

    @{
        public static final String AdaptorOperationsKey = "EOAdaptorOperationsKey";
        public static final String FailedAdaptorOperationKey = "EOFailedAdaptorOperationKey";
        public static final String AdaptorFailureKey = "EOAdaptorFailureKey";
        public static final String AdaptorOptimisticLockingFailure = "EOAdaptorOptimisticLockingFailure";

        public native NSMutableDictionary dictionaryWithObjectsForAttributes(Object objects[], NSArray attributes);
        public native NSMutableDictionary fetchRow();
    @}

category NSObject(EOAdaptorChannelDelegation) = com.apple.yellow.eoaccess.EOAdaptorChannel.Delegate
    -adaptorChannel:didEvaluateExpression:
    -adaptorChannel:didExecuteStoredProcedure:withValues:
    -adaptorChannel:didFetchRow:
    -adaptorChannel:didPerformOperations:exception:
    -adaptorChannel:didSelectAttributes:fetchSpecification:lock:entity:
    -adaptorChannel:shouldEvaluateExpression:
    -adaptorChannel:shouldExecuteStoredProcedure:withValues:
    -adaptorChannel:shouldReturnValuesForStoredProcedure:
    -adaptorChannel:shouldSelectAttributes:fetchSpecification:lock:entity:
    -adaptorChannel:willPerformOperations:
    -adaptorChannelDidChangeResultSet:
    -adaptorChannelDidFinishFetching:
    -adaptorChannelShouldConstructStoredProcedureReturnValues:
    -adaptorChannelWillFetchRow:

class EOEntity = com.apple.yellow.eoaccess.EOEntity
    implements EOPropertyListEncoding
    -addAttribute:
    -addFetchSpecification:withName:
    -addRelationship:
    -addSharedObjectFetchSpecificationByName:
    -addSubEntity:
    -anyAttributeNamed:
    -anyRelationshipNamed:
    -attributeNamed:
    -attributes
    -attributesToFetch
    -attributesUsedForLocking
    -beautifyName
    -cachesObjects
    -classDescriptionForInstances
    -className
    -classProperties
    -classPropertyNames
    -externalModelsReferenced
    -externalName
    +externalNameForInternalName:separatorString:useAllCaps:
    -externalQuery
    -fetchSpecificationNames
    -fetchSpecificationNamed:
    -globalIDForRow:
    -isAbstractEntity
    -isPrimaryKeyValidInObject:
    -isQualifierForPrimaryKey:
    -isReadOnly
    -isValidAttributeUsedForLocking:
    -isValidClassProperty:
    -isValidPrimaryKeyAttribute:
    -maxNumberOfInstancesToBatchFetch
    -model
    -name
    +nameForExternalName:separatorString:initialCaps:
    -parentEntity
    -primaryKeyAttributeNames
    -primaryKeyAttributes
    -primaryKeyForGlobalID:
    -primaryKeyForRow:
    -primaryKeyRootName
    -qualifierForPrimaryKey:
    -referencesProperty:
    -relationshipNamed:
    -relationships
    -removeAttribute:
    -removeFetchSpecificationNamed:
    -removeRelationship:
    -removeSharedObjectFetchSpecificationByName:
    -removeSubEntity:
    -restrictingQualifier
    -schemaBasedQualifier:
    -sharedObjectFetchSpecificationNames
    -setAttributesUsedForLocking:
    -setCachesObjects:
    -setClassName:
    -setClassProperties:
    -setExternalName:
    -setExternalQuery:
    -setIsAbstractEntity:
    -setMaxNumberOfInstancesToBatchFetch:
    -setName:
    -setPrimaryKeyAttributes:
    -setReadOnly:
    -setRestrictingQualifier:
    -setSharedObjectFetchSpecificationsByName:
    -setStoredProcedure:forOperation:
    -setUserInfo:
    -storedProcedureForOperation:
    -subEntities
    -userInfo

    @{
        public static final String FetchAllProcedureOperation = "EOFetchAllProcedure";
        public static final String FetchWithPrimaryKeyProcedureOperation = "EOFetchWithPrimaryKeyProcedure";
        public static final String InsertProcedureOperation = "EOInsertProcedure";
        public static final String DeleteProcedureOperation = "EODeleteProcedure";
        public static final String NextPrimaryKeyProcedureOperation = "EONextPrimaryKeyProcedure";
        public native void validateName(String name) throws com.apple.yellow.eocontrol.EOValidation.Exception;
    @}

class EOLoginPanel =  com.apple.yellow.eoaccess.EOLoginPanel
     -runPanelForAdaptor:validate:allowsCreation:
    -administrativeConnectionDictionaryForAdaptor:

class EOUtilities = com.apple.yellow.eoaccess.EOUtilities
    +editingContext:objectsForEntityNamed:
    +editingContext:objectsOfClass:
    +editingContext:objectsWithEntityNamed:fetchSpecificationNamed:bindings:
    +editingContext:objectsForEntityNamed:qualifierFormat:args:
    +editingContext:objectsForEntityName:matchingKey:value:
    +editingContext:objectsForEntityName:matchingValues:
    +editingContext:objectWithEntityNamed:fetchSpecificationNamed:bindings:
    +editingContext:objectForEntityNamed:qualifierFormat:args:
    +editingContext:objectForEntityNamed:matchingKey:value:
    +editingContext:objectForEntityName:matchingValues:
    +editingContext:objectForEntityName:primaryKeyValue:
    +editingContext:objectForEntityName:primaryKey:
    +editingContext:rawRowsForEntityName:qualifierFormat:args:
    +editingContext:rawRowsForEntityName:matchingKey:value:
    +editingContext:rawRowsForEntityName:matchingValues:
    +editingContext:rawRowsForModelName:SQL:
    +editingContext:rawRowsForStoredProcedureNamed:arguments:
    +editingContext:executeStoredProcedureNamed:arguments:
    +editingContext:objectForEntityName:rawRow:
    +editingContext:databaseContextForModelNamed:
    +editingContext:connectWithModelNamed:connectionInfo:
    +editingContext:createAndInsertInstanceOfEntityNamed:
    +editingContext:primaryKeyForObject:
    +editingContext:destinationKeyForSourceObject:relationshipNamed:
    +editingContext:localInstanceOfObject:
    +editingContext:localInstancesOfObjects:
    +editingContextModelGroup:
    +editingContext:entityNamed:
    +editingContext:entityForClass:
    +editingContext:entityForObject:

class EOAutoMorphedObject = com.apple.yellow.eoaccess.EOAutoMorphedObject
    implements EOEnterpriseObject
    +accessInstanceVariablesDirectly
    +flushAllKeyBindings
    constructor -initWithEditingContext:classDescription:globalID:
    +useDeferredFaultCreation
    +useStoredAccessor
    @{
        public native void validateForSave() throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native void validateForUpdate() throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native void validateForInsert() throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native void validateForDelete() throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native Object validateValueForKey(Object value, String key) throws com.apple.yellow.eocontrol.EOValidation.Exception;
        public native Object validateTakeValueForKeyPath(Object value, String keyPath) throws com.apple.yellow.eocontrol.EOValidation.Exception;
    @}
