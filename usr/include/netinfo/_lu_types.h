/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef __LU_TYPES_H_RPCGEN
#define __LU_TYPES_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>

#define _LU_MAXLUSTRLEN 256
#define _LU_MAXGRP 1024
#define _LU_MAXHNAMES 32
#define _LU_MAXADDRS 32
#define _LU_MAXNNAMES 32
#define _LU_MAXPNAMES 32
#define _LU_MAXSNAMES 32
#define _LU_MAXRNAMES 32
#define _LU_MAXPRNAMES 32
#define _LU_MAXPRPROPS 1024
#define _LU_MAX_BOOTPARAMS_KV 32
#define _LU_MAXALIASMEMBERS 4096

typedef char *_lu_string;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_string(XDR *, _lu_string*);
#elif __STDC__
extern  bool_t xdr__lu_string(XDR *, _lu_string*);
#else /* Old Style C */
bool_t xdr__lu_string();
#endif /* Old Style C */


struct _lu_passwd {
	_lu_string pw_name;
	_lu_string pw_passwd;
	int pw_uid;
	int pw_gid;
	int pw_change;
	_lu_string pw_class;
	_lu_string pw_gecos;
	_lu_string pw_dir;
	_lu_string pw_shell;
	int pw_expire;
};
typedef struct _lu_passwd _lu_passwd;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_passwd(XDR *, _lu_passwd*);
#elif __STDC__
extern  bool_t xdr__lu_passwd(XDR *, _lu_passwd*);
#else /* Old Style C */
bool_t xdr__lu_passwd();
#endif /* Old Style C */


typedef _lu_passwd *_lu_passwd_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_passwd_ptr(XDR *, _lu_passwd_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_passwd_ptr(XDR *, _lu_passwd_ptr*);
#else /* Old Style C */
bool_t xdr__lu_passwd_ptr();
#endif /* Old Style C */


struct _lu_group {
	_lu_string gr_name;
	_lu_string gr_passwd;
	int gr_gid;
	struct {
		u_int gr_mem_len;
		_lu_string *gr_mem_val;
	} gr_mem;
};
typedef struct _lu_group _lu_group;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_group(XDR *, _lu_group*);
#elif __STDC__
extern  bool_t xdr__lu_group(XDR *, _lu_group*);
#else /* Old Style C */
bool_t xdr__lu_group();
#endif /* Old Style C */


typedef _lu_group *_lu_group_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_group_ptr(XDR *, _lu_group_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_group_ptr(XDR *, _lu_group_ptr*);
#else /* Old Style C */
bool_t xdr__lu_group_ptr();
#endif /* Old Style C */


struct _lu_hostent {
	struct {
		u_int h_names_len;
		_lu_string *h_names_val;
	} h_names;
	struct {
		u_int h_addrs_len;
		u_long *h_addrs_val;
	} h_addrs;
};
typedef struct _lu_hostent _lu_hostent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_hostent(XDR *, _lu_hostent*);
#elif __STDC__
extern  bool_t xdr__lu_hostent(XDR *, _lu_hostent*);
#else /* Old Style C */
bool_t xdr__lu_hostent();
#endif /* Old Style C */


typedef _lu_hostent *_lu_hostent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_hostent_ptr(XDR *, _lu_hostent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_hostent_ptr(XDR *, _lu_hostent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_hostent_ptr();
#endif /* Old Style C */


struct _lu_netent {
	struct {
		u_int n_names_len;
		_lu_string *n_names_val;
	} n_names;
	u_long n_net;
};
typedef struct _lu_netent _lu_netent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_netent(XDR *, _lu_netent*);
#elif __STDC__
extern  bool_t xdr__lu_netent(XDR *, _lu_netent*);
#else /* Old Style C */
bool_t xdr__lu_netent();
#endif /* Old Style C */


typedef _lu_netent *_lu_netent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_netent_ptr(XDR *, _lu_netent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_netent_ptr(XDR *, _lu_netent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_netent_ptr();
#endif /* Old Style C */


struct _lu_servent {
	struct {
		u_int s_names_len;
		_lu_string *s_names_val;
	} s_names;
	int s_port;
	_lu_string s_proto;
};
typedef struct _lu_servent _lu_servent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_servent(XDR *, _lu_servent*);
#elif __STDC__
extern  bool_t xdr__lu_servent(XDR *, _lu_servent*);
#else /* Old Style C */
bool_t xdr__lu_servent();
#endif /* Old Style C */


typedef _lu_servent *_lu_servent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_servent_ptr(XDR *, _lu_servent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_servent_ptr(XDR *, _lu_servent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_servent_ptr();
#endif /* Old Style C */


struct _lu_protoent {
	struct {
		u_int p_names_len;
		_lu_string *p_names_val;
	} p_names;
	int p_proto;
};
typedef struct _lu_protoent _lu_protoent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_protoent(XDR *, _lu_protoent*);
#elif __STDC__
extern  bool_t xdr__lu_protoent(XDR *, _lu_protoent*);
#else /* Old Style C */
bool_t xdr__lu_protoent();
#endif /* Old Style C */


typedef _lu_protoent *_lu_protoent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_protoent_ptr(XDR *, _lu_protoent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_protoent_ptr(XDR *, _lu_protoent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_protoent_ptr();
#endif /* Old Style C */


struct _lu_rpcent {
	struct {
		u_int r_names_len;
		_lu_string *r_names_val;
	} r_names;
	int r_number;
};
typedef struct _lu_rpcent _lu_rpcent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_rpcent(XDR *, _lu_rpcent*);
#elif __STDC__
extern  bool_t xdr__lu_rpcent(XDR *, _lu_rpcent*);
#else /* Old Style C */
bool_t xdr__lu_rpcent();
#endif /* Old Style C */


typedef _lu_rpcent *_lu_rpcent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_rpcent_ptr(XDR *, _lu_rpcent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_rpcent_ptr(XDR *, _lu_rpcent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_rpcent_ptr();
#endif /* Old Style C */


struct _lu_fsent {
	_lu_string fs_spec;
	_lu_string fs_file;
	_lu_string fs_vfstype;
	_lu_string fs_mntops;
	_lu_string fs_type;
	int fs_freq;
	int fs_passno;
};
typedef struct _lu_fsent _lu_fsent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_fsent(XDR *, _lu_fsent*);
#elif __STDC__
extern  bool_t xdr__lu_fsent(XDR *, _lu_fsent*);
#else /* Old Style C */
bool_t xdr__lu_fsent();
#endif /* Old Style C */


typedef _lu_fsent *_lu_fsent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_fsent_ptr(XDR *, _lu_fsent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_fsent_ptr(XDR *, _lu_fsent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_fsent_ptr();
#endif /* Old Style C */


struct _lu_prdb_property {
	_lu_string pp_key;
	_lu_string pp_value;
};
typedef struct _lu_prdb_property _lu_prdb_property;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_prdb_property(XDR *, _lu_prdb_property*);
#elif __STDC__
extern  bool_t xdr__lu_prdb_property(XDR *, _lu_prdb_property*);
#else /* Old Style C */
bool_t xdr__lu_prdb_property();
#endif /* Old Style C */


struct _lu_prdb_ent {
	struct {
		u_int pe_names_len;
		_lu_string *pe_names_val;
	} pe_names;
	struct {
		u_int pe_props_len;
		_lu_prdb_property *pe_props_val;
	} pe_props;
};
typedef struct _lu_prdb_ent _lu_prdb_ent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_prdb_ent(XDR *, _lu_prdb_ent*);
#elif __STDC__
extern  bool_t xdr__lu_prdb_ent(XDR *, _lu_prdb_ent*);
#else /* Old Style C */
bool_t xdr__lu_prdb_ent();
#endif /* Old Style C */


typedef _lu_prdb_ent *_lu_prdb_ent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_prdb_ent_ptr(XDR *, _lu_prdb_ent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_prdb_ent_ptr(XDR *, _lu_prdb_ent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_prdb_ent_ptr();
#endif /* Old Style C */


struct _lu_bootp_ent {
	_lu_string bootp_name;
	_lu_string bootp_bootfile;
	u_long bootp_ipaddr;
	char bootp_enaddr[6];
};
typedef struct _lu_bootp_ent _lu_bootp_ent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_bootp_ent(XDR *, _lu_bootp_ent*);
#elif __STDC__
extern  bool_t xdr__lu_bootp_ent(XDR *, _lu_bootp_ent*);
#else /* Old Style C */
bool_t xdr__lu_bootp_ent();
#endif /* Old Style C */


typedef _lu_bootp_ent *_lu_bootp_ent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_bootp_ent_ptr(XDR *, _lu_bootp_ent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_bootp_ent_ptr(XDR *, _lu_bootp_ent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_bootp_ent_ptr();
#endif /* Old Style C */


struct _lu_bootparams_ent {
	_lu_string bootparams_name;
	struct {
		u_int bootparams_keyvalues_len;
		_lu_string *bootparams_keyvalues_val;
	} bootparams_keyvalues;
};
typedef struct _lu_bootparams_ent _lu_bootparams_ent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_bootparams_ent(XDR *, _lu_bootparams_ent*);
#elif __STDC__
extern  bool_t xdr__lu_bootparams_ent(XDR *, _lu_bootparams_ent*);
#else /* Old Style C */
bool_t xdr__lu_bootparams_ent();
#endif /* Old Style C */


typedef _lu_bootparams_ent *_lu_bootparams_ent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_bootparams_ent_ptr(XDR *, _lu_bootparams_ent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_bootparams_ent_ptr(XDR *, _lu_bootparams_ent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_bootparams_ent_ptr();
#endif /* Old Style C */


struct _lu_aliasent {
	_lu_string alias_name;
	struct {
		u_int alias_members_len;
		_lu_string *alias_members_val;
	} alias_members;
	int alias_local;
};
typedef struct _lu_aliasent _lu_aliasent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_aliasent(XDR *, _lu_aliasent*);
#elif __STDC__
extern  bool_t xdr__lu_aliasent(XDR *, _lu_aliasent*);
#else /* Old Style C */
bool_t xdr__lu_aliasent();
#endif /* Old Style C */


typedef _lu_aliasent *_lu_aliasent_ptr;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_aliasent_ptr(XDR *, _lu_aliasent_ptr*);
#elif __STDC__
extern  bool_t xdr__lu_aliasent_ptr(XDR *, _lu_aliasent_ptr*);
#else /* Old Style C */
bool_t xdr__lu_aliasent_ptr();
#endif /* Old Style C */


struct _lu_innetgr_args {
	_lu_string group;
	_lu_string *host;
	_lu_string *user;
	_lu_string *domain;
};
typedef struct _lu_innetgr_args _lu_innetgr_args;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_innetgr_args(XDR *, _lu_innetgr_args*);
#elif __STDC__
extern  bool_t xdr__lu_innetgr_args(XDR *, _lu_innetgr_args*);
#else /* Old Style C */
bool_t xdr__lu_innetgr_args();
#endif /* Old Style C */


struct _lu_netgrent {
	_lu_string ng_host;
	_lu_string ng_user;
	_lu_string ng_domain;
};
typedef struct _lu_netgrent _lu_netgrent;
#ifdef __cplusplus
extern "C" bool_t xdr__lu_netgrent(XDR *, _lu_netgrent*);
#elif __STDC__
extern  bool_t xdr__lu_netgrent(XDR *, _lu_netgrent*);
#else /* Old Style C */
bool_t xdr__lu_netgrent();
#endif /* Old Style C */


#endif /* !__LU_TYPES_H_RPCGEN */
