/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _NI_PROT_H_RPCGEN
#define _NI_PROT_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>

/*
 * Output of the RPC protocol compiler: DO NOT EDIT
 * Copyright (C) 1989 by NeXT, Inc.
 */
#define NI_NAME_MAXLEN 65535
#define NI_NAMELIST_MAXLEN 65535
#define NI_PROPLIST_MAXLEN 65535
#define NI_IDLIST_MAXLEN 1048576
typedef unsigned long ni_index;

struct ni_id {
	u_long nii_object;
	u_long nii_instance;
};
typedef struct ni_id ni_id;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_id(XDR *, ni_id*);
#elif __STDC__
extern  bool_t xdr_ni_id(XDR *, ni_id*);
#else /* Old Style C */
bool_t xdr_ni_id();
#endif /* Old Style C */


typedef char *ni_name;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_name(XDR *, ni_name*);
#elif __STDC__
extern  bool_t xdr_ni_name(XDR *, ni_name*);
#else /* Old Style C */
bool_t xdr_ni_name();
#endif /* Old Style C */


typedef struct {
	u_int ni_namelist_len;
	ni_name *ni_namelist_val;
} ni_namelist;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_namelist(XDR *, ni_namelist*);
#elif __STDC__
extern  bool_t xdr_ni_namelist(XDR *, ni_namelist*);
#else /* Old Style C */
bool_t xdr_ni_namelist();
#endif /* Old Style C */


struct ni_property {
	ni_name nip_name;
	ni_namelist nip_val;
};
typedef struct ni_property ni_property;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_property(XDR *, ni_property*);
#elif __STDC__
extern  bool_t xdr_ni_property(XDR *, ni_property*);
#else /* Old Style C */
bool_t xdr_ni_property();
#endif /* Old Style C */


typedef struct {
	u_int ni_proplist_len;
	ni_property *ni_proplist_val;
} ni_proplist;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_proplist(XDR *, ni_proplist*);
#elif __STDC__
extern  bool_t xdr_ni_proplist(XDR *, ni_proplist*);
#else /* Old Style C */
bool_t xdr_ni_proplist();
#endif /* Old Style C */


typedef struct {
	u_int ni_idlist_len;
	u_long *ni_idlist_val;
} ni_idlist;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_idlist(XDR *, ni_idlist*);
#elif __STDC__
extern  bool_t xdr_ni_idlist(XDR *, ni_idlist*);
#else /* Old Style C */
bool_t xdr_ni_idlist();
#endif /* Old Style C */


struct ni_object {
	ni_id nio_id;
	ni_proplist nio_props;
	u_long nio_parent;
	ni_idlist nio_children;
};
typedef struct ni_object ni_object;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_object(XDR *, ni_object*);
#elif __STDC__
extern  bool_t xdr_ni_object(XDR *, ni_object*);
#else /* Old Style C */
bool_t xdr_ni_object();
#endif /* Old Style C */


enum ni_status {
	NI_OK = 0,
	NI_BADID = 1,
	NI_STALE = 2,
	NI_NOSPACE = 3,
	NI_PERM = 4,
	NI_NODIR = 5,
	NI_NOPROP = 6,
	NI_NONAME = 7,
	NI_NOTEMPTY = 8,
	NI_UNRELATED = 9,
	NI_SERIAL = 10,
	NI_NETROOT = 11,
	NI_NORESPONSE = 12,
	NI_RDONLY = 13,
	NI_SYSTEMERR = 14,
	NI_ALIVE = 15,
	NI_NOTMASTER = 16,
	NI_CANTFINDADDRESS = 17,
	NI_DUPTAG = 18,
	NI_NOTAG = 19,
	NI_AUTHERROR = 20,
	NI_NOUSER = 21,
	NI_MASTERBUSY = 22,
	NI_INVALIDDOMAIN = 23,
	NI_BADOP = 24,
	NI_FAILED = 9999,
};
typedef enum ni_status ni_status;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_status(XDR *, ni_status*);
#elif __STDC__
extern  bool_t xdr_ni_status(XDR *, ni_status*);
#else /* Old Style C */
bool_t xdr_ni_status();
#endif /* Old Style C */


struct ni_id_res {
	ni_status status;
	union {
		ni_id id;
	} ni_id_res_u;
};
typedef struct ni_id_res ni_id_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_id_res(XDR *, ni_id_res*);
#elif __STDC__
extern  bool_t xdr_ni_id_res(XDR *, ni_id_res*);
#else /* Old Style C */
bool_t xdr_ni_id_res();
#endif /* Old Style C */


struct ni_parent_stuff {
	u_long object_id;
	ni_id self_id;
};
typedef struct ni_parent_stuff ni_parent_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_parent_stuff(XDR *, ni_parent_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_parent_stuff(XDR *, ni_parent_stuff*);
#else /* Old Style C */
bool_t xdr_ni_parent_stuff();
#endif /* Old Style C */


struct ni_parent_res {
	ni_status status;
	union {
		struct ni_parent_stuff stuff;
	} ni_parent_res_u;
};
typedef struct ni_parent_res ni_parent_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_parent_res(XDR *, ni_parent_res*);
#elif __STDC__
extern  bool_t xdr_ni_parent_res(XDR *, ni_parent_res*);
#else /* Old Style C */
bool_t xdr_ni_parent_res();
#endif /* Old Style C */


struct ni_children_stuff {
	ni_idlist children;
	ni_id self_id;
};
typedef struct ni_children_stuff ni_children_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_children_stuff(XDR *, ni_children_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_children_stuff(XDR *, ni_children_stuff*);
#else /* Old Style C */
bool_t xdr_ni_children_stuff();
#endif /* Old Style C */


struct ni_children_res {
	ni_status status;
	union {
		ni_children_stuff stuff;
	} ni_children_res_u;
};
typedef struct ni_children_res ni_children_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_children_res(XDR *, ni_children_res*);
#elif __STDC__
extern  bool_t xdr_ni_children_res(XDR *, ni_children_res*);
#else /* Old Style C */
bool_t xdr_ni_children_res();
#endif /* Old Style C */


struct ni_entry {
	u_long id;
	ni_namelist *names;
};
typedef struct ni_entry ni_entry;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_entry(XDR *, ni_entry*);
#elif __STDC__
extern  bool_t xdr_ni_entry(XDR *, ni_entry*);
#else /* Old Style C */
bool_t xdr_ni_entry();
#endif /* Old Style C */


typedef struct {
	u_int ni_entrylist_len;
	ni_entry *ni_entrylist_val;
} ni_entrylist;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_entrylist(XDR *, ni_entrylist*);
#elif __STDC__
extern  bool_t xdr_ni_entrylist(XDR *, ni_entrylist*);
#else /* Old Style C */
bool_t xdr_ni_entrylist();
#endif /* Old Style C */


struct ni_list_stuff {
	ni_entrylist entries;
	ni_id self_id;
};
typedef struct ni_list_stuff ni_list_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_list_stuff(XDR *, ni_list_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_list_stuff(XDR *, ni_list_stuff*);
#else /* Old Style C */
bool_t xdr_ni_list_stuff();
#endif /* Old Style C */


struct ni_list_res {
	ni_status status;
	union {
		ni_list_stuff stuff;
	} ni_list_res_u;
};
typedef struct ni_list_res ni_list_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_list_res(XDR *, ni_list_res*);
#elif __STDC__
extern  bool_t xdr_ni_list_res(XDR *, ni_list_res*);
#else /* Old Style C */
bool_t xdr_ni_list_res();
#endif /* Old Style C */


struct ni_proplist_stuff {
	ni_id id;
	ni_proplist props;
};
typedef struct ni_proplist_stuff ni_proplist_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_proplist_stuff(XDR *, ni_proplist_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_proplist_stuff(XDR *, ni_proplist_stuff*);
#else /* Old Style C */
bool_t xdr_ni_proplist_stuff();
#endif /* Old Style C */


struct ni_create_args {
	ni_id id;
	ni_proplist props;
	u_long where;
	ni_id *target_id;
};
typedef struct ni_create_args ni_create_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_create_args(XDR *, ni_create_args*);
#elif __STDC__
extern  bool_t xdr_ni_create_args(XDR *, ni_create_args*);
#else /* Old Style C */
bool_t xdr_ni_create_args();
#endif /* Old Style C */


struct ni_proplist_res {
	ni_status status;
	union {
		ni_proplist_stuff stuff;
	} ni_proplist_res_u;
};
typedef struct ni_proplist_res ni_proplist_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_proplist_res(XDR *, ni_proplist_res*);
#elif __STDC__
extern  bool_t xdr_ni_proplist_res(XDR *, ni_proplist_res*);
#else /* Old Style C */
bool_t xdr_ni_proplist_res();
#endif /* Old Style C */


struct ni_create_stuff {
	ni_id id;
	ni_id self_id;
};
typedef struct ni_create_stuff ni_create_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_create_stuff(XDR *, ni_create_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_create_stuff(XDR *, ni_create_stuff*);
#else /* Old Style C */
bool_t xdr_ni_create_stuff();
#endif /* Old Style C */


struct ni_create_res {
	ni_status status;
	union {
		ni_create_stuff stuff;
	} ni_create_res_u;
};
typedef struct ni_create_res ni_create_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_create_res(XDR *, ni_create_res*);
#elif __STDC__
extern  bool_t xdr_ni_create_res(XDR *, ni_create_res*);
#else /* Old Style C */
bool_t xdr_ni_create_res();
#endif /* Old Style C */


struct ni_destroy_args {
	ni_id parent_id;
	ni_id self_id;
};
typedef struct ni_destroy_args ni_destroy_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_destroy_args(XDR *, ni_destroy_args*);
#elif __STDC__
extern  bool_t xdr_ni_destroy_args(XDR *, ni_destroy_args*);
#else /* Old Style C */
bool_t xdr_ni_destroy_args();
#endif /* Old Style C */


struct ni_lookup_args {
	ni_id id;
	ni_name key;
	ni_name value;
};
typedef struct ni_lookup_args ni_lookup_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_lookup_args(XDR *, ni_lookup_args*);
#elif __STDC__
extern  bool_t xdr_ni_lookup_args(XDR *, ni_lookup_args*);
#else /* Old Style C */
bool_t xdr_ni_lookup_args();
#endif /* Old Style C */


struct ni_lookup_stuff {
	ni_idlist idlist;
	ni_id self_id;
};
typedef struct ni_lookup_stuff ni_lookup_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_lookup_stuff(XDR *, ni_lookup_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_lookup_stuff(XDR *, ni_lookup_stuff*);
#else /* Old Style C */
bool_t xdr_ni_lookup_stuff();
#endif /* Old Style C */


struct ni_lookup_res {
	ni_status status;
	union {
		ni_lookup_stuff stuff;
	} ni_lookup_res_u;
};
typedef struct ni_lookup_res ni_lookup_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_lookup_res(XDR *, ni_lookup_res*);
#elif __STDC__
extern  bool_t xdr_ni_lookup_res(XDR *, ni_lookup_res*);
#else /* Old Style C */
bool_t xdr_ni_lookup_res();
#endif /* Old Style C */


struct ni_name_args {
	ni_id id;
	ni_name name;
};
typedef struct ni_name_args ni_name_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_name_args(XDR *, ni_name_args*);
#elif __STDC__
extern  bool_t xdr_ni_name_args(XDR *, ni_name_args*);
#else /* Old Style C */
bool_t xdr_ni_name_args();
#endif /* Old Style C */


struct ni_createprop_args {
	ni_id id;
	ni_property prop;
	u_long where;
};
typedef struct ni_createprop_args ni_createprop_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_createprop_args(XDR *, ni_createprop_args*);
#elif __STDC__
extern  bool_t xdr_ni_createprop_args(XDR *, ni_createprop_args*);
#else /* Old Style C */
bool_t xdr_ni_createprop_args();
#endif /* Old Style C */


struct ni_writeprop_args {
	ni_id id;
	u_long prop_index;
	ni_namelist values;
};
typedef struct ni_writeprop_args ni_writeprop_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_writeprop_args(XDR *, ni_writeprop_args*);
#elif __STDC__
extern  bool_t xdr_ni_writeprop_args(XDR *, ni_writeprop_args*);
#else /* Old Style C */
bool_t xdr_ni_writeprop_args();
#endif /* Old Style C */


struct ni_prop_args {
	ni_id id;
	u_long prop_index;
};
typedef struct ni_prop_args ni_prop_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_prop_args(XDR *, ni_prop_args*);
#elif __STDC__
extern  bool_t xdr_ni_prop_args(XDR *, ni_prop_args*);
#else /* Old Style C */
bool_t xdr_ni_prop_args();
#endif /* Old Style C */


struct ni_namelist_stuff {
	ni_namelist values;
	ni_id self_id;
};
typedef struct ni_namelist_stuff ni_namelist_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_namelist_stuff(XDR *, ni_namelist_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_namelist_stuff(XDR *, ni_namelist_stuff*);
#else /* Old Style C */
bool_t xdr_ni_namelist_stuff();
#endif /* Old Style C */


struct ni_namelist_res {
	ni_status status;
	union {
		ni_namelist_stuff stuff;
	} ni_namelist_res_u;
};
typedef struct ni_namelist_res ni_namelist_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_namelist_res(XDR *, ni_namelist_res*);
#elif __STDC__
extern  bool_t xdr_ni_namelist_res(XDR *, ni_namelist_res*);
#else /* Old Style C */
bool_t xdr_ni_namelist_res();
#endif /* Old Style C */


struct ni_propname_args {
	ni_id id;
	u_long prop_index;
	ni_name name;
};
typedef struct ni_propname_args ni_propname_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_propname_args(XDR *, ni_propname_args*);
#elif __STDC__
extern  bool_t xdr_ni_propname_args(XDR *, ni_propname_args*);
#else /* Old Style C */
bool_t xdr_ni_propname_args();
#endif /* Old Style C */


struct ni_createname_args {
	ni_id id;
	u_long prop_index;
	ni_name name;
	u_long where;
};
typedef struct ni_createname_args ni_createname_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_createname_args(XDR *, ni_createname_args*);
#elif __STDC__
extern  bool_t xdr_ni_createname_args(XDR *, ni_createname_args*);
#else /* Old Style C */
bool_t xdr_ni_createname_args();
#endif /* Old Style C */


struct ni_nameindex_args {
	ni_id id;
	u_long prop_index;
	u_long name_index;
};
typedef struct ni_nameindex_args ni_nameindex_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_nameindex_args(XDR *, ni_nameindex_args*);
#elif __STDC__
extern  bool_t xdr_ni_nameindex_args(XDR *, ni_nameindex_args*);
#else /* Old Style C */
bool_t xdr_ni_nameindex_args();
#endif /* Old Style C */


struct ni_writename_args {
	ni_id id;
	u_long prop_index;
	u_long name_index;
	ni_name name;
};
typedef struct ni_writename_args ni_writename_args;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_writename_args(XDR *, ni_writename_args*);
#elif __STDC__
extern  bool_t xdr_ni_writename_args(XDR *, ni_writename_args*);
#else /* Old Style C */
bool_t xdr_ni_writename_args();
#endif /* Old Style C */


struct ni_readname_stuff {
	ni_id id;
	ni_name name;
};
typedef struct ni_readname_stuff ni_readname_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_readname_stuff(XDR *, ni_readname_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_readname_stuff(XDR *, ni_readname_stuff*);
#else /* Old Style C */
bool_t xdr_ni_readname_stuff();
#endif /* Old Style C */


struct ni_readname_res {
	ni_status status;
	union {
		ni_readname_stuff stuff;
	} ni_readname_res_u;
};
typedef struct ni_readname_res ni_readname_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_readname_res(XDR *, ni_readname_res*);
#elif __STDC__
extern  bool_t xdr_ni_readname_res(XDR *, ni_readname_res*);
#else /* Old Style C */
bool_t xdr_ni_readname_res();
#endif /* Old Style C */


struct ni_binding {
	ni_name tag;
	u_int addr;
};
typedef struct ni_binding ni_binding;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_binding(XDR *, ni_binding*);
#elif __STDC__
extern  bool_t xdr_ni_binding(XDR *, ni_binding*);
#else /* Old Style C */
bool_t xdr_ni_binding();
#endif /* Old Style C */


struct ni_rparent_res {
	ni_status status;
	union {
		ni_binding binding;
	} ni_rparent_res_u;
};
typedef struct ni_rparent_res ni_rparent_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_rparent_res(XDR *, ni_rparent_res*);
#elif __STDC__
extern  bool_t xdr_ni_rparent_res(XDR *, ni_rparent_res*);
#else /* Old Style C */
bool_t xdr_ni_rparent_res();
#endif /* Old Style C */


typedef struct ni_object_node *ni_object_list;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_object_list(XDR *, ni_object_list*);
#elif __STDC__
extern  bool_t xdr_ni_object_list(XDR *, ni_object_list*);
#else /* Old Style C */
bool_t xdr_ni_object_list();
#endif /* Old Style C */


struct ni_object_node {
	ni_object object;
	ni_object_list next;
};
typedef struct ni_object_node ni_object_node;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_object_node(XDR *, ni_object_node*);
#elif __STDC__
extern  bool_t xdr_ni_object_node(XDR *, ni_object_node*);
#else /* Old Style C */
bool_t xdr_ni_object_node();
#endif /* Old Style C */


struct ni_readall_stuff {
	u_int checksum;
	u_long highestid;
	ni_object_list list;
};
typedef struct ni_readall_stuff ni_readall_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_readall_stuff(XDR *, ni_readall_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_readall_stuff(XDR *, ni_readall_stuff*);
#else /* Old Style C */
bool_t xdr_ni_readall_stuff();
#endif /* Old Style C */


struct ni_readall_res {
	ni_status status;
	union {
		ni_readall_stuff stuff;
	} ni_readall_res_u;
};
typedef struct ni_readall_res ni_readall_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_readall_res(XDR *, ni_readall_res*);
#elif __STDC__
extern  bool_t xdr_ni_readall_res(XDR *, ni_readall_res*);
#else /* Old Style C */
bool_t xdr_ni_readall_res();
#endif /* Old Style C */


typedef struct {
	u_int ni_proplist_list_len;
	ni_proplist *ni_proplist_list_val;
} ni_proplist_list;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_proplist_list(XDR *, ni_proplist_list*);
#elif __STDC__
extern  bool_t xdr_ni_proplist_list(XDR *, ni_proplist_list*);
#else /* Old Style C */
bool_t xdr_ni_proplist_list();
#endif /* Old Style C */


struct ni_listall_stuff {
	ni_id self_id;
	ni_proplist_list entries;
};
typedef struct ni_listall_stuff ni_listall_stuff;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_listall_stuff(XDR *, ni_listall_stuff*);
#elif __STDC__
extern  bool_t xdr_ni_listall_stuff(XDR *, ni_listall_stuff*);
#else /* Old Style C */
bool_t xdr_ni_listall_stuff();
#endif /* Old Style C */


struct ni_listall_res {
	ni_status status;
	union {
		ni_listall_stuff stuff;
	} ni_listall_res_u;
};
typedef struct ni_listall_res ni_listall_res;
#ifdef __cplusplus
extern "C" bool_t xdr_ni_listall_res(XDR *, ni_listall_res*);
#elif __STDC__
extern  bool_t xdr_ni_listall_res(XDR *, ni_listall_res*);
#else /* Old Style C */
bool_t xdr_ni_listall_res();
#endif /* Old Style C */


#define NI_PROG ((u_long)200100000)
#define NI_VERS ((u_long)2)

#ifdef __cplusplus
#define _NI_PING ((u_long)0)
extern "C" void * _ni_ping_2(void *, CLIENT *);
extern "C" void * _ni_ping_2_svc(void *, struct svc_req *);
#define _NI_STATISTICS ((u_long)1)
extern "C" ni_proplist * _ni_statistics_2(void *, CLIENT *);
extern "C" ni_proplist * _ni_statistics_2_svc(void *, struct svc_req *);
#define _NI_ROOT ((u_long)2)
extern "C" ni_id_res * _ni_root_2(void *, CLIENT *);
extern "C" ni_id_res * _ni_root_2_svc(void *, struct svc_req *);
#define _NI_SELF ((u_long)3)
extern "C" ni_id_res * _ni_self_2(ni_id *, CLIENT *);
extern "C" ni_id_res * _ni_self_2_svc(ni_id *, struct svc_req *);
#define _NI_PARENT ((u_long)4)
extern "C" ni_parent_res * _ni_parent_2(ni_id *, CLIENT *);
extern "C" ni_parent_res * _ni_parent_2_svc(ni_id *, struct svc_req *);
#define _NI_CREATE ((u_long)5)
extern "C" ni_create_res * _ni_create_2(ni_create_args *, CLIENT *);
extern "C" ni_create_res * _ni_create_2_svc(ni_create_args *, struct svc_req *);
#define _NI_DESTROY ((u_long)6)
extern "C" ni_id_res * _ni_destroy_2(ni_destroy_args *, CLIENT *);
extern "C" ni_id_res * _ni_destroy_2_svc(ni_destroy_args *, struct svc_req *);
#define _NI_READ ((u_long)7)
extern "C" ni_proplist_res * _ni_read_2(ni_id *, CLIENT *);
extern "C" ni_proplist_res * _ni_read_2_svc(ni_id *, struct svc_req *);
#define _NI_WRITE ((u_long)8)
extern "C" ni_id_res * _ni_write_2(ni_proplist_stuff *, CLIENT *);
extern "C" ni_id_res * _ni_write_2_svc(ni_proplist_stuff *, struct svc_req *);
#define _NI_CHILDREN ((u_long)9)
extern "C" ni_children_res * _ni_children_2(ni_id *, CLIENT *);
extern "C" ni_children_res * _ni_children_2_svc(ni_id *, struct svc_req *);
#define _NI_LOOKUP ((u_long)10)
extern "C" ni_lookup_res * _ni_lookup_2(ni_lookup_args *, CLIENT *);
extern "C" ni_lookup_res * _ni_lookup_2_svc(ni_lookup_args *, struct svc_req *);
#define _NI_LIST ((u_long)11)
extern "C" ni_list_res * _ni_list_2(ni_name_args *, CLIENT *);
extern "C" ni_list_res * _ni_list_2_svc(ni_name_args *, struct svc_req *);
#define _NI_CREATEPROP ((u_long)12)
extern "C" ni_id_res * _ni_createprop_2(ni_createprop_args *, CLIENT *);
extern "C" ni_id_res * _ni_createprop_2_svc(ni_createprop_args *, struct svc_req *);
#define _NI_DESTROYPROP ((u_long)13)
extern "C" ni_id_res * _ni_destroyprop_2(ni_prop_args *, CLIENT *);
extern "C" ni_id_res * _ni_destroyprop_2_svc(ni_prop_args *, struct svc_req *);
#define _NI_READPROP ((u_long)14)
extern "C" ni_namelist_res * _ni_readprop_2(ni_prop_args *, CLIENT *);
extern "C" ni_namelist_res * _ni_readprop_2_svc(ni_prop_args *, struct svc_req *);
#define _NI_WRITEPROP ((u_long)15)
extern "C" ni_id_res * _ni_writeprop_2(ni_writeprop_args *, CLIENT *);
extern "C" ni_id_res * _ni_writeprop_2_svc(ni_writeprop_args *, struct svc_req *);
#define _NI_RENAMEPROP ((u_long)16)
extern "C" ni_id_res * _ni_renameprop_2(ni_propname_args *, CLIENT *);
extern "C" ni_id_res * _ni_renameprop_2_svc(ni_propname_args *, struct svc_req *);
#define _NI_LISTPROPS ((u_long)17)
extern "C" ni_namelist_res * _ni_listprops_2(ni_id *, CLIENT *);
extern "C" ni_namelist_res * _ni_listprops_2_svc(ni_id *, struct svc_req *);
#define _NI_CREATENAME ((u_long)18)
extern "C" ni_id_res * _ni_createname_2(ni_createname_args *, CLIENT *);
extern "C" ni_id_res * _ni_createname_2_svc(ni_createname_args *, struct svc_req *);
#define _NI_DESTROYNAME ((u_long)19)
extern "C" ni_id_res * _ni_destroyname_2(ni_nameindex_args *, CLIENT *);
extern "C" ni_id_res * _ni_destroyname_2_svc(ni_nameindex_args *, struct svc_req *);
#define _NI_READNAME ((u_long)20)
extern "C" ni_readname_res * _ni_readname_2(ni_nameindex_args *, CLIENT *);
extern "C" ni_readname_res * _ni_readname_2_svc(ni_nameindex_args *, struct svc_req *);
#define _NI_WRITENAME ((u_long)21)
extern "C" ni_id_res * _ni_writename_2(ni_writename_args *, CLIENT *);
extern "C" ni_id_res * _ni_writename_2_svc(ni_writename_args *, struct svc_req *);
#define _NI_RPARENT ((u_long)22)
extern "C" ni_rparent_res * _ni_rparent_2(void *, CLIENT *);
extern "C" ni_rparent_res * _ni_rparent_2_svc(void *, struct svc_req *);
#define _NI_LISTALL ((u_long)23)
extern "C" ni_listall_res * _ni_listall_2(ni_id *, CLIENT *);
extern "C" ni_listall_res * _ni_listall_2_svc(ni_id *, struct svc_req *);
#define _NI_BIND ((u_long)24)
extern "C" void * _ni_bind_2(ni_binding *, CLIENT *);
extern "C" void * _ni_bind_2_svc(ni_binding *, struct svc_req *);
#define _NI_READALL ((u_long)25)
extern "C" ni_readall_res * _ni_readall_2(u_int *, CLIENT *);
extern "C" ni_readall_res * _ni_readall_2_svc(u_int *, struct svc_req *);
#define _NI_CRASHED ((u_long)26)
extern "C" void * _ni_crashed_2(u_int *, CLIENT *);
extern "C" void * _ni_crashed_2_svc(u_int *, struct svc_req *);
#define _NI_RESYNC ((u_long)27)
extern "C" ni_status * _ni_resync_2(void *, CLIENT *);
extern "C" ni_status * _ni_resync_2_svc(void *, struct svc_req *);
#define _NI_LOOKUPREAD ((u_long)28)
extern "C" ni_proplist_res * _ni_lookupread_2(ni_lookup_args *, CLIENT *);
extern "C" ni_proplist_res * _ni_lookupread_2_svc(ni_lookup_args *, struct svc_req *);

#elif __STDC__
#define _NI_PING ((u_long)0)
extern  void * _ni_ping_2(void *, CLIENT *);
extern  void * _ni_ping_2_svc(void *, struct svc_req *);
#define _NI_STATISTICS ((u_long)1)
extern  ni_proplist * _ni_statistics_2(void *, CLIENT *);
extern  ni_proplist * _ni_statistics_2_svc(void *, struct svc_req *);
#define _NI_ROOT ((u_long)2)
extern  ni_id_res * _ni_root_2(void *, CLIENT *);
extern  ni_id_res * _ni_root_2_svc(void *, struct svc_req *);
#define _NI_SELF ((u_long)3)
extern  ni_id_res * _ni_self_2(ni_id *, CLIENT *);
extern  ni_id_res * _ni_self_2_svc(ni_id *, struct svc_req *);
#define _NI_PARENT ((u_long)4)
extern  ni_parent_res * _ni_parent_2(ni_id *, CLIENT *);
extern  ni_parent_res * _ni_parent_2_svc(ni_id *, struct svc_req *);
#define _NI_CREATE ((u_long)5)
extern  ni_create_res * _ni_create_2(ni_create_args *, CLIENT *);
extern  ni_create_res * _ni_create_2_svc(ni_create_args *, struct svc_req *);
#define _NI_DESTROY ((u_long)6)
extern  ni_id_res * _ni_destroy_2(ni_destroy_args *, CLIENT *);
extern  ni_id_res * _ni_destroy_2_svc(ni_destroy_args *, struct svc_req *);
#define _NI_READ ((u_long)7)
extern  ni_proplist_res * _ni_read_2(ni_id *, CLIENT *);
extern  ni_proplist_res * _ni_read_2_svc(ni_id *, struct svc_req *);
#define _NI_WRITE ((u_long)8)
extern  ni_id_res * _ni_write_2(ni_proplist_stuff *, CLIENT *);
extern  ni_id_res * _ni_write_2_svc(ni_proplist_stuff *, struct svc_req *);
#define _NI_CHILDREN ((u_long)9)
extern  ni_children_res * _ni_children_2(ni_id *, CLIENT *);
extern  ni_children_res * _ni_children_2_svc(ni_id *, struct svc_req *);
#define _NI_LOOKUP ((u_long)10)
extern  ni_lookup_res * _ni_lookup_2(ni_lookup_args *, CLIENT *);
extern  ni_lookup_res * _ni_lookup_2_svc(ni_lookup_args *, struct svc_req *);
#define _NI_LIST ((u_long)11)
extern  ni_list_res * _ni_list_2(ni_name_args *, CLIENT *);
extern  ni_list_res * _ni_list_2_svc(ni_name_args *, struct svc_req *);
#define _NI_CREATEPROP ((u_long)12)
extern  ni_id_res * _ni_createprop_2(ni_createprop_args *, CLIENT *);
extern  ni_id_res * _ni_createprop_2_svc(ni_createprop_args *, struct svc_req *);
#define _NI_DESTROYPROP ((u_long)13)
extern  ni_id_res * _ni_destroyprop_2(ni_prop_args *, CLIENT *);
extern  ni_id_res * _ni_destroyprop_2_svc(ni_prop_args *, struct svc_req *);
#define _NI_READPROP ((u_long)14)
extern  ni_namelist_res * _ni_readprop_2(ni_prop_args *, CLIENT *);
extern  ni_namelist_res * _ni_readprop_2_svc(ni_prop_args *, struct svc_req *);
#define _NI_WRITEPROP ((u_long)15)
extern  ni_id_res * _ni_writeprop_2(ni_writeprop_args *, CLIENT *);
extern  ni_id_res * _ni_writeprop_2_svc(ni_writeprop_args *, struct svc_req *);
#define _NI_RENAMEPROP ((u_long)16)
extern  ni_id_res * _ni_renameprop_2(ni_propname_args *, CLIENT *);
extern  ni_id_res * _ni_renameprop_2_svc(ni_propname_args *, struct svc_req *);
#define _NI_LISTPROPS ((u_long)17)
extern  ni_namelist_res * _ni_listprops_2(ni_id *, CLIENT *);
extern  ni_namelist_res * _ni_listprops_2_svc(ni_id *, struct svc_req *);
#define _NI_CREATENAME ((u_long)18)
extern  ni_id_res * _ni_createname_2(ni_createname_args *, CLIENT *);
extern  ni_id_res * _ni_createname_2_svc(ni_createname_args *, struct svc_req *);
#define _NI_DESTROYNAME ((u_long)19)
extern  ni_id_res * _ni_destroyname_2(ni_nameindex_args *, CLIENT *);
extern  ni_id_res * _ni_destroyname_2_svc(ni_nameindex_args *, struct svc_req *);
#define _NI_READNAME ((u_long)20)
extern  ni_readname_res * _ni_readname_2(ni_nameindex_args *, CLIENT *);
extern  ni_readname_res * _ni_readname_2_svc(ni_nameindex_args *, struct svc_req *);
#define _NI_WRITENAME ((u_long)21)
extern  ni_id_res * _ni_writename_2(ni_writename_args *, CLIENT *);
extern  ni_id_res * _ni_writename_2_svc(ni_writename_args *, struct svc_req *);
#define _NI_RPARENT ((u_long)22)
extern  ni_rparent_res * _ni_rparent_2(void *, CLIENT *);
extern  ni_rparent_res * _ni_rparent_2_svc(void *, struct svc_req *);
#define _NI_LISTALL ((u_long)23)
extern  ni_listall_res * _ni_listall_2(ni_id *, CLIENT *);
extern  ni_listall_res * _ni_listall_2_svc(ni_id *, struct svc_req *);
#define _NI_BIND ((u_long)24)
extern  void * _ni_bind_2(ni_binding *, CLIENT *);
extern  void * _ni_bind_2_svc(ni_binding *, struct svc_req *);
#define _NI_READALL ((u_long)25)
extern  ni_readall_res * _ni_readall_2(u_int *, CLIENT *);
extern  ni_readall_res * _ni_readall_2_svc(u_int *, struct svc_req *);
#define _NI_CRASHED ((u_long)26)
extern  void * _ni_crashed_2(u_int *, CLIENT *);
extern  void * _ni_crashed_2_svc(u_int *, struct svc_req *);
#define _NI_RESYNC ((u_long)27)
extern  ni_status * _ni_resync_2(void *, CLIENT *);
extern  ni_status * _ni_resync_2_svc(void *, struct svc_req *);
#define _NI_LOOKUPREAD ((u_long)28)
extern  ni_proplist_res * _ni_lookupread_2(ni_lookup_args *, CLIENT *);
extern  ni_proplist_res * _ni_lookupread_2_svc(ni_lookup_args *, struct svc_req *);

#else /* Old Style C */
#define _NI_PING ((u_long)0)
extern  void * _ni_ping_2();
extern  void * _ni_ping_2_svc();
#define _NI_STATISTICS ((u_long)1)
extern  ni_proplist * _ni_statistics_2();
extern  ni_proplist * _ni_statistics_2_svc();
#define _NI_ROOT ((u_long)2)
extern  ni_id_res * _ni_root_2();
extern  ni_id_res * _ni_root_2_svc();
#define _NI_SELF ((u_long)3)
extern  ni_id_res * _ni_self_2();
extern  ni_id_res * _ni_self_2_svc();
#define _NI_PARENT ((u_long)4)
extern  ni_parent_res * _ni_parent_2();
extern  ni_parent_res * _ni_parent_2_svc();
#define _NI_CREATE ((u_long)5)
extern  ni_create_res * _ni_create_2();
extern  ni_create_res * _ni_create_2_svc();
#define _NI_DESTROY ((u_long)6)
extern  ni_id_res * _ni_destroy_2();
extern  ni_id_res * _ni_destroy_2_svc();
#define _NI_READ ((u_long)7)
extern  ni_proplist_res * _ni_read_2();
extern  ni_proplist_res * _ni_read_2_svc();
#define _NI_WRITE ((u_long)8)
extern  ni_id_res * _ni_write_2();
extern  ni_id_res * _ni_write_2_svc();
#define _NI_CHILDREN ((u_long)9)
extern  ni_children_res * _ni_children_2();
extern  ni_children_res * _ni_children_2_svc();
#define _NI_LOOKUP ((u_long)10)
extern  ni_lookup_res * _ni_lookup_2();
extern  ni_lookup_res * _ni_lookup_2_svc();
#define _NI_LIST ((u_long)11)
extern  ni_list_res * _ni_list_2();
extern  ni_list_res * _ni_list_2_svc();
#define _NI_CREATEPROP ((u_long)12)
extern  ni_id_res * _ni_createprop_2();
extern  ni_id_res * _ni_createprop_2_svc();
#define _NI_DESTROYPROP ((u_long)13)
extern  ni_id_res * _ni_destroyprop_2();
extern  ni_id_res * _ni_destroyprop_2_svc();
#define _NI_READPROP ((u_long)14)
extern  ni_namelist_res * _ni_readprop_2();
extern  ni_namelist_res * _ni_readprop_2_svc();
#define _NI_WRITEPROP ((u_long)15)
extern  ni_id_res * _ni_writeprop_2();
extern  ni_id_res * _ni_writeprop_2_svc();
#define _NI_RENAMEPROP ((u_long)16)
extern  ni_id_res * _ni_renameprop_2();
extern  ni_id_res * _ni_renameprop_2_svc();
#define _NI_LISTPROPS ((u_long)17)
extern  ni_namelist_res * _ni_listprops_2();
extern  ni_namelist_res * _ni_listprops_2_svc();
#define _NI_CREATENAME ((u_long)18)
extern  ni_id_res * _ni_createname_2();
extern  ni_id_res * _ni_createname_2_svc();
#define _NI_DESTROYNAME ((u_long)19)
extern  ni_id_res * _ni_destroyname_2();
extern  ni_id_res * _ni_destroyname_2_svc();
#define _NI_READNAME ((u_long)20)
extern  ni_readname_res * _ni_readname_2();
extern  ni_readname_res * _ni_readname_2_svc();
#define _NI_WRITENAME ((u_long)21)
extern  ni_id_res * _ni_writename_2();
extern  ni_id_res * _ni_writename_2_svc();
#define _NI_RPARENT ((u_long)22)
extern  ni_rparent_res * _ni_rparent_2();
extern  ni_rparent_res * _ni_rparent_2_svc();
#define _NI_LISTALL ((u_long)23)
extern  ni_listall_res * _ni_listall_2();
extern  ni_listall_res * _ni_listall_2_svc();
#define _NI_BIND ((u_long)24)
extern  void * _ni_bind_2();
extern  void * _ni_bind_2_svc();
#define _NI_READALL ((u_long)25)
extern  ni_readall_res * _ni_readall_2();
extern  ni_readall_res * _ni_readall_2_svc();
#define _NI_CRASHED ((u_long)26)
extern  void * _ni_crashed_2();
extern  void * _ni_crashed_2_svc();
#define _NI_RESYNC ((u_long)27)
extern  ni_status * _ni_resync_2();
extern  ni_status * _ni_resync_2_svc();
#define _NI_LOOKUPREAD ((u_long)28)
extern  ni_proplist_res * _ni_lookupread_2();
extern  ni_proplist_res * _ni_lookupread_2_svc();
#endif /* Old Style C */

#endif /* !_NI_PROT_H_RPCGEN */
