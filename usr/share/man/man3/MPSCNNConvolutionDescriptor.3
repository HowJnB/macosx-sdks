.TH "MPSCNNConvolutionDescriptor" 3 "Wed Jul 20 2016" "Version MetalPerformanceShaders-60" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNConvolutionDescriptor \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSCNN\&.h>\fP
.PP
Inherits NSObject, and <NSCopying>\&.
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBcnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:neuronFilter:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "NSUInteger \fBkernelWidth\fP"
.br
.ti -1c
.RI "NSUInteger \fBkernelHeight\fP"
.br
.ti -1c
.RI "NSUInteger \fBinputFeatureChannels\fP"
.br
.ti -1c
.RI "NSUInteger \fBoutputFeatureChannels\fP"
.br
.ti -1c
.RI "NSUInteger \fBstrideInPixelsX\fP"
.br
.ti -1c
.RI "NSUInteger \fBstrideInPixelsY\fP"
.br
.ti -1c
.RI "NSUInteger \fBgroups\fP"
.br
.ti -1c
.RI "const \fBMPSCNNNeuron\fP *__nullable \fBneuron\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework  The \fBMPSCNNConvolutionDescriptor\fP specifies a convolution descriptor 
.SH "Method Documentation"
.PP 
.SS "+ (nonnull instancetype) cnnConvolutionDescriptorWithKernelWidth: (NSUInteger) kernelWidth(NSUInteger) kernelHeight(NSUInteger) inputFeatureChannels(NSUInteger) outputFeatureChannels(const \fBMPSCNNNeuron\fP *__nullable) neuronFilter"
Creates a convolution descriptor with a neuron filter 
.PP
\fBParameters:\fP
.RS 4
\fIkernelWidth\fP The width of the filter window\&. Must be > 0\&. Large values will take a long time\&. 
.br
\fIkernelHeight\fP The height of the filter window\&. Must be > 0\&. Large values will take a long time\&. 
.br
\fIinputFeatureChannels\fP The number of feature channels in the input image\&. Must be >= 1\&. 
.br
\fIoutputFeatureChannels\fP The number of feature channels in the output image\&. Must be >= 1\&. 
.br
\fIneuronFilter\fP An optional neuron filter that can be applied to the output of convolution\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A valid \fBMPSCNNConvolutionDescriptor\fP object or nil, if failure\&. 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\- groups\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
Number of groups input and output channels are divided into\&. The default value is 1\&. Groups lets you reduce the parametrization\&. If groups is set to n, input is divided into n groups with inputFeatureChannels/n channels in each group\&. Similarly output is divided into n groups with outputFeatureChannels/n channels in each group\&. ith group in input is only connected to ith group in output so number of weights (parameters) needed is reduced by factor of n\&. Both inputFeatureChannels and outputFeatureChannels must be divisible by n and number of channels in each group must be multiple of 4\&. 
.SS "\- inputFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of feature channels per pixel in the input image\&. 
.SS "\- kernelHeight\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The height of the filter window\&. The default value is 3\&. Any positive non-zero value is valid, including even values\&. The position of the top edge of the filter window is given by offset\&.y - (kernelHeight>>1) 
.SS "\- kernelWidth\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The width of the filter window\&. The default value is 3\&. Any positive non-zero value is valid, including even values\&. The position of the left edge of the filter window is given by offset\&.x - (kernelWidth>>1) 
.SS "\- neuron\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [retain]\fP"
\fBMPSCNNNeuron\fP filter to be applied as part of convolution\&. Default is nil\&. 
.SS "\- outputFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of feature channels per pixel in the output image\&. 
.SS "\- strideInPixelsX\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The output stride (downsampling factor) in the x dimension\&. The default value is 1\&. 
.SS "\- strideInPixelsY\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The output stride (downsampling factor) in the y dimension\&. The default value is 1\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
