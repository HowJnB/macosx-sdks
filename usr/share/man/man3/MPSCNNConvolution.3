.TH "MPSCNNConvolution" 3 "Wed Jul 20 2016" "Version MetalPerformanceShaders-60" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNConvolution \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSCNN\&.h>\fP
.PP
Inherits \fBMPSCNNKernel\fP\&.
.PP
Inherited by \fBMPSCNNFullyConnected\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:convolutionDescriptor:kernelWeights:biasTerms:flags:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "NSUInteger \fBkernelWidth\fP"
.br
.ti -1c
.RI "NSUInteger \fBkernelHeight\fP"
.br
.ti -1c
.RI "NSUInteger \fBinputFeatureChannels\fP"
.br
.ti -1c
.RI "NSUInteger \fBoutputFeatureChannels\fP"
.br
.ti -1c
.RI "NSUInteger \fBstrideInPixelsX\fP"
.br
.ti -1c
.RI "NSUInteger \fBstrideInPixelsY\fP"
.br
.ti -1c
.RI "NSUInteger \fBgroups\fP"
.br
.ti -1c
.RI "const \fBMPSCNNNeuron\fP *__nullable \fBneuron\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework  The \fBMPSCNNConvolution\fP specifies a convolution\&. The \fBMPSCNNConvolution\fP convolves the input image with a set of filters, each producing one feature map in the output image\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithDevice: (nonnull id< MTLDevice >) NS_DESIGNATED_INITIALIZER"
Standard init with default properties per filter type 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device that the filter will be used on\&. May not be NULL\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a pointer to the newly initialized object\&. This will fail, returning nil if the device is not supported\&. Devices must be MTLFeatureSet_iOS_GPUFamily2_v1 or later\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSKernel\fP\&.
.PP
Reimplemented in \fBMPSCNNFullyConnected\fP\&.
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(const \fBMPSCNNConvolutionDescriptor\fP *__nonnull) convolutionDescriptor(const float *__nonnull) kernelWeights(const float *__nullable) biasTerms(MPSCNNConvolutionFlags) NS_DESIGNATED_INITIALIZER"
Initializes a convolution kernel 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The MTLDevice on which this \fBMPSCNNConvolution\fP filter will be used 
.br
\fIconvolutionDescriptor\fP A pointer to a \fBMPSCNNConvolutionDescriptor\fP\&. 
.br
\fIkernelWeights\fP A pointer to a weights array\&. Each entry is a float value\&. The number of entries is = inputFeatureChannels * outputFeatureChannels * kernelHeight * kernelWidth The layout of filter weight is so that it can be reinterpreted as 4D tensor (array) weight[ outputChannels ][ kernelHeight ][ kernelWidth ][ inputChannels / groups ] Weights are converted to half float (fp16) internally for best performance\&. 
.br
\fIbiasTerms\fP A pointer to bias terms to be applied to the convolution output\&. Each entry is a float value\&. The number of entries is = numberOfOutputFeatureMaps 
.br
\fIflags\fP Currently unused\&. Pass MPSCNNConvolutionFlagsNone
.RE
.PP
\fBReturns:\fP
.RS 4
A valid \fBMPSCNNConvolution\fP object or nil, if failure\&. 
.RE
.PP

.PP
Reimplemented in \fBMPSCNNFullyConnected\fP\&.
.SH "Property Documentation"
.PP 
.SS "\- groups\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
Number of groups input and output channels are divided into\&. 
.SS "\- inputFeatureChannels\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of feature channels per pixel in the input image\&. 
.SS "\- kernelHeight\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The height of the filter window\&. Any positive non-zero value is valid, including even values\&. The position of the top edge of the filter window is given by offset\&.y - (kernelHeight>>1) 
.SS "\- kernelWidth\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The width of the filter window\&. The position of the left edge of the filter window is given by offset\&.x - (kernelWidth>>1) 
.SS "\- neuron\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
\fBMPSCNNNeuron\fP filter to be applied as part of convolution\&. Can be nil in wich case no neuron activation fuction is applied\&. 
.SS "\- outputFeatureChannels\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of feature channels per pixel in the output image\&. 
.SS "\- strideInPixelsX\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The output stride (downsampling factor) in the x dimension\&. The default value is 1\&. 
.SS "\- strideInPixelsY\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The output stride (downsampling factor) in the y dimension\&. The default value is 1\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
