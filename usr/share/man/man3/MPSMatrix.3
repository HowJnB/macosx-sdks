.TH "MPSMatrix" 3 "Wed Jul 20 2016" "Version MetalPerformanceShaders-60" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSMatrix \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSMatrix\&.h>\fP
.PP
Inherits NSObject\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithBuffer:descriptor:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBNS_UNAVAILABLE\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "id< MTLDevice > \fBdevice\fP"
.br
.ti -1c
.RI "NSUInteger \fBrows\fP"
.br
.ti -1c
.RI "NSUInteger \fBcolumns\fP"
.br
.ti -1c
.RI "MPSDataType \fBdataType\fP"
.br
.ti -1c
.RI "NSUInteger \fBrowBytes\fP"
.br
.ti -1c
.RI "id< MTLBuffer > \fBdata\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework
.PP
A \fBMPSMatrix\fP object describes a 2-dimensional array of data and provides storage for its values\&. \fBMPSMatrix\fP objects serve as inputs and outputs of MPSMatrixKernel objects\&.
.PP
Implementation note: A \fBMPSMatrix\fP object maintains its internal storage using a MTLBuffer object and thus the same rules for maintaining coherency of a MTLBuffer's data between CPU memory and GPU memory apply to a \fBMPSMatrix\fP\&. Data is assumed to be stored in row-major layout\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithBuffer: (nonnull id< MTLBuffer >) buffer(nonnull \fBMPSMatrixDescriptor\fP *) descriptor"
Initialize a \fBMPSMatrix\fP object with a MTLBuffer\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP The MTLBuffer object which contains the data to use for the \fBMPSMatrix\fP\&. May not be NULL\&.
.br
\fIdescriptor\fP The \fBMPSMatrixDescriptor\fP\&. May not be NULL\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A valid \fBMPSMatrix\fP object or nil, if failure\&.
.RE
.PP
This function returns a \fBMPSMatrix\fP object which uses the supplied MTLBuffer\&. The dimensions and stride of the matrix are specified by the \fBMPSMatrixDescriptor\fP object\&.
.PP
The provided MTLBuffer must have enough storage to hold 
.PP
.nf
(descriptor.rows-1) * descriptor.rowBytes + descriptor.columns * (element size) bytes.
.fi
.PP
 
.SH "Property Documentation"
.PP 
.SS "\- columns\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of columns in the \fBMPSMatrix\fP\&. 
.SS "\- data\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
An MTLBuffer to store the data\&. 
.SS "\- dataType\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The type of the \fBMPSMatrix\fP data\&. 
.SS "\- device\fC [read]\fP, \fC [nonatomic]\fP, \fC [retain]\fP"
The device on which the \fBMPSMatrix\fP will be used\&. 
.SS "\- rowBytes\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The stride, in bytes, between corresponding elements of consecutive rows\&. 
.SS "\- rows\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of rows in the \fBMPSMatrix\fP\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
